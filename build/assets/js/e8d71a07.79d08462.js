"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[595],{3905:(e,n,a)=>{a.d(n,{Zo:()=>m,kt:()=>u});var i=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function c(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,i,t=function(e,n){if(null==e)return{};var a,i,t={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var l=i.createContext({}),s=function(e){var n=i.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):c(c({},n),e)),a},m=function(e){var n=s(e.components);return i.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var a=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(a),u=t,f=d["".concat(l,".").concat(u)]||d[u]||p[u]||r;return a?i.createElement(f,c(c({ref:n},m),{},{components:a})):i.createElement(f,c({ref:n},m))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=a.length,c=new Array(r);c[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:t,c[1]=o;for(var s=2;s<r;s++)c[s]=a[s];return i.createElement.apply(null,c)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7471:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var i=a(7462),t=(a(7294),a(3905));const r={sidebar_position:4},c="Compilaci\xf3n de un programa en C utilizando un Makefile.",o={unversionedId:"Tasks/makefile_aso",id:"Tasks/makefile_aso",title:"Compilaci\xf3n de un programa en C utilizando un Makefile.",description:"Introducci\xf3n",source:"@site/docs/Tasks/makefile_aso.md",sourceDirName:"Tasks",slug:"/Tasks/makefile_aso",permalink:"/docs/Tasks/makefile_aso",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/docs/Tasks/makefile_aso.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Taller 3: Git. Trabajando con ramas y uniones",permalink:"/docs/Tasks/ramas_uniones"},next:{title:"Ejercicios gesti\xf3n de paqueter\xeda",permalink:"/docs/Tasks/gestion_paqueteria_aso"}},l={},s=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Instalaci\xf3n del programa",id:"instalaci\xf3n-del-programa",level:2},{value:"A\xf1adir al PATH",id:"a\xf1adir-al-path",level:2},{value:"Desinstalaci\xf3n del programa",id:"desinstalaci\xf3n-del-programa",level:2}],m={toc:s};function p(e){let{components:n,...r}=e;return(0,t.kt)("wrapper",(0,i.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"compilaci\xf3n-de-un-programa-en-c-utilizando-un-makefile"},"Compilaci\xf3n de un programa en C utilizando un Makefile."),(0,t.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,t.kt)("p",null,"En esta entrada se ha elegido el programa escrito en C ",(0,t.kt)("inlineCode",{parentName:"p"},"vim")," con el que estaremos trabajando para la creaci\xf3n de un fichero Makefile que compile en C. "),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"Make")," es una utilidad que comprueba que archivos de c\xf3digo deben ser recompilados, para ejecutar este comando es necesario tener un fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"Makefile")," el cual indica a ",(0,t.kt)("inlineCode",{parentName:"p"},"Make")," como debe recompilar. Se puede presentar con los siguientes nombres:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"GNUmakefile"),(0,t.kt)("li",{parentName:"ul"},"makefile"),(0,t.kt)("li",{parentName:"ul"},"Makefile")),(0,t.kt)("p",null,"Dentro del fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"Makefile")," tenemos la estructura:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"    TARGET      :    PREREQUISITES\n    (objetivo)       (prerrequisitos o dependencias)\n\n        TAB          RECIPE\n        (tabulaci\xf3n) (receta o acciones)\n")),(0,t.kt)("h2",{id:"instalaci\xf3n-del-programa"},"Instalaci\xf3n del programa"),(0,t.kt)("p",null,"Primero debemos realizar la extracci\xf3n de ficheros:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"wget http://deb.debian.org/debian/pool/main/v/vim/vim_9.0.0626.orig.tar.xz\n")),(0,t.kt)("p",null,"Seguidamente descomprimimos el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"tar.xz")," generado:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"tar -Jxf vim_9.0.0626.orig.tar.xz \n")),(0,t.kt)("p",null,"Tras esto obtendremos un directorio con los recursos del programa:"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Term",src:a(2956).Z,width:"802",height:"146"})),(0,t.kt)("p",null,"Dentro del directorio ",(0,t.kt)("inlineCode",{parentName:"p"},"src")," nos encontramos con los ficheros ",(0,t.kt)("inlineCode",{parentName:"p"},".c")," o ficheros de c\xf3digo fuente y ",(0,t.kt)("inlineCode",{parentName:"p"},".h")," o headers que definen las funciones existentes en las librer\xedas:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"vagrant@maquina:~/aso_mf/vim-9.0.0626$ ls src/\nGvimExt               ex_getln.c       main.c            regexp_nfa.c\nINSTALL               feature.h        map.c             register.c\nINSTALLami.txt        fileio.c         mark.c            screen.c\nINSTALLmac.txt        filepath.c       match.c           scriptfile.c\nINSTALLpc.txt         findfile.c       mbyte.c           search.c\nINSTALLvms.txt        float.c          memfile.c         session.c\nINSTALLx.txt          fold.c           memfile_test.c    sha256.c\nMake_all.mak          getchar.c        memline.c         sign.c\nMake_ami.mak          globals.h        menu.c            sound.c\nMake_cyg.mak          gui.c            message.c         spell.c\nMake_cyg_ming.mak     gui.h            message_test.c    spell.h\nMake_ming.mak         gui_beval.c      misc1.c           spellfile.c\nMake_mvc.mak          gui_dwrite.cpp   misc2.c           spellsuggest.c\nMake_vms.mms          gui_dwrite.h     mouse.c           strings.c\nMakefile              gui_gtk.c        move.c            structs.h\nREADME.md             gui_gtk_f.c      msvc-latest.bat   syntax.c\nVisVim                gui_gtk_f.h      msvc2015.bat      tag.c\nalloc.c               gui_gtk_res.xml  msvc2017.bat      tearoff.bmp\nalloc.h               gui_gtk_vms.h    msvc2019.bat      tee\narabic.c              gui_gtk_x11.c    msvc2022.bat      term.c\narglist.c             gui_haiku.cc     msys32.bat        termdefs.h\nascii.h               gui_haiku.h      msys64.bat        terminal.c\nauto                  gui_motif.c      mysign            termlib.c\nautocmd.c             gui_photon.c     nbdebug.c         testdir\nbeval.c               gui_w32.c        nbdebug.h         testing.c\nbeval.h               gui_w32_rc.h     netbeans.c        textformat.c\nbigvim.bat            gui_x11.c        normal.c          textobject.c\nbigvim64.bat          gui_x11_pm.h     nv_cmdidxs.h      textprop.c\nblob.c                gui_xim.c        nv_cmds.h         time.c\nblowfish.c            gui_xmdlg.c      ops.c             toolbar.phi\nbuffer.c              gui_xmebw.c      option.c          toolcheck\nbufwrite.c            gui_xmebw.h      option.h          tools.bmp\nchange.c              gui_xmebwp.h     optiondefs.h      typemap\nchannel.c             gvimtutor        optionstr.c       typval.c\ncharset.c             hardcopy.c       os_amiga.c        ui.c\ncindent.c             hashtab.c        os_amiga.h        undo.c\nclientserver.c        help.c           os_dos.h          uninstall.c\nclipboard.c           highlight.c      os_haiku.h        usercmd.c\ncmdexpand.c           if_cscope.c      os_haiku.rdef.in  userfunc.c\ncmdhist.c             if_lua.c         os_mac.h          version.c\nconfig.h.in           if_mzsch.c       os_mac_conv.c     version.h\nconfig.mk.dist        if_mzsch.h       os_macosx.m       vim.h\nconfig.mk.in          if_ole.cpp       os_mswin.c        vim.ico\nconfigure             if_ole.h         os_qnx.c          vim.manifest\nconfigure.ac          if_ole.idl       os_qnx.h          vim.rc\ncreate_cmdidxs.vim    if_perl.xs       os_unix.c         vim.tlb\ncreate_nvcmdidxs.c    if_perlsfio.c    os_unix.h         vim9.h\ncreate_nvcmdidxs.vim  if_py_both.h     os_unixx.h        vim9cmds.c\ncrypt.c               if_python.c      os_vms.c          vim9compile.c\ncrypt_zip.c           if_python3.c     os_vms_conf.h     vim9execute.c\ndebugger.c            if_ruby.c        os_vms_fix.com    vim9expr.c\ndict.c                if_tcl.c         os_vms_mms.c      vim9instr.c\ndiff.c                if_xcmdsrv.c     os_w32dll.c       vim9script.c\ndigraph.c             iid_ole.c        os_w32exe.c       vim9type.c\ndlldata.c             indent.c         os_win32.c        vim_alert.ico\ndosinst.c             insexpand.c      os_win32.h        vim_error.ico\ndosinst.h             install-sh       osdef.sh          vim_icon.xbm\ndrawline.c            installman.sh    osdef1.h.in       vim_info.ico\ndrawscreen.c          installml.sh     osdef2.h.in       vim_mask.xbm\nedit.c                iscygpty.c       pathdef.sh        vim_quest.ico\nerrors.h              iscygpty.h       po                viminfo.c\neval.c                job.c            popupmenu.c       vimrun.c\nevalbuffer.c          json.c           popupwin.c        vimtutor\nevalfunc.c            json_test.c      profiler.c        which.sh\nevalvars.c            keymap.h         proto             winclip.c\nevalwindow.c          kword_test.c     proto.h           window.c\nex_cmdidxs.h          libvterm         protodef.h        xdiff\nex_cmds.c             link.390         pty.c             xpm\nex_cmds.h             link.sh          quickfix.c        xpm_w32.c\nex_cmds2.c            list.c           regexp.c          xpm_w32.h\nex_docmd.c            locale.c         regexp.h          xxd\nex_eval.c             macros.h         regexp_bt.c\n")),(0,t.kt)("p",null,"Este programa cuenta ya con un fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"Makefile")," por lo que no es necesario generarlo a traves de ",(0,t.kt)("inlineCode",{parentName:"p"},"configure"),".\nAl tener este paso adelantado vamos a realizar la instalaci\xf3n usando el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"make")," y para esto es necesario tener ",(0,t.kt)("inlineCode",{parentName:"p"},"build-essential"),", en caso de no tenerlo realizamos su instalaci\xf3n:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"sudo apt install build-essential\n")),(0,t.kt)("p",null,"El siguiente paso es obtener las dependencias:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"sudo apt-get build-dep vim-gtk3\n")),(0,t.kt)("p",null,"Necesitamos que se a\xf1adan todas las librerias en una misma ruta, para eso dentro del directorio ",(0,t.kt)("inlineCode",{parentName:"p"},"src")," ejecutamos la siguiente compilaci\xf3n personalizada:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"./configure --with-local-dir=/stranger \n")),(0,t.kt)("p",null,"*",(0,t.kt)("em",{parentName:"p"},"Nota"),": Las diferentes modificaciones vienen dentro del fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"src/INSTALL"),", lo encontramos gracias a la informaci\xf3n dada en el directorio ",(0,t.kt)("inlineCode",{parentName:"p"},"READMEdir")," donde tenemos una serie de ficheros que ",(0,t.kt)("inlineCode",{parentName:"p"},"README")," donde aporta informaci\xf3n para la instalaci\xf3n en diferentes sistemas."),(0,t.kt)("p",null,"Ejecutamos ",(0,t.kt)("inlineCode",{parentName:"p"},"make")," y finalizamos la instalaci\xf3n ejecutando ",(0,t.kt)("inlineCode",{parentName:"p"},"sudo make install"),".\nLa ruta en la que se instala por defecto es ",(0,t.kt)("inlineCode",{parentName:"p"},"/usr/local/bin"),", y si comprobamos donde se encuentra el binario tras la instalaci\xf3n vemos la salida:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"vagrant@maquina:~/aso/vim-9.0.0626/src$ which vim\n/usr/local/bin/vim\n")),(0,t.kt)("p",null,"Si realizamos un ",(0,t.kt)("inlineCode",{parentName:"p"},"tree")," del directorio vemos:"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Term",src:a(9109).Z,width:"639",height:"486"})),(0,t.kt)("p",null,"Y de este modo se ve una demostraci\xf3n de ejecuci\xf3n del binario:"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Term",src:a(4216).Z,width:"712",height:"376"})),(0,t.kt)("h2",{id:"a\xf1adir-al-path"},"A\xf1adir al PATH"),(0,t.kt)("p",null,"Como en el ",(0,t.kt)("inlineCode",{parentName:"p"},".bashrc")," ya esta establecida por defecto la ruta de ejecuci\xf3n para ",(0,t.kt)("inlineCode",{parentName:"p"},"/usr/local/bin")," no es necesario indicarle una nueva.\nEn cambio si queremos a\xf1adir el binario en una ruta distinta al ",(0,t.kt)("inlineCode",{parentName:"p"},"/usr/local")," debemos a\xf1adir en la compilaci\xf3n:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"./configure --prefix=/[ruta] --with-local-dir=/stranger \n")),(0,t.kt)("p",null,"Si realizamos esta opci\xf3n debemos indicar en ",(0,t.kt)("inlineCode",{parentName:"p"},".bashrc")," la ruta:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Primero sacamos y copiamos cual es el PATH del espcaio de usuario:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"echo $PATH\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Una vez tengamos esa l\xednea, entramos al ",(0,t.kt)("inlineCode",{parentName:"li"},".bashrc")," y a\xf1adimos:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'PATH="[$PATH]:[Ruta del binario]"\n\nexport PATH\n')),(0,t.kt)("h2",{id:"desinstalaci\xf3n-del-programa"},"Desinstalaci\xf3n del programa"),(0,t.kt)("p",null,"Para realizar la desinstalaci\xf3n del paquete \xfanicamente debemos ejecutar desde ",(0,t.kt)("inlineCode",{parentName:"p"},"src")," el comando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"sudo make uninstall\n")),(0,t.kt)("p",null,"Al realizarse podemos comprobar que borr\xf3 todo lo guardado en el directorio del programa:"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Term",src:a(4060).Z,width:"635",height:"140"})),(0,t.kt)("p",null,"*",(0,t.kt)("em",{parentName:"p"},"Nota"),": Si hemos usado una ruta personalizada debemos acordarnos de eliminarla del ",(0,t.kt)("strong",{parentName:"p"},"PATH"),"."))}p.isMDXComponent=!0},9109:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/makefileASO-2-fb649f36cef0a53f0957c71d174166d3.png"},4060:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/makefileASO-3-8f6336b7aa26acd1652e0368b723916c.png"},2956:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/makefileASO-f0fe5c76fe632d8fb5541fc983228293.png"},4216:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/recording-2022-10-18-09-46-53-c10fb41bbcd8ecc6f0e6ff942672d0df.gif"}}]);