"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[392],{3905:(e,a,n)=>{n.d(a,{Zo:()=>l,kt:()=>u});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=t.createContext({}),s=function(e){var a=t.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},l=function(e){var a=s(e.components);return t.createElement(c.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,g=m["".concat(c,".").concat(u)]||m[u]||d[u]||o;return n?t.createElement(g,i(i({ref:a},l),{},{components:n})):t.createElement(g,i({ref:a},l))}));function u(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var c in a)hasOwnProperty.call(a,c)&&(p[c]=a[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8909:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var t=n(7462),r=(n(7294),n(3905));const o={sidebar_position:15},i="Desarrollo y despliegue de una aplicaci\xf3n Java simple",p={unversionedId:"Tasks/tomcat",id:"Tasks/tomcat",title:"Desarrollo y despliegue de una aplicaci\xf3n Java simple",description:"Instalaci\xf3n y configuraci\xf3n de Tomcat y Maven",source:"@site/docs/Tasks/tomcat.md",sourceDirName:"Tasks",slug:"/Tasks/tomcat",permalink:"/docs/Tasks/tomcat",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/tomcat.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"PRIMER BOLET\xcdN PL/SQL",permalink:"/docs/Tasks/plsql_basica"},next:{title:"Instalaci\xf3n de WordPress",permalink:"/docs/Tasks/wordpress"}},c={},s=[{value:"Instalaci\xf3n y configuraci\xf3n de Tomcat y Maven",id:"instalaci\xf3n-y-configuraci\xf3n-de-tomcat-y-maven",level:2},{value:"Entrega",id:"entrega",level:2},{value:"1. Entrega una captura de la aplicaci\xf3n de administraci\xf3n Tomcat-Manager una vez que la aplicaci\xf3n est\xe1 desplegada, donde se comprueba que la aplicaci\xf3n est\xe1 desplegada.",id:"1-entrega-una-captura-de-la-aplicaci\xf3n-de-administraci\xf3n-tomcat-manager-una-vez-que-la-aplicaci\xf3n-est\xe1-desplegada-donde-se-comprueba-que-la-aplicaci\xf3n-est\xe1-desplegada",level:4},{value:"2. Entrega una captura de pantalla accediendo a la aplicaci\xf3n web.",id:"2-entrega-una-captura-de-pantalla-accediendo-a-la-aplicaci\xf3n-web",level:4}],l={toc:s};function d(e){let{components:a,...o}=e;return(0,r.kt)("wrapper",(0,t.Z)({},l,o,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"desarrollo-y-despliegue-de-una-aplicaci\xf3n-java-simple"},"Desarrollo y despliegue de una aplicaci\xf3n Java simple"),(0,r.kt)("h2",{id:"instalaci\xf3n-y-configuraci\xf3n-de-tomcat-y-maven"},"Instalaci\xf3n y configuraci\xf3n de Tomcat y Maven"),(0,r.kt)("p",null,"Primero hay que instalar ",(0,r.kt)("strong",{parentName:"p"},"tomcat9")," (al realizar esta acci\xf3n obtenemos autom\xe1ticamente ",(0,r.kt)("strong",{parentName:"p"},"openjdk-11-jre-headless")," necesario para ejecutar ",(0,r.kt)("strong",{parentName:"p"},"maven"),") para seguir con la configuraci\xf3n del panel de administraci\xf3n. Para esto instalamos ",(0,r.kt)("strong",{parentName:"p"},"tomcat9-admin")," y editamos el fichero ",(0,r.kt)("strong",{parentName:"p"},"/etc/tomcat9/tomcat-users.xml")," para a\xf1adir el usuario ",(0,r.kt)("strong",{parentName:"p"},"admin"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<role rolename="manager-gui"/>\n<user username="tomcat" password="s3cret" roles="manager-gui"/>\n')),(0,r.kt)("p",null,"Despu\xe9s, para que se apliquen los cambios, es necesario reiniciar el servicio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart tomcat9\n")),(0,r.kt)("p",null,"Con esto ya podemos entrar a la p\xe1gina de administraci\xf3n de tomcat siguiendo el esquema ",(0,r.kt)("strong",{parentName:"p"},"ip:8080/manager/html"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tomcat",src:n(7612).Z,width:"1048",height:"655"})),(0,r.kt)("p",null,"Seguidamente instalamos ",(0,r.kt)("strong",{parentName:"p"},"maven"),", que es un gestor de dependencias para proyectos Java y que nos va a permitir compilar y empaquetar nuestro proyecto Java."),(0,r.kt)("p",null,"Usando maven se va a generar el siguiente proyecto Java:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"mvn archetype:generate -DgroupId=com.app.example -DartifactId=javita -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n")),(0,r.kt)("p",null,"Donde '-DgroupId' es el nombre del paquete, '-DartifactId' es el nombre del proyecto y '-DarchetypeArtifactId' es el tipo de proyecto que queremos crear."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tomcat",src:n(9255).Z,width:"790",height:"354"})),(0,r.kt)("p",null,"Y se crear\xe1 una estructura de directorios como la siguiente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"debian@nami:~$ tree javita\n\njavita\n\u251c\u2500\u2500 pom.xml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 main\n    \u2502\xa0\xa0 \u2514\u2500\u2500 java\n    \u2502\xa0\xa0     \u2514\u2500\u2500 com\n    \u2502\xa0\xa0         \u2514\u2500\u2500 app\n    \u2502\xa0\xa0             \u2514\u2500\u2500 example\n    \u2502\xa0\xa0                 \u2514\u2500\u2500 App.java\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 com\n                \u2514\u2500\u2500 app\n                    \u2514\u2500\u2500 example\n                        \u2514\u2500\u2500 AppTest.java\n\n11 directories, 3 files\n")),(0,r.kt)("p",null,"A continuaci\xf3n, editamos el fichero ",(0,r.kt)("strong",{parentName:"p"},"pom.xml"),", fichero de configuraci\xf3n de maven que contiene informaci\xf3n sobre el proyecto y la configuraci\xf3n de las dependencias. Sustituimos la informaci\xf3n existente por la siguiente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version = "1.0" encoding = "UTF-8"?>\n<project xmlns = "http://maven.apache.org/POM/4.0.0" \n   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"\n\nxsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n<modelVersion>4.0.0</modelVersion>\n\n   <groupId>com.tutorialspoint</groupId>\n   <artifactId>holaa</artifactId>\n   <version>1</version>\n   <packaging>war</packaging>\n   \n   <parent>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-parent</artifactId>\n      <version>2.3.0.RELEASE</version>\n      <relativePath/> \n   </parent>\n\n   <properties>\n      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n      <java.version>1.8</java.version>\n      <tomcat.version>9.0.37</tomcat.version>\n   </properties>\n\n   <dependencies>\n      <dependency>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-web</artifactId>\n      </dependency>\n      <dependency>  \n         <groupId>org.springframework.boot</groupId>  \n     <artifactId>spring-boot-starter-tomcat</artifactId>  \n     <scope>provided</scope>  \n      </dependency>   \n      <dependency>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-test</artifactId>\n         <scope>test</scope>\n      </dependency>\n   </dependencies>\n\n   <build>\n      <plugins>\n         <plugin>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-maven-plugin</artifactId>\n         </plugin>\n      </plugins>\n   </build>\n   \n</project>\n')),(0,r.kt)("p",null,"Y editamos el fichero ",(0,r.kt)("strong",{parentName:"p"},"App.java")," que se encuentra en la ruta ",(0,r.kt)("strong",{parentName:"p"},"src/main/java/com/app/example/App.java"),", con esto se construir\xe1 la aplicaci\xf3n:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.app.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class App extends SpringBootServletInitializer {\n   @Override\n   protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n      return application.sources(App.class);\n   }\n   public static void main(String[] args) {\n      SpringApplication.run(App.class, args);\n   }\n\n   @RequestMapping(value = "/")\n   public String hello() {\n      return "<center>Holaaa!!! \u02da*\u2022\u0329\u0329\u0359\u2729\u2022\u0329\u0329\u0359*\u02da\uff0a</center>";\n   }\n}\n')),(0,r.kt)("p",null,"Ahora nos movemos al directorio del proyecto, en mi caso javita, y ejecutamos el siguiente comando para compilar el proyecto:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mvn package \n")),(0,r.kt)("p",null,"Se ha generado un nuevo directorio llamado ",(0,r.kt)("strong",{parentName:"p"},"target")," que contiene el fichero ",(0,r.kt)("strong",{parentName:"p"},"holaa.war"),". Este fichero es el que vamos a desplegar en tomcat. "),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tomcat",src:n(238).Z,width:"1016",height:"613"})),(0,r.kt)("p",null,"Como se esta usando desde un servidor y solo disponemos de terminal se debe desplegar de otra manera, en el directorio ",(0,r.kt)("strong",{parentName:"p"},"/var/lib/tomcat9/webapps/")," copiamos el fichero ",(0,r.kt)("strong",{parentName:"p"},"holaa.war")," ya que de esta manera se desplegar\xe1 autom\xe1ticamente. Reiniciamos el servicio de tomcat para que se despliegue la aplicaci\xf3n:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart tomcat\n")),(0,r.kt)("p",null,"Ahora podemos acceder a la aplicaci\xf3n desde el navegador y monitorear desde ",(0,r.kt)("strong",{parentName:"p"},"tomcat-manager"),"."),(0,r.kt)("h2",{id:"entrega"},"Entrega"),(0,r.kt)("h4",{id:"1-entrega-una-captura-de-la-aplicaci\xf3n-de-administraci\xf3n-tomcat-manager-una-vez-que-la-aplicaci\xf3n-est\xe1-desplegada-donde-se-comprueba-que-la-aplicaci\xf3n-est\xe1-desplegada"},"1. Entrega una captura de la aplicaci\xf3n de administraci\xf3n Tomcat-Manager una vez que la aplicaci\xf3n est\xe1 desplegada, donde se comprueba que la aplicaci\xf3n est\xe1 desplegada."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tomcat",src:n(260).Z,width:"1283",height:"624"})),(0,r.kt)("h4",{id:"2-entrega-una-captura-de-pantalla-accediendo-a-la-aplicaci\xf3n-web"},"2. Entrega una captura de pantalla accediendo a la aplicaci\xf3n web."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tomcat",src:n(992).Z,width:"647",height:"203"})))}d.isMDXComponent=!0},9255:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller1IAW5-2-6595eacc6198a0009aecc4fd723938fd.png"},238:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller1IAW5-3-b0ee111b92cd13386c88a7842fbd44f0.png"},260:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller1IAW5-4-dbd34e8267bb4ee82697d4507f2de72f.png"},992:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller1IAW5-5-19bd255ad67cb17a91d200763e43f54b.png"},7612:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller1IAW5-fb61bb107c245d185eef1cc070412858.png"}}]);