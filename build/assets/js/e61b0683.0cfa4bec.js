"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[1485],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>m});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),d=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(a),g=r,m=u["".concat(s,".").concat(g)]||u[g]||p[g]||l;return a?t.createElement(m,i(i({ref:n},c),{},{components:a})):t.createElement(m,i({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},89352:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var t=a(87462),r=(a(67294),a(3905));const l={sidebar_position:56},i="IC/DC con Jenkins",o={unversionedId:"Tasks/jenkins_ICDC",id:"Tasks/jenkins_ICDC",title:"IC/DC con Jenkins",description:"El objetivo de esta pr\xe1ctica es el desarrollo gradual de un Pipeline que vaya realizando tareas sobre el repositorio de una aplicaci\xf3n.",source:"@site/docs/Tasks/jenkins_ICDC.md",sourceDirName:"Tasks",slug:"/Tasks/jenkins_ICDC",permalink:"/docs/Tasks/jenkins_ICDC",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/jenkins_ICDC.md",tags:[],version:"current",sidebarPosition:56,frontMatter:{sidebar_position:56},sidebar:"tutorialSidebar",previous:{title:"Jenkins: Comprobaci\xf3n de HTML5 v\xe1lido y despliegue en surge.sh (test y deploy)",permalink:"/docs/Tasks/jenkins_surge"},next:{title:"Kubernetes: Trabajando con Pods",permalink:"/docs/Tasks/kubernetes_pods"}},s={},d=[{value:"Ejercicio 1: Construcci\xf3n de una imagen docker",id:"ejercicio-1-construcci\xf3n-de-una-imagen-docker",level:2},{value:"Entrega",id:"entrega",level:2},{value:"1. Una captura de pantalla donde se vea la salida de un build que se ha ejecutado de manera correcta.",id:"1-una-captura-de-pantalla-donde-se-vea-la-salida-de-un-build-que-se-ha-ejecutado-de-manera-correcta",level:3},{value:"2. Una captura de pantalla de tu cuenta de Docker Hub donde se vea la imagen subida de \xfaltimo build.",id:"2-una-captura-de-pantalla-de-tu-cuenta-de-docker-hub-donde-se-vea-la-imagen-subida-de-\xfaltimo-build",level:3},{value:"3. Introduce un fallo en el Dockerfile y muestra la salida del build donde se produce el error.",id:"3-introduce-un-fallo-en-el-dockerfile-y-muestra-la-salida-del-build-donde-se-produce-el-error",level:3},{value:"4. Entrega la URL del repositorio para ver el Jenkinsfile.",id:"4-entrega-la-url-del-repositorio-para-ver-el-jenkinsfile",level:3},{value:"5. Pantallazo con el correo que has recibido de la ejecuci\xf3n del pipeline.",id:"5-pantallazo-con-el-correo-que-has-recibido-de-la-ejecuci\xf3n-del-pipeline",level:3},{value:"Ejercicio 2: Despliegue de la aplicaci\xf3n",id:"ejercicio-2-despliegue-de-la-aplicaci\xf3n",level:2},{value:"Entrega",id:"entrega-1",level:2},{value:"1. El contenido del fichero Jenkinsfile.",id:"1-el-contenido-del-fichero-jenkinsfile",level:3},{value:"2. Las credenciales que has guardado en Jenkins.",id:"2-las-credenciales-que-has-guardado-en-jenkins",level:3},{value:"3. Demuestra al profesor como se realiza la IC/DC completo.",id:"3-demuestra-al-profesor-como-se-realiza-la-icdc-completo",level:3}],c={toc:d},u="wrapper";function p(e){let{components:n,...l}=e;return(0,r.kt)(u,(0,t.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"icdc-con-jenkins"},"IC/DC con Jenkins"),(0,r.kt)("p",null,"El objetivo de esta pr\xe1ctica es el desarrollo gradual de un Pipeline que vaya realizando tareas sobre el repositorio de una aplicaci\xf3n."),(0,r.kt)("p",null,"La aplicaci\xf3n con la que vamos a trabajar ser\xe1 tu fork de la aplicaci\xf3n django Polls. Como hemos visto esta aplicaci\xf3n que implementa el tutorial de Django tiene implementado un m\xf3dulo de pruebas."),(0,r.kt)("p",null,"Vamos a construir el Pipeline en varias fases:"),(0,r.kt)("h2",{id:"ejercicio-1-construcci\xf3n-de-una-imagen-docker"},"Ejercicio 1: Construcci\xf3n de una imagen docker"),(0,r.kt)("p",null,"Partimos del pipeline que hemos desarrollado en el ",(0,r.kt)("a",{parentName:"p",href:"https://fp.josedomingo.org/iaw2223/7_ic/t3.html"},"Taller 3: Integraci\xf3n continua de aplicaci\xf3n django (Test)"),", donde hemos automatizado el test de la aplicaci\xf3n."),(0,r.kt)("p",null,"(URL de mi repositorio: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/belennazareth/django_tutorial"},"https://github.com/belennazareth/django_tutorial"),")"),(0,r.kt)("p",null,"Modifica el pipeline para que despu\xe9s de hacer el test sobre la aplicaci\xf3n, genere una imagen docker. Tienes que tener en cuenta que los pasos para generar la imagen lo tienes que realizar en la m\xe1quina donde est\xe1 instalado Jenkins. Tendr\xe1s que a\xf1adir las siguientes acciones:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Construir la imagen con el ",(0,r.kt)("inlineCode",{parentName:"li"},"Dockerfile")," que tengas en el repositorio."),(0,r.kt)("li",{parentName:"ol"},"Subir la imagen a tu cuenta de Docker Hub."),(0,r.kt)("li",{parentName:"ol"},"Borrar la imagen que se ha creado.")),(0,r.kt)("p",null,"Por lo tanto tienes que estudiar el apartado ",(0,r.kt)("a",{parentName:"p",href:"https://fp.josedomingo.org/iaw2223/7_ic/jenkins/runner.html"},"Ejecuci\xf3n de un pipeline en varios runner")," para ejecutar el pipeline en dos runner:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"En el contenedor docker a partir de la imagen python:3 los pasos del taller 3."),(0,r.kt)("li",{parentName:"ul"},"En la m\xe1quina de Jenkins los pasos de este ejercicio.")),(0,r.kt)("p",null,"Otras consideraciones:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cuando termine de ejecutar el pipeline te mandar\xe1 un correo de notificaci\xf3n."),(0,r.kt)("li",{parentName:"ul"},"El pipeline se guardar\xe1 en un fichero Jenkinsfile en tu repositorio, y la configuraci\xf3n del pipeline har\xe1 referencia a \xe9l.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"pipeline {\n    agent none\n    stages {\n        stage ('Testing django') { \n            agent { \n                docker { image 'python:3'\n                args '-u root:root'\n                }\n            }\n            stages {\n                stage('Clone') {\n                    steps {\n                        git branch:'master',url:'https://github.com/belennazareth/django_tutorial.git'\n                    }\n                }\n                stage('Install') {\n                    steps {\n                        sh 'pip install -r requirements.txt'\n                    }\n                }\n                stage('Test') {\n                    steps {\n                        sh 'python3 manage.py test'\n                    }\n                } \n            }\n        }\n        stage('Upload img') {\n            agent any\n            stages {\n                stage('Build and push') {\n                    steps {\n                        script {\n                            withDockerRegistry([credentialsId: 'DOCKER_HUB', url: '']) {\n                            def dockerImage = docker.build(\"belennazareth/django_tutorial:${env.BUILD_ID}\")\n                            dockerImage.push()\n                            }\n                        }\n                    }\n                }\n                stage('Remove image') {\n                    steps {\n                        script {\n                            sh \"docker rmi belennazareth/django_tutorial:${env.BUILD_ID}\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n    post {\n        always {\n            mail to: 'nazare@nazareth.jenkins.org',\n            subject: \"Status of pipeline: ${currentBuild.fullDisplayName}\",\n            body: \"${env.BUILD_URL} has result ${currentBuild.result}\"\n        }\n    }\n}\n")),(0,r.kt)("p",null,"Hay que hacer un Dockerfile para que se pueda construir la imagen:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM python:3\nWORKDIR /usr/src/app\nMAINTAINER Belen Nazareth Duran "belennazareth29@gmail.com"\nRUN pip install --root-user-action=ignore --upgrade pip && pip install --root-user-action=ignore django mysqlclient \nCOPY . /usr/src/app \nRUN mkdir static\nADD polls.sh /usr/src/app/\nRUN chmod +x /usr/src/app/polls.sh\nENTRYPOINT ["/usr/src/app/polls.sh"]\n')),(0,r.kt)("p",null,"Tambi\xe9n hay que hacer un fichero polls.sh para que se pueda ejecutar la aplicaci\xf3n:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"#! /bin/sh\n\nsleep 2\npython3 manage.py makemigrations\npython3 manage.py migrate\npython3 manage.py createsuperuser --noinput\npython3 manage.py collectstatic --noinput\npython3 manage.py runserver 0.0.0.0:8005\n")),(0,r.kt)("p",null,'En administraci\xf3n de credenciales hay que a\xf1adir una credencial de tipo "Username with password" con el nombre "DOCKER_HUB" y las credenciales de Docker Hub.'),(0,r.kt)("p",null,"Para que funcione el env\xedo de correos hay que instalar postfix en la m\xe1quina de Jenkins:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install postfix\n")),(0,r.kt)("p",null,"En la configuraci\xf3n de postfix hay que  seleccionar ",(0,r.kt)("inlineCode",{parentName:"p"},"sitio de internet"),", poner como ",(0,r.kt)("inlineCode",{parentName:"p"},"dominio")," el nombre de la m\xe1quina de Jenkins (en mi caso nazareth.jenkins.org) y como ",(0,r.kt)("inlineCode",{parentName:"p"},"nombre de sistema")," en el Jenkinsfile, el nombre de la m\xe1quina de Jenkins (en mi caso nazare)."),(0,r.kt)("p",null,"Instalamos mail:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install bsd-mailx\n")),(0,r.kt)("h2",{id:"entrega"},"Entrega"),(0,r.kt)("h3",{id:"1-una-captura-de-pantalla-donde-se-vea-la-salida-de-un-build-que-se-ha-ejecutado-de-manera-correcta"},"1. Una captura de pantalla donde se vea la salida de un build que se ha ejecutado de manera correcta."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(43335).Z,width:"1472",height:"794"})),(0,r.kt)("h3",{id:"2-una-captura-de-pantalla-de-tu-cuenta-de-docker-hub-donde-se-vea-la-imagen-subida-de-\xfaltimo-build"},"2. Una captura de pantalla de tu cuenta de Docker Hub donde se vea la imagen subida de \xfaltimo build."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(27030).Z,width:"1383",height:"1011"})),(0,r.kt)("h3",{id:"3-introduce-un-fallo-en-el-dockerfile-y-muestra-la-salida-del-build-donde-se-produce-el-error"},"3. Introduce un fallo en el Dockerfile y muestra la salida del build donde se produce el error."),(0,r.kt)("p",null,"Edito el Dockerfile para que no se pueda construir la imagen:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM python:3\nWORKDIR /usr/src/app\nMAINTAINER Belen Nazareth Duran "belennazareth29@gmail.com"\nRUN pip install --root-user-action=ignore --upgrade pip && pip install --root-user-action=ignore django mysqlclient \nCOPY * /usr/src/app # \ud83d\udc31 modifico esta l\xednea . por * \ud83d\udc31\nRUN mkdir static\nADD polls.sh /usr/src/app/\nRUN chmod +x /usr/src/app/polls.sh\nENTRYPOINT ["/usr/src/app/polls.sh"]\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(43037).Z,width:"1472",height:"794"})),(0,r.kt)("h3",{id:"4-entrega-la-url-del-repositorio-para-ver-el-jenkinsfile"},"4. Entrega la URL del repositorio para ver el Jenkinsfile."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/belennazareth/django_tutorial"},"https://github.com/belennazareth/django_tutorial")),(0,r.kt)("h3",{id:"5-pantallazo-con-el-correo-que-has-recibido-de-la-ejecuci\xf3n-del-pipeline"},"5. Pantallazo con el correo que has recibido de la ejecuci\xf3n del pipeline."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(32404).Z,width:"1127",height:"285"})),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"ejercicio-2-despliegue-de-la-aplicaci\xf3n"},"Ejercicio 2: Despliegue de la aplicaci\xf3n"),(0,r.kt)("p",null,"Ampl\xeda el pipeline anterior para que tenga una \xfaltima etapa donde se haga el despliegue de la imagen que se ha subido a Docker Hub en tu entorno de producci\xf3n (VPS). Algunas pistas:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Busca informaci\xf3n de c\xf3mo hacer el despliegue a un servidor remoto (ssh, buscando alg\xfan plugin con esa funcionalidad,\u2026)"),(0,r.kt)("li",{parentName:"ul"},"Si vas a hacer conexiones por ssh, tendr\xe1s que guardar una credencial en tu Jenkins con el nombre de usuario y contrase\xf1a."),(0,r.kt)("li",{parentName:"ul"},"Para el despliegue deber\xe1 usar el fichero docker-compose.yaml que has generado en otras pr\xe1cticas."),(0,r.kt)("li",{parentName:"ul"},"Se deber\xe1 borrar el contenedor con la versi\xf3n anterior, descargar la nueva imagen y crear un nuevo contenedor.")),(0,r.kt)("p",null,"Otras consideraciones:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cambia el disparador del pipeline. Config\xfaralo con un webhook de github, para que cada vez que se produce un push se ejecute el pipeline. Para que el webhook pueda acceder a tu Jenkins puedes usar ngrok.")),(0,r.kt)("p",null,'Para el despliegue remoto he usado el plugin de Jenkins "SSH Agent".'),(0,r.kt)("p",null,"Entramos en administraci\xf3n de credenciales y a\xf1adimos una credencial:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(19562).Z,width:"1599",height:"927"})),(0,r.kt)("p",null,"Para poner en marcha ngrok:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok http 8080\n")),(0,r.kt)("p",null,"Usamos este docker-compose.yaml (de la pr\xe1ctica 2 de la unidad 6: Implantaci\xf3n de aplicaciones web Python en docker):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3.3'\nservices:\n  django-jenkins:\n    container_name: django-jenkins\n    image: belennazareth/django_tutorial:${DJANGO_VERSION}\n    restart: always\n    environment:\n      ALLOWED_HOSTS: \"*\"\n      HOST: bd_mariadb_django_jenkins\n      USUARIO: django\n      CONTRA: django\n      BASE_DATOS: django\n      DJANGO_SUPERUSER_PASSWORD: admin\n      DJANGO_SUPERUSER_USERNAME: admin\n      DJANGO_SUPERUSER_EMAIL: admin@admin.org\n    ports:\n      - 8085:8005\n    depends_on:\n      - db_django_jenkins\n  db_django_jenkins:\n    container_name: bd_mariadb_django_jenkins\n    image: mariadb:10.5\n    restart: always\n    environment:\n      MARIADB_ROOT_PASSWORD: root\n      MARIADB_DATABASE: django\n      MARIADB_USER: django\n      MARIADB_PASSWORD: django\n    volumes:\n      - mariadb_data_django_jenkins:/var/lib/mysql\nvolumes:\n    mariadb_data_django_jenkins:\n")),(0,r.kt)("p",null,"Copiamos el enlace que nos da y lo pegamos en la configuraci\xf3n de github en la secci\xf3n de webhooks."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(58199).Z,width:"1420",height:"963"})),(0,r.kt)("p",null,'Para que funcione el webhook, en la configuraci\xf3n del pipeline, en la secci\xf3n de "Build Triggers" hay que seleccionar "GitHub hook trigger for GITScm polling".'),(0,r.kt)("h2",{id:"entrega-1"},"Entrega"),(0,r.kt)("h3",{id:"1-el-contenido-del-fichero-jenkinsfile"},"1. El contenido del fichero Jenkinsfile."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"pipeline {\n    agent none\n    stages {\n        stage ('Testing django') { \n            agent { \n                docker { image 'python:3'\n                args '-u root:root'\n                }\n            }\n            stages {\n                stage('Clone') {\n                    steps {\n                        git branch:'master',url:'https://github.com/belennazareth/django_tutorial.git'\n                    }\n                }\n                stage('Install') {\n                    steps {\n                        sh 'pip install -r requirements.txt'\n                    }\n                }\n                stage('Test') {\n                    steps {\n                        sh 'python3 manage.py test'\n                    }\n                } \n            }\n        }\n        stage('Upload img') {\n            agent any\n            stages {\n                stage('Build and push') {\n                    steps {\n                        script {\n                            withDockerRegistry([credentialsId: 'DOCKER_HUB', url: '']) {\n                            def dockerImage = docker.build(\"belennazareth/django_tutorial:${env.BUILD_ID}\")\n                            dockerImage.push()\n                            }\n                        }\n                    }\n                }\n                stage('Remove image') {\n                    steps {\n                        script {\n                            sh \"docker rmi belennazareth/django_tutorial:${env.BUILD_ID}\"\n                        }\n                    }\n                }\n            }\n        }\n        stage('Deploy') {\n            agent any\n            steps {\n                script {\n                    String tagRemove = env.BUILD_ID.toInteger() - 1\n                    sshagent(credentials: ['SSH_VPS']) {\n                        sh 'ssh -o StrictHostKeyChecking=no poke@buizel.ottershell.es docker-compose down'\n                        sh \"ssh -o StrictHostKeyChecking=no poke@buizel.ottershell.es docker rmi belennazareth/django_tutorial:${tagRemove}\"\n                        sh \"ssh -o StrictHostKeyChecking=no poke@buizel.ottershell.es docker pull belennazareth/django_tutorial:${env.BUILD_ID}\"\n                        sh \"ssh -o StrictHostKeyChecking=no poke@buizel.ottershell.es wget https://raw.githubusercontent.com/belennazareth/django_tutorial/master/docker-compose.yaml -O docker-compose.yaml\"\n                        sh \"ssh -o StrictHostKeyChecking=no poke@buizel.ottershell.es DJANGO_VERSION=${env.BUILD_ID} docker-compose up -d --force-recreate\"\n                    }\n                }\n            }\n        }\n    }\n    post {\n        always {\n            mail to: 'nazare@nazareth.jenkins.org',\n            subject: \"Status of pipeline: ${currentBuild.fullDisplayName}\",\n            body: \"${env.BUILD_URL} has result ${currentBuild.result}\"\n        }\n    }\n}\n")),(0,r.kt)("h3",{id:"2-las-credenciales-que-has-guardado-en-jenkins"},"2. Las credenciales que has guardado en Jenkins."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(9156).Z,width:"1472",height:"794"}),"\n",(0,r.kt)("img",{alt:"jk",src:a(19562).Z,width:"1599",height:"927"})),(0,r.kt)("h3",{id:"3-demuestra-al-profesor-como-se-realiza-la-icdc-completo"},"3. Demuestra al profesor como se realiza la IC/DC completo."),(0,r.kt)("p",null,"Si entramos a la VPS:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"jk",src:a(66673).Z,width:"1704",height:"365"}),"\n",(0,r.kt)("img",{alt:"jk",src:a(79358).Z,width:"1472",height:"794"}),"\n",(0,r.kt)("img",{alt:"jk",src:a(40013).Z,width:"1726",height:"413"}),"\n",(0,r.kt)("img",{alt:"jk",src:a(52558).Z,width:"1048",height:"493"})))}p.isMDXComponent=!0},40013:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-10-c554329e042e5096b011f053aa289fc7.png"},52558:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-11-483f9db765a0a206c07f1a0b335b03bb.png"},27030:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-2-370284ca5ce9f3f243f3e96e049304d7.png"},43037:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-3-7bf71c9b058dc323a4c6f166cab95b95.png"},32404:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-4-8245a42343b212f45befc0f622ce2e91.png"},58199:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-5-e4723f6d09e8ba7433eb04f89da55615.png"},19562:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-6-6d94c65b3052d6c29b8405c1e8de6633.png"},9156:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-7-6fa97fae00c7190d6d67dff487d1aaaa.png"},66673:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-8-5b818296784beaa0835f6539b2d7236e.png"},79358:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-9-c89d6566fb94f5c8af37e6b237330133.png"},43335:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/jenkinsICDCIAW7-3c62833f521e7d3e79198b8fd54b58ac.png"}}]);