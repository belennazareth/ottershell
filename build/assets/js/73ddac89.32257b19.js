"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[4001],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>g});var r=a(67294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,r,o=function(e,n){if(null==e)return{};var a,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var a=e.components,o=e.mdxType,t=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=o,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||t;return a?r.createElement(g,i(i({ref:n},c),{},{components:a})):r.createElement(g,i({ref:n},c))}));function g(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=a.length,i=new Array(t);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<t;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},17166:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>s,toc:()=>p});var r=a(87462),o=(a(67294),a(3905));const t={sidebar_position:52},i="Jenkins: Comprobaci\xf3n de HTML5 v\xe1lido y despliegue en surge.sh (test y deploy)",s={unversionedId:"Tasks/jenkins_surge",id:"Tasks/jenkins_surge",title:"Jenkins: Comprobaci\xf3n de HTML5 v\xe1lido y despliegue en surge.sh (test y deploy)",description:"En este ejercicio queremos desplegar una p\xe1gina HTML5 en el servicio surge.sh, adem\xe1s queremos comprobar si el c\xf3digo HTML5 es v\xe1lido. Estas dos operaciones//github.com/josedom24/ic-html5.",source:"@site/docs/Tasks/jenkins_surge.md",sourceDirName:"Tasks",slug:"/Tasks/jenkins_surge",permalink:"/docs/Tasks/jenkins_surge",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/jenkins_surge.md",tags:[],version:"current",sidebarPosition:52,frontMatter:{sidebar_position:52},sidebar:"tutorialSidebar",previous:{title:"Jenkins: Corrector ortogr\xe1fico de documentos markdown (test)",permalink:"/docs/Tasks/jenkins_corrector"},next:{title:"Markdown Features",permalink:"/docs/Tasks/markdown-features"}},l={},p=[{value:"Crear credenciales",id:"crear-credenciales",level:2},{value:"Creaci\xf3n del pipeline",id:"creaci\xf3n-del-pipeline",level:2},{value:"Disparador del pipeline",id:"disparador-del-pipeline",level:2},{value:"Entrega",id:"entrega",level:2},{value:"1. La URL del tu repositorio GitHub.",id:"1-la-url-del-tu-repositorio-github",level:3},{value:"2. El contenido de la tu fichero Jenkinfile.",id:"2-el-contenido-de-la-tu-fichero-jenkinfile",level:3},{value:"3. Captura de pantalla donde se vea donde has creado las credenciales necesarias.",id:"3-captura-de-pantalla-donde-se-vea-donde-has-creado-las-credenciales-necesarias",level:3},{value:"4. Explica la configuraci\xf3n necesaria y una prueba de funcionamiento para que se dispare el pipeline cuando hagamos un push al repositorio.",id:"4-explica-la-configuraci\xf3n-necesaria-y-una-prueba-de-funcionamiento-para-que-se-dispare-el-pipeline-cuando-hagamos-un-push-al-repositorio",level:3}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"jenkins-comprobaci\xf3n-de-html5-v\xe1lido-y-despliegue-en-surgesh-test-y-deploy"},"Jenkins: Comprobaci\xf3n de HTML5 v\xe1lido y despliegue en surge.sh (test y deploy)"),(0,o.kt)("p",null,"En este ejercicio queremos desplegar una p\xe1gina HTML5 en el servicio surge.sh, adem\xe1s queremos comprobar si el c\xf3digo HTML5 es v\xe1lido. Estas dos operaciones: comprobar si el HTML5 es v\xe1lido (test) y el despliegue en surge.sh (deploy) lo vamos a hacer con Jenkins de forma autom\xe1tica (IC y DC). Recuerda que el repositorio es ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/josedom24/ic-html5"},"https://github.com/josedom24/ic-html5"),"."),(0,o.kt)("p",null,"Como vimos en el ejemplo 2, para hacer el despliegue necesitamos guardar el token que hemos obtenido de surge para que nos autentifiquemos. veamos como trabajar con credenciales en Jenkins."),(0,o.kt)("h2",{id:"crear-credenciales"},"Crear credenciales"),(0,o.kt)("p",null,"Podemos crear varios tipos de credenciales: usuario y contrase\xf1a, credenciales ssh,\u2026 Nosotros vamos a crear un Secret text para guardar el token de surge."),(0,o.kt)("p",null,"Para crear la credencial:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://fp.josedomingo.org/iaw2223/7_ic/img/cred1.png",alt:"jenkins"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://fp.josedomingo.org/iaw2223/7_ic/img/cred2.png",alt:"jenkins"})),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://fp.josedomingo.org/iaw2223/7_ic/img/cred3.png",alt:"jenkins"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://fp.josedomingo.org/iaw2223/7_ic/img/cred4.png",alt:"jenkins"})),(0,o.kt)("h2",{id:"creaci\xf3n-del-pipeline"},"Creaci\xf3n del pipeline"),(0,o.kt)("p",null,"En el repositorio puedes encontrar el fichero Jenkinsfile con el siguiente contenido:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"pipeline {\n    environment {\n        TOKEN = credentials('SURGE_TOKEN')\n      }\n    agent {\n        docker { image 'josedom24/debian-npm'\n        args '-u root:root'\n        }\n    }\n    stages {\n        stage('Clone') {\n            steps {\n                git branch:'master',url:'https://github.com/josedom24/ic-travis-html5.git'\n            }\n        }\n        \n        stage('Install surge')\n        {\n            steps {\n                sh 'npm install -g surge'\n            }\n        }\n        stage('Deploy')\n        {\n            steps{\n                sh 'surge ./_build/ josedom24.surge.sh --token $TOKEN'\n            }\n        }\n        \n    }\n}\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"En el apartado environment leo una variable de entorno a a partir de la credencial que hab\xedamos creado.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Uso la imagen josedom24/debian-npm, imagen que yo he generado de una debian con npm instalado. De esta manera no necesito instalar npm que es un proceso lento.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Clono el repositorio.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Instalo surge. En realidad podr\xeda haberlo instalado en la imagen que he generado.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"En el stage Deploy hago el despliegue."))),(0,o.kt)("h2",{id:"disparador-del-pipeline"},"Disparador del pipeline"),(0,o.kt)("p",null,"\xbfPodr\xedamos activar el pipeline cuando hagamos un push al repositorio? La respuesta es s\xed, tendr\xedamos que escoger como Build Trigger la opci\xf3n GitHub hook trigger for GITScm polling."),(0,o.kt)("p",null,"A continuaci\xf3n tendr\xedamos que crear un Webhook en tu repositorio de gitHub. Los webhooks ofrecen una manera de enviar las notificaciones a un servidor web externo siempre que ciertas acciones ocurran en un repositorio o una organizaci\xf3n."),(0,o.kt)("p",null,"Para m\xe1s informaci\xf3n: ",(0,o.kt)("a",{parentName:"p",href:"https://faun.pub/triggering-jenkins-build-on-push-using-github-webhooks-52d4361542d4"},"Triggering a Jenkins build on push using GitHub webhooks"),"."),(0,o.kt)("p",null,"Tenemos un problema: al crear el webhook debemos indicar la direcci\xf3n de nuestro jenkins, que tiene que ser accesible desde internet, pero nuestra instalaci\xf3n es local. Para hacer una prueba en nuestro servidor de jenkins local podr\xedamos hacer uso de ",(0,o.kt)("a",{parentName:"p",href:"https://ngrok.com/"},"ngrok"),"."),(0,o.kt)("h2",{id:"entrega"},"Entrega"),(0,o.kt)("h3",{id:"1-la-url-del-tu-repositorio-github"},"1. La URL del tu repositorio GitHub."),(0,o.kt)("h3",{id:"2-el-contenido-de-la-tu-fichero-jenkinfile"},"2. El contenido de la tu fichero Jenkinfile."),(0,o.kt)("h3",{id:"3-captura-de-pantalla-donde-se-vea-donde-has-creado-las-credenciales-necesarias"},"3. Captura de pantalla donde se vea donde has creado las credenciales necesarias."),(0,o.kt)("h3",{id:"4-explica-la-configuraci\xf3n-necesaria-y-una-prueba-de-funcionamiento-para-que-se-dispare-el-pipeline-cuando-hagamos-un-push-al-repositorio"},"4. Explica la configuraci\xf3n necesaria y una prueba de funcionamiento para que se dispare el pipeline cuando hagamos un push al repositorio."),(0,o.kt)("p",null,"Para esto primero debemos entrar en nuestro repositorio de GitHub y en la pesta\xf1a de Settings, en la parte izquierda, seleccionamos Webhooks. Una vez dentro, pulsamos en el bot\xf3n de Add webhook."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"surge",src:a(61485).Z,width:"960",height:"966"})),(0,o.kt)("p",null,"Para conseguir la url de nuestro webhook, debemos ejecutar el siguiente comando en la terminal de la m\xe1quina donde tengamos instalado jenkins para instalarnos ngrok:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok\n')),(0,o.kt)("p",null,"Como ngrok no esta actualizado para realizar esta tarea tendremos que actualizarlo manualmente. Para ello descargamos la ultima versi\xf3n de ngrok y la descomprimimos:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz\ntar xvzf ngrok-v3-stable-linux-amd64.tgz\n")),(0,o.kt)("p",null,"Una vez descomprimido, copiamos el archivo ngrok a la carpeta ",(0,o.kt)("inlineCode",{parentName:"p"},"/bin/")," para que sea accesible desde cualquier lugar:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo cp ngrok /bin/\n")),(0,o.kt)("p",null,"Para poder usar ngrok, debemos registrarnos en su p\xe1gina web y obtener un token. Una vez obtenido el token, lo introducimos en la terminal con el siguiente comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok config add-authtoken {token que te da la p\xe1gina de ngrok al registrarte} \n")),(0,o.kt)("p",null,"Una vez hecho esto, ejecutamos el siguiente comando para iniciar ngrok en segundo plano y que nos de la url de nuestro webhook:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nohup ./ngrok http 8080 & curl http://127.0.0.1:4040/api/tunnels\n")),(0,o.kt)("p",null,"*Recursos: ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/mudssrali/acfb8b57e5847c7308e1064a739971da"},"https://gist.github.com/mudssrali/acfb8b57e5847c7308e1064a739971da"),", ",(0,o.kt)("a",{parentName:"p",href:"https://ngrok.com/docs/getting-started/"},"https://ngrok.com/docs/getting-started/"),", ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/27162552/how-to-run-ngrok-in-background"},"https://stackoverflow.com/questions/27162552/how-to-run-ngrok-in-background")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"surge",src:a(9960).Z,width:"1096",height:"215"})),(0,o.kt)("p",null,"Con esta configuraci\xf3n, cada vez que hagamos un push en nuestro repositorio de GitHub, se ejecutar\xe1 el pipeline de Jenkins:"))}d.isMDXComponent=!0},9960:(e,n,a)=>{a.d(n,{Z:()=>r});const r=a.p+"assets/images/taller2IAW7-2-c96f994b3514079996f8bee5ed06bab7.png"},61485:(e,n,a)=>{a.d(n,{Z:()=>r});const r=a.p+"assets/images/taller2IAW7-0c87111af3c517b3e54c8fa5ccc90132.png"}}]);