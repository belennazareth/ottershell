"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[633],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>f});var r=n(67294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,o=function(e,a){if(null==e)return{};var n,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),s=function(e){var a=r.useContext(d),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},u=function(e){var a=s(e.components);return r.createElement(d.Provider,{value:a},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var n=e.components,o=e.mdxType,t=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),p=o,f=c["".concat(d,".").concat(p)]||c[p]||m[p]||t;return n?r.createElement(f,i(i({ref:a},u),{},{components:n})):r.createElement(f,i({ref:a},u))}));function f(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var t=n.length,i=new Array(t);i[0]=p;var l={};for(var d in a)hasOwnProperty.call(a,d)&&(l[d]=a[d]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<t;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},35646:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>t,metadata:()=>l,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const t={sidebar_position:23},i="Creaci\xf3n de un cl\xfaster DRBD + OCFS2",l={unversionedId:"Tasks/DRBD_OCFS2",id:"Tasks/DRBD_OCFS2",title:"Creaci\xf3n de un cl\xfaster DRBD + OCFS2",description:"Configura un escenario con dos m\xe1quinas. Cada una tiene que tener dos discos adicionales (tama\xf1o 2Gb para que la sincronizaci\xf3n sea r\xe1pida).",source:"@site/docs/Tasks/DRBD_OCFS2.md",sourceDirName:"Tasks",slug:"/Tasks/DRBD_OCFS2",permalink:"/docs/Tasks/DRBD_OCFS2",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/DRBD_OCFS2.md",tags:[],version:"current",sidebarPosition:23,frontMatter:{sidebar_position:23},sidebar:"tutorialSidebar",previous:{title:"Despliegue de aplicaciones Java",permalink:"/docs/Tasks/despliegue_java"},next:{title:"Despliegue de aplicaciones python",permalink:"/docs/Tasks/despliegue_python"}},d={},s=[{value:"Entrega",id:"entrega",level:2},{value:"1. La salida del comando drbdadm status wwwdata.",id:"1-la-salida-del-comando-drbdadm-status-wwwdata",level:3},{value:"2. Prueba de funcionamiento del modo Single-primary.",id:"2-prueba-de-funcionamiento-del-modo-single-primary",level:3},{value:"3. La salida del comando drbdadm status dbdata.",id:"3-la-salida-del-comando-drbdadm-status-dbdata",level:3},{value:"4. Prueba de funcionamiento del modo Dual-primary.",id:"4-prueba-de-funcionamiento-del-modo-dual-primary",level:3},{value:"5. Muestra al profesor el funcionamiento del modo Dual-primary.",id:"5-muestra-al-profesor-el-funcionamiento-del-modo-dual-primary",level:3}],u={toc:s},c="wrapper";function m(e){let{components:a,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"creaci\xf3n-de-un-cl\xfaster-drbd--ocfs2"},"Creaci\xf3n de un cl\xfaster DRBD + OCFS2"),(0,o.kt)("p",null,"Configura un escenario con dos m\xe1quinas. Cada una tiene que tener dos discos adicionales (tama\xf1o 2Gb para que la sincronizaci\xf3n sea r\xe1pida)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Crea dos recursos DRBD: wwwdata y dbdata. Cada uno utilizar\xe1n uno de los discos de cada m\xe1quina."),(0,o.kt)("li",{parentName:"ul"},"Configura en modo Single-primary el recurso wwwdata.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Una vez creado y sincronizado el recurso, format\xe9alo con XFS."),(0,o.kt)("li",{parentName:"ul"},"Monta el recurso en el nodo primario y crea un fichero. \xbfSe puede montar en el secundario?"),(0,o.kt)("li",{parentName:"ul"},"Desmonta el recurso."),(0,o.kt)("li",{parentName:"ul"},"Cambia los roles, pon primario el que era secundario, y secundario el primario."),(0,o.kt)("li",{parentName:"ul"},"Monta el recurso en el que ahora es primario y comprueba que existe el fichero creado anteriormente."))),(0,o.kt)("li",{parentName:"ul"},"Configura en modo Dual-primary el recurso dbdata.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Una vez creado y sincronizado el recurso, config\xfaralo en modo Dual-primary."),(0,o.kt)("li",{parentName:"ul"},"Crea un cl\xfaster OCFS2."),(0,o.kt)("li",{parentName:"ul"},"Crea un volumen OCFS2 en el recurso (mkfs.ocfs2)."),(0,o.kt)("li",{parentName:"ul"},"Monta en los nodos el recurso, y prueba a escribir en los dos al mismo tiempo.")))),(0,o.kt)("p",null,"Montamos el escenario con dos m\xe1quinas virtuales, cada una con dos discos adicionales de 2GB en vagrant."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'Vagrant.configure("2") do |config|\n  config.vm.define "node1" do |node1|\n    node1.vm.box = "debian/bullseye64"\n    node1.vm.hostname = "node1"\n    node1.vm.network "private_network", ip: "10.1.0.10"\n    node1.vm.provider :libvirt do |libvirt|\n        libvirt.storage :file, :size => \'2G\'\n        libvirt.storage :file, :size => \'2G\'\n    end\n\n  end\n  config.vm.define "node2" do |node2|\n    node2.vm.box = "debian/bullseye64"\n    node2.vm.hostname = "node2"\n    node2.vm.network "private_network", ip: "10.1.0.11"\n    node2.vm.provider :libvirt do |libvirt|\n        libvirt.storage :file, :size => \'2G\'\n        libvirt.storage :file, :size => \'2G\'\n    end\n  end\nend\n')),(0,o.kt)("p",null,"Despu\xe9s de crear las m\xe1quinas, instalamos los paquetes necesarios para DRBD y OCFS2."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"apt install drbd-utils ocfs2-tools -y\n")),(0,o.kt)("h2",{id:"entrega"},"Entrega"),(0,o.kt)("h3",{id:"1-la-salida-del-comando-drbdadm-status-wwwdata"},"1. La salida del comando drbdadm status wwwdata."),(0,o.kt)("h3",{id:"2-prueba-de-funcionamiento-del-modo-single-primary"},"2. Prueba de funcionamiento del modo Single-primary."),(0,o.kt)("h3",{id:"3-la-salida-del-comando-drbdadm-status-dbdata"},"3. La salida del comando drbdadm status dbdata."),(0,o.kt)("h3",{id:"4-prueba-de-funcionamiento-del-modo-dual-primary"},"4. Prueba de funcionamiento del modo Dual-primary."),(0,o.kt)("h3",{id:"5-muestra-al-profesor-el-funcionamiento-del-modo-dual-primary"},"5. Muestra al profesor el funcionamiento del modo Dual-primary."))}m.isMDXComponent=!0}}]);