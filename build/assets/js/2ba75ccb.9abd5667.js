"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[8846],{3905:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>g});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),c=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},p=function(e){var a=c(e.components);return t.createElement(l.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,m=d["".concat(l,".").concat(g)]||d[g]||u[g]||r;return n?t.createElement(m,i(i({ref:a},p),{},{components:n})):t.createElement(m,i({ref:a},p))}));function g(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6652:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var t=n(7462),o=(n(7294),n(3905));const r={sidebar_position:16},i="Desplegando aplicaciones flask con apache2/nginx + uwsgi",s={unversionedId:"Tasks/apache_uwsgi",id:"Tasks/apache_uwsgi",title:"Desplegando aplicaciones flask con apache2/nginx + uwsgi",description:"Procedimiento",source:"@site/docs/Tasks/apache_uwsgi.md",sourceDirName:"Tasks",slug:"/Tasks/apache_uwsgi",permalink:"/docs/Tasks/apache_uwsgi",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/apache_uwsgi.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_position:16},sidebar:"tutorialSidebar",previous:{title:"Instalaci\xf3n de WordPress",permalink:"/docs/Tasks/wordpress"},next:{title:"Desplegando aplicaciones flask con apache2 + mod_wsgi",permalink:"/docs/Tasks/apache_wsgi"}},l={},c=[{value:"Procedimiento",id:"procedimiento",level:2},{value:"Despliegue de una aplicaci\xf3n flask con uwsgi",id:"despliegue-de-una-aplicaci\xf3n-flask-con-uwsgi",level:3},{value:"Creaci\xf3n de una unidad systemd",id:"creaci\xf3n-de-una-unidad-systemd",level:3},{value:"Proxy inversos para uwsgi",id:"proxy-inversos-para-uwsgi",level:3},{value:"Apache2 como proxy inverso de uwsgi",id:"apache2-como-proxy-inverso-de-uwsgi",level:4},{value:"nginx como proxy inverso de uwsgi",id:"nginx-como-proxy-inverso-de-uwsgi",level:4},{value:"Entrega",id:"entrega",level:2},{value:"1. Entrega el contenido del fichero de configuraci\xf3n de la unidad systemctl.",id:"1-entrega-el-contenido-del-fichero-de-configuraci\xf3n-de-la-unidad-systemctl",level:3},{value:"2. Entrega la salida del comando systemctl status uwsgi-guestbook.service.",id:"2-entrega-la-salida-del-comando-systemctl-status-uwsgi-guestbookservice",level:3},{value:"3. Configura apache2 como proxy inverso. Entrega la configuraci\xf3n del virtualhost (el mismo que el del taller anterior) y una captura accediendo a la aplicaci\xf3n web.",id:"3-configura-apache2-como-proxy-inverso-entrega-la-configuraci\xf3n-del-virtualhost-el-mismo-que-el-del-taller-anterior-y-una-captura-accediendo-a-la-aplicaci\xf3n-web",level:3},{value:"4. Instala nginx. Configura nginx como proxy inverso. Entrega la configuraci\xf3n del virtualhost y una captura accediendo a la aplicaci\xf3n web.",id:"4-instala-nginx-configura-nginx-como-proxy-inverso-entrega-la-configuraci\xf3n-del-virtualhost-y-una-captura-accediendo-a-la-aplicaci\xf3n-web",level:3}],p={toc:c};function u(e){let{components:a,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"desplegando-aplicaciones-flask-con-apache2nginx--uwsgi"},"Desplegando aplicaciones flask con apache2/nginx + uwsgi"),(0,o.kt)("h2",{id:"procedimiento"},"Procedimiento"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"uwsgi")," es un servidor de aplicaciones WSGI HTTP para Python."),(0,o.kt)("p",null,"Debemos tener instalado el paquete ",(0,o.kt)("inlineCode",{parentName:"p"},"python3-dev")," que es una dependencia necesaria. Tambi\xe9n es posible que necesites las herramientas para compilar, instala el paquete ",(0,o.kt)("inlineCode",{parentName:"p"},"build-essential")," Podr\xedamos instalar el paquete ",(0,o.kt)("inlineCode",{parentName:"p"},"uwsgi")," desde los repositorios, pero lo vamos a instalar en el entorno virtual:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(flask)$ pip install uwsgi\n")),(0,o.kt)("h3",{id:"despliegue-de-una-aplicaci\xf3n-flask-con-uwsgi"},"Despliegue de una aplicaci\xf3n flask con uwsgi"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Suponemos que nuestra aplicaci\xf3n se encuentra en ",(0,o.kt)("inlineCode",{parentName:"li"},"/home/debian/guestbook"),"."),(0,o.kt)("li",{parentName:"ul"},"Suponemos que hemos creado un entorno virtual con los paquetes instalados en ",(0,o.kt)("inlineCode",{parentName:"li"},"/home/debian/venv/flask."))),(0,o.kt)("p",null,"Para probar el servidor ",(0,o.kt)("inlineCode",{parentName:"p"},"uwsgi")," podemos ejecutar en la l\xednea de comandos:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(flask)$ uwsgi --http :8080 --chdir /home/debian/guestbook --wsgi-file wsgi.py --process 4 --threads 2 --master\n")),(0,o.kt)("p",null,"Otra alternativa es crear un fichero ",(0,o.kt)("inlineCode",{parentName:"p"},".ini")," de configuraci\xf3n, ",(0,o.kt)("inlineCode",{parentName:"p"},"ejemplo.ini")," de la siguiente manera:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[uwsgi]\nhttp = :8080\nchdir = /home/debian/guestbook \nwsgi-file = wsgi.py\nprocesses = 4\nthreads = 2\n")),(0,o.kt)("p",null,"Y para ejecutar el servidor, simplemente:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(flask)$ uwsgi ejemplo.ini\n")),(0,o.kt)("p",null,"De esta forma puedo tener varios ficheros de configuraci\xf3n del servidor uwsgi para las distintas aplicaciones python que sirve el servidor."),(0,o.kt)("p",null,"La instalaci\xf3n se est\xe1 sirviendo por el servidor ",(0,o.kt)("inlineCode",{parentName:"p"},"uwsgi")," en ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:8080"),"."),(0,o.kt)("h3",{id:"creaci\xf3n-de-una-unidad-systemd"},"Creaci\xf3n de una unidad systemd"),(0,o.kt)("p",null,"Evidentemente no vamos a ejecutar \u201ca mano\u201d el programa ",(0,o.kt)("inlineCode",{parentName:"p"},"uwsgi"),", vamos a crear una unidad ",(0,o.kt)("inlineCode",{parentName:"p"},"systemd"),", para controlarla con ",(0,o.kt)("inlineCode",{parentName:"p"},"systemctl"),", para ello, vamos a crear el fichero ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/uwsgi-guestbook.service")," con el siguiente contenido:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[Unit]\nDescription=uwsgi-guestbook\nAfter=network.target\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nUser=www-data\nGroup=www-data\nRestart=always\n\nExecStart=/home/debian/venv/flask/bin/uwsgi /home/debian/venv/flask/ejemplo.ini\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s TERM $MAINPID\n\nWorkingDirectory=/home/debian/guestbook\nEnvironment=PYTHONPATH='/home/debian/guestbook:/home/debian/venv/flask/lib/python3.9/site-packages'\n\nPrivateTmp=true\n")),(0,o.kt)("p",null,"Activamos la unidad de ",(0,o.kt)("inlineCode",{parentName:"p"},"systemd"),", y la iniciamos:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable uwsgi-guestbook.service\nsystemctl start uwsgi-guestbook.service\n")),(0,o.kt)("p",null,"Si cambias el contenido de la unidad tendr\xe1s que hacer la recarga:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"systemctl daemon-reload\n")),(0,o.kt)("h3",{id:"proxy-inversos-para-uwsgi"},"Proxy inversos para uwsgi"),(0,o.kt)("h4",{id:"apache2-como-proxy-inverso-de-uwsgi"},"Apache2 como proxy inverso de uwsgi"),(0,o.kt)("p",null,"Activamos el m\xf3dulo ",(0,o.kt)("inlineCode",{parentName:"p"},"proxy_http")," (",(0,o.kt)("inlineCode",{parentName:"p"},"a2enmod proxy_http"),") y en la configuraci\xf3n de alg\xfan virtualhost:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"DocumentRoot /home/debian/flask_temperaturas\nProxyPass / http://127.0.0.1:8080/\nProxyPassReverse / http://127.0.0.1:8080/ \n\n<Directory /home/debian/flask_temperaturas>\n        Require all granted\n</Directory>\n")),(0,o.kt)("p",null,"*Nota: usando el virtualhost creado en el ",(0,o.kt)("a",{parentName:"p",href:"https://ottershell.vercel.app/docs/Tasks/apache_wsgi"},"taller anterior")),(0,o.kt)("p",null,"Lo que resulta en:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"<VirtualHost *:80>\n\n    ServerName flask.nazareth.org\n    DocumentRoot /home/debian/guestbook\n\n    ProxyPass / http://127.0.0.1:8080/\n    ProxyPassReverse / http://127.0.0.1:8080/\n\n    <Directory /home/debian/guestbook>\n            Require all granted\n    </Directory>\n\n    WSGIDaemonProcess flask_guestbook python-path=/home/debian/guestbook:/home/debian/venv/fl>\n    WSGIProcessGroup flask_guestbook\n    WSGIScriptAlias / /home/debian/guestbook/wsgi.py process-group=flask_guestbook\n\n</VirtualHost>\n")),(0,o.kt)("p",null,"Reiniciamos el servicio ",(0,o.kt)("inlineCode",{parentName:"p"},"apache2")," y accedemos a la aplicaci\xf3n web. Desde el navegador accedemos a ",(0,o.kt)("inlineCode",{parentName:"p"},"http://flask.nazareth.org/")," y vemos que funciona correctamente.\nCon el proxy inverso se ha indicado que el servidor ",(0,o.kt)("inlineCode",{parentName:"p"},"uwsgi")," est\xe1 escuchando en ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:8080"),", todo lo que llegue a ",(0,o.kt)("inlineCode",{parentName:"p"},"http://flask.nazareth.org/")," se redirigir\xe1 a ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/"),"."),(0,o.kt)("p",null,"Podemos ejecutar el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"netstat -putan | egrep 8080")," para ver que el servidor ",(0,o.kt)("inlineCode",{parentName:"p"},"uwsgi")," est\xe1 escuchando en ese puerto, obtenemos como salida:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"debian@apache-wsgi:~$ sudo netstat -putan | egrep 8080\n\ntcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      23514/uwsgi   \n")),(0,o.kt)("h4",{id:"nginx-como-proxy-inverso-de-uwsgi"},"nginx como proxy inverso de uwsgi"),(0,o.kt)("p",null,"En la configuraci\xf3n de un virtualhost:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"location / {\n    proxy_pass http://localhost:8080;\n    include proxy_params;\n}\n")),(0,o.kt)("p",null,"*Nota: usando el virtualhost creado en el ",(0,o.kt)("a",{parentName:"p",href:"https://ottershell.vercel.app/docs/Tasks/apache_wsgi"},"taller anterior")),(0,o.kt)("p",null,"Quedar\xeda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"server {\n    listen 80;\n    server_name flask.nazareth_nginx.org;\n\n    root /home/debian/guestbook;\n    location / {\n        proxy_pass http://localhost:8080;\n        include proxy_params;\n    }\n}\n")),(0,o.kt)("p",null,"Activamos el virtualhost y reiniciamos el servicio ",(0,o.kt)("inlineCode",{parentName:"p"},"nginx"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ln -s /etc/nginx/sites-available/flask.nazareth_nginx.org /etc/nginx/sites-enabled/\nsystemctl restart nginx\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"A\xf1adir al /etc/hosts:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"172.22.200.117 flask.nazareth_nginx.org\n")),(0,o.kt)("p",null,"Desde el navegador accedemos a ",(0,o.kt)("inlineCode",{parentName:"p"},"flask.nazareth_nginx.org/")," y vemos que funciona correctamente."),(0,o.kt)("h2",{id:"entrega"},"Entrega"),(0,o.kt)("h3",{id:"1-entrega-el-contenido-del-fichero-de-configuraci\xf3n-de-la-unidad-systemctl"},"1. Entrega el contenido del fichero de configuraci\xf3n de la unidad systemctl."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"uwsgi",src:n(1880).Z,width:"1176",height:"568"})),(0,o.kt)("h3",{id:"2-entrega-la-salida-del-comando-systemctl-status-uwsgi-guestbookservice"},"2. Entrega la salida del comando systemctl status uwsgi-guestbook.service."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"uwsgi",src:n(7833).Z,width:"1176",height:"568"})),(0,o.kt)("h3",{id:"3-configura-apache2-como-proxy-inverso-entrega-la-configuraci\xf3n-del-virtualhost-el-mismo-que-el-del-taller-anterior-y-una-captura-accediendo-a-la-aplicaci\xf3n-web"},"3. Configura apache2 como proxy inverso. Entrega la configuraci\xf3n del virtualhost (el mismo que el del taller anterior) y una captura accediendo a la aplicaci\xf3n web."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"<VirtualHost *:80>\n\n    ServerName flask.nazareth.org\n    DocumentRoot /home/debian/guestbook\n\n    ProxyPass / http://127.0.0.1:8080/\n    ProxyPassReverse / http://127.0.0.1:8080/\n\n    <Directory /home/debian/guestbook>\n            Require all granted\n    </Directory>\n\n    WSGIDaemonProcess flask_guestbook python-path=/home/debian/guestbook:/home/debian/venv/fl>\n    WSGIProcessGroup flask_guestbook\n    WSGIScriptAlias / /home/debian/guestbook/wsgi.py process-group=flask_guestbook\n\n</VirtualHost>\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"uwsgi",src:n(5818).Z,width:"992",height:"780"})),(0,o.kt)("h3",{id:"4-instala-nginx-configura-nginx-como-proxy-inverso-entrega-la-configuraci\xf3n-del-virtualhost-y-una-captura-accediendo-a-la-aplicaci\xf3n-web"},"4. Instala nginx. Configura nginx como proxy inverso. Entrega la configuraci\xf3n del virtualhost y una captura accediendo a la aplicaci\xf3n web."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"server {\n    listen 80;\n    server_name flask.nazareth_nginx.org;\n\n    root /home/debian/guestbook;\n    location / {\n        proxy_pass http://localhost:8080;\n        include proxy_params;\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"uwsgi",src:n(2926).Z,width:"992",height:"780"})))}u.isMDXComponent=!0},7833:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller2IAW4-2-5ced91452a083759ab29d67e1530c41b.png"},5818:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller2IAW4-3-7b88767fda839f954fc004b8f3e6364e.png"},2926:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller2IAW4-4-0fcc8b3e0aba03c34dc441b1fd9cc231.png"},1880:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/taller2IAW4-76cb74c31b7a1bd2b03a7a928b04fb57.png"}}]);