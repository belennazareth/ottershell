"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[633],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>b});var r=n(67294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=r.createContext({}),i=function(e){var a=r.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):d(d({},a),e)),n},c=function(e){var a=i(e.components);return r.createElement(s.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=i(n),p=t,b=u["".concat(s,".").concat(p)]||u[p]||m[p]||o;return n?r.createElement(b,d(d({ref:a},c),{},{components:n})):r.createElement(b,d({ref:a},c))}));function b(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,d=new Array(o);d[0]=p;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:t,d[1]=l;for(var i=2;i<o;i++)d[i]=n[i];return r.createElement.apply(null,d)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},35646:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var r=n(87462),t=(n(67294),n(3905));const o={sidebar_position:23},d="Creaci\xf3n de un cl\xfaster DRBD + OCFS2",l={unversionedId:"Tasks/DRBD_OCFS2",id:"Tasks/DRBD_OCFS2",title:"Creaci\xf3n de un cl\xfaster DRBD + OCFS2",description:"Configura un escenario con dos m\xe1quinas. Cada una tiene que tener dos discos adicionales (tama\xf1o 2Gb para que la sincronizaci\xf3n sea r\xe1pida).",source:"@site/docs/Tasks/DRBD_OCFS2.md",sourceDirName:"Tasks",slug:"/Tasks/DRBD_OCFS2",permalink:"/docs/Tasks/DRBD_OCFS2",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/DRBD_OCFS2.md",tags:[],version:"current",sidebarPosition:23,frontMatter:{sidebar_position:23},sidebar:"tutorialSidebar",previous:{title:"Despliegue de aplicaciones Java",permalink:"/docs/Tasks/despliegue_java"},next:{title:"Despliegue de aplicaciones python",permalink:"/docs/Tasks/despliegue_python"}},s={},i=[{value:"Entrega",id:"entrega",level:2},{value:"1. La salida del comando drbdadm status wwwdata.",id:"1-la-salida-del-comando-drbdadm-status-wwwdata",level:3},{value:"2. Prueba de funcionamiento del modo Single-primary.",id:"2-prueba-de-funcionamiento-del-modo-single-primary",level:3},{value:"3. La salida del comando drbdadm status dbdata.",id:"3-la-salida-del-comando-drbdadm-status-dbdata",level:3},{value:"4. Prueba de funcionamiento del modo Dual-primary.",id:"4-prueba-de-funcionamiento-del-modo-dual-primary",level:3},{value:"5. Muestra al profesor el funcionamiento del modo Dual-primary.",id:"5-muestra-al-profesor-el-funcionamiento-del-modo-dual-primary",level:3}],c={toc:i},u="wrapper";function m(e){let{components:a,...o}=e;return(0,t.kt)(u,(0,r.Z)({},c,o,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"creaci\xf3n-de-un-cl\xfaster-drbd--ocfs2"},"Creaci\xf3n de un cl\xfaster DRBD + OCFS2"),(0,t.kt)("p",null,"Configura un escenario con dos m\xe1quinas. Cada una tiene que tener dos discos adicionales (tama\xf1o 2Gb para que la sincronizaci\xf3n sea r\xe1pida)."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Crea dos recursos DRBD: wwwdata y dbdata. Cada uno utilizar\xe1n uno de los discos de cada m\xe1quina."),(0,t.kt)("li",{parentName:"ul"},"Configura en modo Single-primary el recurso wwwdata.",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"Una vez creado y sincronizado el recurso, format\xe9alo con XFS."),(0,t.kt)("li",{parentName:"ul"},"Monta el recurso en el nodo primario y crea un fichero. \xbfSe puede montar en el secundario?"),(0,t.kt)("li",{parentName:"ul"},"Desmonta el recurso."),(0,t.kt)("li",{parentName:"ul"},"Cambia los roles, pon primario el que era secundario, y secundario el primario."),(0,t.kt)("li",{parentName:"ul"},"Monta el recurso en el que ahora es primario y comprueba que existe el fichero creado anteriormente."))),(0,t.kt)("li",{parentName:"ul"},"Configura en modo Dual-primary el recurso dbdata.",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"Una vez creado y sincronizado el recurso, config\xfaralo en modo Dual-primary."),(0,t.kt)("li",{parentName:"ul"},"Crea un cl\xfaster OCFS2."),(0,t.kt)("li",{parentName:"ul"},"Crea un volumen OCFS2 en el recurso (mkfs.ocfs2)."),(0,t.kt)("li",{parentName:"ul"},"Monta en los nodos el recurso, y prueba a escribir en los dos al mismo tiempo.")))),(0,t.kt)("p",null,"Montamos el escenario con dos m\xe1quinas virtuales, cada una con dos discos adicionales de 2GB en vagrant."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ruby"},'Vagrant.configure("2") do |config|\n  config.vm.define "node1" do |node1|\n    node1.vm.box = "debian/bullseye64"\n    node1.vm.hostname = "node1"\n    node1.vm.synced_folder ".", "/vagrant", disabled: true\n    node1.vm.network "private_network", ip: "10.1.0.10"\n    node1.vm.provider :libvirt do |libvirt|\n        libvirt.storage :file, :size => \'2G\'\n        libvirt.storage :file, :size => \'2G\'\n    end\n\n  end\n  config.vm.define "node2" do |node2|\n    node2.vm.box = "debian/bullseye64"\n    node2.vm.hostname = "node2"\n    node2.vm.synced_folder ".", "/vagrant", disabled: true\n    node2.vm.network "private_network", ip: "10.1.0.11"\n    node2.vm.provider :libvirt do |libvirt|\n        libvirt.storage :file, :size => \'2G\'\n        libvirt.storage :file, :size => \'2G\'\n    end\n  end\nend\n')),(0,t.kt)("p",null,"Despu\xe9s de crear las m\xe1quinas, instalamos los paquetes necesarios para DRBD y OCFS2."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"apt install drbd-utils ocfs2-tools -y\n")),(0,t.kt)("p",null,"Creamos los recursos DRBD en cada m\xe1quina, en el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"/etc/drbd.d/wwwdata.res"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"resource wwwdata {\n  protocol C;\n  meta-disk internal;\n  device /dev/drbd1;\n  syncer {\n    verify-alg sha1;\n  }\n  net {\n    allow-two-primaries;\n  }\n  on node1 {\n    disk /dev/vdb;\n    address 10.1.0.10:7789;\n  }\n  on node2 {\n    disk /dev/vdb;\n    address 10.1.0.11:7789;\n  }\n}\n")),(0,t.kt)("p",null,"Creamos el recurso en cada m\xe1quina:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo drbdadm create-md wwwdata\nsudo drbdadm up wwwdata\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(17201).Z,width:"507",height:"370"})),(0,t.kt)("p",null,"Creamos el recurso dbdata en cada m\xe1quina, en el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"/etc/drbd.d/dbdata.res"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"resource dbdata {\n  protocol C;\n  meta-disk internal;\n  device /dev/drbd2;\n  syncer {\n    verify-alg sha1;\n  }\n  net {\n    allow-two-primaries;\n  }\n  on node1 {\n    disk /dev/vdc;\n    address 10.1.0.10:7790;\n  }\n  on node2 {\n    disk /dev/vdc;\n    address 10.1.0.11:7790;\n  }\n}\n")),(0,t.kt)("p",null,"Creamos el recurso en cada m\xe1quina:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo drbdadm create-md dbdata\nsudo drbdadm up dbdata\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(94755).Z,width:"504",height:"371"})),(0,t.kt)("p",null,"Configuramos el recurso wwwdata en modo Single-primary:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo drbdadm primary --force wwwdata \n")),(0,t.kt)("p",null,"Y comprobamos el estado del recurso:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo drbdadm status wwwdata\n")),(0,t.kt)("p",null,"Esperamos a que se sincronice el recurso y vemos que el estado es ",(0,t.kt)("inlineCode",{parentName:"p"},"UpToDate/UpToDate"),":"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(56840).Z,width:"489",height:"345"})),(0,t.kt)("p",null,"En el nodo primario formateamos el recurso con XFS:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install xfsprogs -y\nsudo mkfs.xfs /dev/drbd1\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(31139).Z,width:"780",height:"306"})),(0,t.kt)("p",null,"Montamos y creamos un fichero en el nodo primario:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'mount /dev/drbd1 /mnt\necho "Hola :)" > /mnt/fichero.txt\n')),(0,t.kt)("p",null,"Si intentamos montar el recurso en el nodo secundario, vemos que no se puede, si queremos hacer esto debemos desmontar el recurso en el nodo primario y cambiar los roles:"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(79457).Z,width:"615",height:"77"})),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo umount /mnt\nsudo drbdadm secondary wwwdata #node1\nsudo drbdadm primary wwwdata #node2\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(61842).Z,width:"492",height:"398"})),(0,t.kt)("p",null,"Montamos el recurso en el nodo secundario y comprobamos que existe el fichero creado anteriormente:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mount /dev/drbd1 /mnt\ncat /mnt/fichero.txt\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(26494).Z,width:"443",height:"110"})),(0,t.kt)("hr",null),(0,t.kt)("p",null,"Configuramos el recurso dbdata en modo Dual-primary:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo drbdadm up dbdata\nsudo drbdadm status dbdata \n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(9965).Z,width:"527",height:"350"})),(0,t.kt)("p",null,"Ahora, a diferencia del apartado anterior, vamos a configurar el recurso como primario en ambos nodos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo drbdadm primary --force dbdata\nsudo drbdadm status dbdata\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(84588).Z,width:"594",height:"395"})),(0,t.kt)("p",null,"Para poder tener el recurso como primario en ambos nodos, debemos configurar el sistema de ficheros OCFS2, para ello instalamos el paquete ",(0,t.kt)("inlineCode",{parentName:"p"},"ocfs2-tools")," en ambos nodos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install ocfs2-tools -y\n")),(0,t.kt)("p",null,"Creamos el cluster y a\xf1adimos los nodos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"o2cb add-cluster ocfs2\no2cb add-node ocfs2 node1 --ip 10.1.0.10\no2cb add-node ocfs2 node2 --ip 10.1.0.11\n")),(0,t.kt)("p",null,"Vemos que los nodos est\xe1n a\xf1adidos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"cat /etc/ocfs2/cluster.conf\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(42353).Z,width:"520",height:"994"})),(0,t.kt)("p",null,"Modificamos el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"/etc/default/o2cb")," para que se inicie el cluster al arrancar el sistema:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"O2CB_ENABLED=true #modificamos esta l\xednea\nO2CB_BOOTCLUSTER=ocfs2\nO2CB_HEARTBEAT_THRESHOLD=31\nO2CB_IDLE_TIMEOUT_MS=30000\nO2CB_KEEPALIVE_DELAY_MS=2000\nO2CB_RECONNECT_DELAY_MS=2000\n")),(0,t.kt)("p",null,"Modificamos el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"/etc/sysctl.conf"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"kernel.panic = 30\nkernel.panic_on_oops = 1\n")),(0,t.kt)("p",null,"Aplicamos los cambios:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"sudo sysctl -p\n")),(0,t.kt)("p",null,"Ponemos en marcha el cluster:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"o2cb register-cluster ocfs2\no2cb cluster-status ocfs2\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"drbd",src:n(10153).Z,width:"506",height:"220"})),(0,t.kt)("h2",{id:"entrega"},"Entrega"),(0,t.kt)("h3",{id:"1-la-salida-del-comando-drbdadm-status-wwwdata"},"1. La salida del comando drbdadm status wwwdata."),(0,t.kt)("h3",{id:"2-prueba-de-funcionamiento-del-modo-single-primary"},"2. Prueba de funcionamiento del modo Single-primary."),(0,t.kt)("h3",{id:"3-la-salida-del-comando-drbdadm-status-dbdata"},"3. La salida del comando drbdadm status dbdata."),(0,t.kt)("h3",{id:"4-prueba-de-funcionamiento-del-modo-dual-primary"},"4. Prueba de funcionamiento del modo Dual-primary."),(0,t.kt)("h3",{id:"5-muestra-al-profesor-el-funcionamiento-del-modo-dual-primary"},"5. Muestra al profesor el funcionamiento del modo Dual-primary."))}m.isMDXComponent=!0},84588:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-10-ed3fb2855cd6ebcf461d0999d6bcb73a.png"},42353:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-11-7388cce72d0845a7e9ccab70a2192bb3.png"},10153:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-12-15e75353f569be0f03063750adeeea78.png"},94755:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-2-18dd3b3a5180217ed79028210cb08993.png"},56840:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-4-d5aeeed256311f7ab3439c9ced439b66.png"},31139:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-5-0c5bfc90109efab0735d767d932c6df8.png"},79457:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-6-a9709f52ad82a6a15b85a9936236cb2c.png"},61842:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-7-2543cfa9cfa9a5ce9cd5d5d286937358.png"},26494:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-8-8454061f497dbb1aa2845b24f1915c7c.png"},9965:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-9-1e9197fd4996a7061ccd79d956051dcc.png"},17201:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3SRI7-6b6fa643e0816229d6cdd860578fa974.png"}}]);