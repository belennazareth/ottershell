"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[5365],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>m});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=t.createContext({}),c=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return a?t.createElement(k,s(s({ref:n},p),{},{components:a})):t.createElement(k,s({ref:n},p))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=a[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2457:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const o={sidebar_position:15},s="Interconexi\xf3n de Servidores de Bases de Datos",l={unversionedId:"Tasks/interconexion_bbdd",id:"Tasks/interconexion_bbdd",title:"Interconexi\xf3n de Servidores de Bases de Datos",description:"Descripci\xf3n de la actividad",source:"@site/docs/Tasks/interconexion_bbdd.md",sourceDirName:"Tasks",slug:"/Tasks/interconexion_bbdd",permalink:"/docs/Tasks/interconexion_bbdd",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/interconexion_bbdd.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Escenario en OpenStack",permalink:"/docs/Tasks/escenario_openstack"},next:{title:"Instalaci\xf3n de un servidor LEMP",permalink:"/docs/Tasks/lemp"}},i={},c=[{value:"Descripci\xf3n de la actividad",id:"descripci\xf3n-de-la-actividad",level:2},{value:"Puntos a tratar",id:"puntos-a-tratar",level:2},{value:"Interconexi\xf3n oracle a oracle",id:"interconexi\xf3n-oracle-a-oracle",level:3},{value:"Interconexi\xf3n postgres a postgres",id:"interconexi\xf3n-postgres-a-postgres",level:3},{value:"Interconexi\xf3n oracle a postgres",id:"interconexi\xf3n-oracle-a-postgres",level:3}],p={toc:c};function d(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,t.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interconexi\xf3n-de-servidores-de-bases-de-datos"},"Interconexi\xf3n de Servidores de Bases de Datos"),(0,r.kt)("h2",{id:"descripci\xf3n-de-la-actividad"},"Descripci\xf3n de la actividad"),(0,r.kt)("p",null,"Las interconexiones de servidores de bases de datos son operaciones que pueden ser muy \xfatiles en diferentes contextos. B\xe1sicamente, se trata de acceder a datos que no est\xe1n almacenados en nuestra base de datos, pudiendo combinarlos con los que ya tenemos."),(0,r.kt)("p",null,"En esta pr\xe1ctica veremos varias formas de crear un enlace entre distintos servidores de bases de datos."),(0,r.kt)("h2",{id:"puntos-a-tratar"},"Puntos a tratar"),(0,r.kt)("p",null,"Se pide:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u2022 Realizar un enlace entre dos servidores de bases de datos ORACLE, explicando la configuraci\xf3n necesaria en ambos extremos y demostrando su funcionamiento.\n  \n\n\u2022 Realizar un enlace entre dos servidores de bases de datos Postgres, explicando la configuraci\xf3n necesaria en ambos extremos y demostrando su funcionamiento.\n  \n\n\u2022 Realizar un enlace entre un servidor ORACLE y otro Postgres o MySQL empleando Heterogeneus Services, explicando la configuraci\xf3n necesaria en ambos extremos y demostrando su funcionamiento.\n")),(0,r.kt)("h3",{id:"interconexi\xf3n-oracle-a-oracle"},"Interconexi\xf3n oracle a oracle"),(0,r.kt)("p",null,"Tenemos dos m\xe1quinas oracle con usuarios ",(0,r.kt)("inlineCode",{parentName:"p"},"oracle")," desde las que se realizar\xe1n las interconexiones:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe1quina 1 (",(0,r.kt)("inlineCode",{parentName:"li"},"oracle1"),"):")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(6211).Z,width:"1047",height:"330"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe1quina 2 (",(0,r.kt)("inlineCode",{parentName:"li"},"oracle2"),"):")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(1552).Z,width:"1042",height:"334"})),(0,r.kt)("p",null,"Para poder realizar la interconexi\xf3n de ambas m\xe1quinas se realizar\xe1n cambios en el fichero ",(0,r.kt)("inlineCode",{parentName:"p"},"listener.ora")," del servidor ",(0,r.kt)("inlineCode",{parentName:"p"},"oracle1"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"nano /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora\n")),(0,r.kt)("p",null,"A\xf1adimos las siguientes l\xedneas con las que se permitir\xe1n las conexiones hacia la direcci\xf3n y puerto que vamos a usar:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"SID_LIST_LISTENER =\n (SID_LIST =\n  (SID_DESC =\n   (GLOBAL_DBNAME = ORCLCDB)\n   (ORACLE_HOME = /opt/oracle/product/19c/dbhome_1)\n   (SID_NAME = ORCLCDB)\n  )\n )\n\nLISTENER=\n (DESCRIPTION_LIST =\n  (DESCRIPTION =\n   (ADDRESS_LIST =\n    (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))\n   )\n   (ADDRESS_LIST =\n    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.230)(PORT = 1521))\n   )\n  )\n )\n")),(0,r.kt)("p",null,"A continuaci\xf3n, se crea el fichero ",(0,r.kt)("inlineCode",{parentName:"p"},"tnsnames.ora")," (en caso de que no exista) para conectarnos con el que nos vamos a enlazar:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"LISTENER_ORCL =\n (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))\n\nORCL =\n (DESCRIPTION = \n    (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))\n    (CONNECT_DATA =\n        (SERVER = DEDICATED)\n        (SERVICE_NAME = ORCLCDB)\n    )\n )\n\nORACLE2 =\n (DESCRIPTION =             \n    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.16)(PORT = 1521))\n    (CONNECT_DATA =\n        (SERVER = DEDICATED)\n        (SERVICE_NAME = ORCLCDB)\n    )\n )\n\n")),(0,r.kt)("p",null,"Tras esto reiniciamos el servicio usando los comandos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"lsnrctl stop\nlsnrctl start\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"*"," Nota:")," Hay que asegurarse de que las bases de datos est\xe9n iniciadas en ambas m\xe1quinas (entramos en la base datos con ",(0,r.kt)("inlineCode",{parentName:"p"},"sqlplus / as sysdba")," y ejecutamos ",(0,r.kt)("inlineCode",{parentName:"p"},"startup"),") y que se este ejecutando el listener en ambas m\xe1quinas (",(0,r.kt)("inlineCode",{parentName:"p"},"lsnrctl start"),")."),(0,r.kt)("p",null,"Lo siguiente ser\xe1 dar permisos al usuario (con ",(0,r.kt)("inlineCode",{parentName:"p"},"sysdba"),"), en este caso se llama ",(0,r.kt)("inlineCode",{parentName:"p"},"'nazareth'"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"grant create database link to nazareth;\n")),(0,r.kt)("p",null,"Creamos un link o enlace hacia la otra m\xe1quina entrando primero a ",(0,r.kt)("inlineCode",{parentName:"p"},"sqlplus")," con el usuario ",(0,r.kt)("inlineCode",{parentName:"p"},"oracle")," y creando la siguiente base de datos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"create database link enlaceoracle3\nconnect to nazareth identified by nazareth\nusing '192.168.122.16/ORCLCDB';\n")),(0,r.kt)("p",null,"Para comprobar que funciona la interconexi\xf3n se ha realizado una consulta usando el enlace creado anteriormente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"select ename from EMP@enlaceoracle3;\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(2242).Z,width:"385",height:"580"})),(0,r.kt)("h3",{id:"interconexi\xf3n-postgres-a-postgres"},"Interconexi\xf3n postgres a postgres"),(0,r.kt)("p",null,"Para realizar esta interconexi\xf3n se van a usar dos m\xe1quinas con postgresql instalado."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe1quina 1 (",(0,r.kt)("inlineCode",{parentName:"li"},"postgres1"),"):")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(5716).Z,width:"1042",height:"328"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe1quina 2 (",(0,r.kt)("inlineCode",{parentName:"li"},"postgres2"),"):")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(3455).Z,width:"1044",height:"322"})),(0,r.kt)("p",null,"Entrando con el usuario postgres (",(0,r.kt)("inlineCode",{parentName:"p"},"su postgres"),"; psql), se han creado en ambas m\xe1quinas una base de datos, ",(0,r.kt)("inlineCode",{parentName:"p"},"inter")," para la m\xe1quina 1 e ",(0,r.kt)("inlineCode",{parentName:"p"},"inter2")," para la m\xe1quina 2. Adem\xe1s de un usuario para cada una."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"create database inter;\ncreate user nazareth with password 'nazareth';\ngrant all privileges on database inter to nazareth;\n\ncreate database inter2;\ncreate user nazareth with password 'nazareth';\ngrant all privileges on database inter2 to nazareth;\n")),(0,r.kt)("p",null,"Despu\xe9s, entrando con el usuario postgres se ha entrado en la base de datos creando la extensi\xf3n dblink:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(8127).Z,width:"372",height:"191"})),(0,r.kt)("p",null,"Editamos el fichero de configuraci\xf3n de ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres2"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  /etc/postgresql/13/main/postgresql.conf \n")),(0,r.kt)("p",null,"Y descomentamos la l\xednea a\xf1adiendo la ip del ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres1"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"listen_addresses = '192.168.122.230, localhost'\n")),(0,r.kt)("p",null,"En ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres1")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres2")," a\xf1adimos un nuevo registro de autentificaci\xf3n en el fichero:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/etc/postgresql/13/main/pg_hba.conf \n")),(0,r.kt)("p",null,"Agregamos la l\xednea:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# TYPE  DATABASE        USER            ADDRESS                 METHOD\n\nhost    all             all             192.168.122.9/24        md5 #en postgres1\nhost    all             all             192.168.122.142/24        md5 #en postgres2\n")),(0,r.kt)("p",null,"Despu\xe9s de hacer cada cambio hay que reiniciar el servicio postgresql para que se ejecuten los cambios."),(0,r.kt)("p",null,"Por \xfaltimo, entramos en la base de datos ",(0,r.kt)("inlineCode",{parentName:"p"},"inter")," y ejecutamos una consulta para comprobar que funciona el enlace:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"select * from dblink('dbname=inter2 host=192.168.122.9 user=nazareth password=nazareth', 'select * from dept') as dept (deptno integer, dname text, loc text);\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(5207).Z,width:"1678",height:"353"})),(0,r.kt)("h3",{id:"interconexi\xf3n-oracle-a-postgres"},"Interconexi\xf3n oracle a postgres"),(0,r.kt)("p",null,"Tenemos dos m\xe1quinas:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe1quina 1, oracle (",(0,r.kt)("inlineCode",{parentName:"li"},"oracle1"),"):")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(6211).Z,width:"1047",height:"330"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe1quina 2, postgres (",(0,r.kt)("inlineCode",{parentName:"li"},"postgres2"),"):")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(3455).Z,width:"1044",height:"322"})),(0,r.kt)("p",null,"En la m\xe1quina postgres configuramos el fichero ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/postgresql/13/main/pg_hba.conf ")," a\xf1adiendo la ip de ",(0,r.kt)("inlineCode",{parentName:"p"},"oracle"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# TYPE  DATABASE        USER            ADDRESS                 METHOD\n\nhost    all             all             192.168.122.230/24        md5\n")),(0,r.kt)("p",null,"Y tambi\xe9n permitiremos la conexi\xf3n de la m\xe1quina ",(0,r.kt)("inlineCode",{parentName:"p"},"oracle")," en el fichero ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/postgresql/13/main/postgresql.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"listen_addresses  = '192.168.122.230, localhost'\n")),(0,r.kt)("p",null,"Primero vamos a instalar en la m\xe1quina oracle el paquete odbc para permitir el acceso a postgres:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apt install odbc-postgresql unixodbc\n")),(0,r.kt)("p",null,"Con esto se crear\xe1 el fichero ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/odbcinst.ini")," con contenido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[PostgreSQL ANSI]\nDescription=PostgreSQL ODBC driver (ANSI version)\nDriver=psqlodbca.so\nSetup=libodbcpsqlS.so\nDebug=0\nCommLog=1\nUsageCount=1\n\n[PostgreSQL Unicode]\nDescription=PostgreSQL ODBC driver (Unicode version)\nDriver=psqlodbcw.so\nSetup=libodbcpsqlS.so\nDebug=0\nCommLog=1\nUsageCount=1\n")),(0,r.kt)("p",null,"Para comprobar que la configuraci\xf3n este correcta se ejecutar\xe1:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"odbcinst -q -d\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(8382).Z,width:"490",height:"118"})),(0,r.kt)("p",null,"En el fichero ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/odbc.ini")," a\xf1adimos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[PSQLA]\nDebug = 0\nCommLog = 0\nReadOnly = 1\nDriver = PostgreSQL ANSI\nServername = 192.168.122.9\nUsername = nazareth \nPassword = nazareth\nPort = 5432\nDatabase = inter2\nTrace = 0\nTraceFile = /tmp/sql.log\n\n[PSQLU]\nDebug = 0\nCommLog = 0\nReadOnly = 0\nDriver = PostgreSQL Unicode\nServername = 192.168.122.9\nUsername = nazareth\nPassword = nazareth\nPort = 5432\nDatabase = inter2\nTrace = 0\nTraceFile = /tmp/sql.log\n\n[Default]\nDriver = /usr/lib/x86_64-linux-gnu/odbc/liboplodbcS.so\n")),(0,r.kt)("p",null,"Para comprobar que funciona ejecutamos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"odbcinst -q -s\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(7126).Z,width:"373",height:"118"})),(0,r.kt)("p",null,"Comprobamos la conexi\xf3n al servidor postgres:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"isql -v PSQLU\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Repo",src:a(5624).Z,width:"442",height:"487"})),(0,r.kt)("p",null,"Ahora vamos a configurar el servicio de Heterogeneus Services para hacer un link en la base de datos de oracle, para ello creamos el fichero ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/oracle/product/19c/dbhome_1/hs/admin/initPSQLU.ora")," a\xf1adiendo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"HS_FDS_CONNECT_INFO = PSQLU\nHS_FDS_TRACE_LEVEL = Debug\nHS_FDS_SHAREABLE_NAME = /usr/lib/x86_64-linux-gnu/odbc/psqlodbcw.so\nHS_LANGUAGE = AMERICAN_AMERICA.WE8ISO8859P1\nset ODBCINI=/etc/odbc.ini\n")),(0,r.kt)("p",null,"A continuaci\xf3n, modificamos el fichero listener de oracle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"SID_LIST_LISTENER =\n (SID_LIST =\n  (SID_DESC =\n   (GLOBAL_DBNAME = ORCLCDB)\n   (ORACLE_HOME = /opt/oracle/product/19c/dbhome_1)\n   (SID_NAME = ORCLCDB)\n  )\n  (SID_DESC =\n    (SID_NAME = PSQLU)\n    (PROGRAM = dg4odbc)\n    (ORACLE_HOME = /opt/oracle/product/19c/dbhome_1)\n  )\n )\n")),(0,r.kt)("p",null,"Y en el fichero tnsnames a\xf1adimos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"PSQLU =\n (DESCRIPTION=\n (ADDRESS=(PROTOCOL=tcp)(HOST=localhost)(PORT=1521))\n   (CONNECT_DATA=(SID=PSQLU))\n   (HS=OK)\n )\n")),(0,r.kt)("p",null,"Despu\xe9s reiniciamos ejecutando ",(0,r.kt)("inlineCode",{parentName:"p"},"lsnrctl stop")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"lsnrctl start"),". Veremos que devuelve:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Service "PSQLU" has 1 instance(s).\nInstance "PSQLU", status UNKNOWN, has 1 handler(s) for this service...\n')),(0,r.kt)("p",null,"Asignamos privilegios al usuario ",(0,r.kt)("inlineCode",{parentName:"p"},"'nazareth'")," de oracle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GRANT CREATE PUBLIC DATABASE LINK to nazareth\n")),(0,r.kt)("p",null,"Y creamos el link en el usuario nazareth:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'CREATE DATABASE LINK enlacepostgres\nCONNECT TO "nazareth"\nIDENTIFIED BY "nazareth"\nUSING \'PSQLU\';\n')))}d.isMDXComponent=!0},5624:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-10-82416fceb200f08698b19fad08a0b0cf.png"},1552:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-2-19de70e3d08404a732b54e650d28aabd.png"},2242:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-3-fa196f94b0c2c18f8c0d15192541b1ba.png"},5716:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-4-e0637f83c4ad2855502d31a3e0ed3fdb.png"},3455:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-5-ac0252d6561997b35b1851a537d381dd.png"},8127:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-6-aa7e3d567f2a9c1dab65a4a334b00116.png"},5207:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-7-5462c829b6c4fb9453542ee32a948dfb.png"},8382:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-8-efb2eda206af28da4fb74e280dc5321b.png"},7126:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-9-f5977da7430fc4aeff00eae5e565cfc5.png"},6211:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/interconexion-415f09f603b2b19a8f0782994c8cd667.png"}}]);