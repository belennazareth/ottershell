"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[4446],{3905:(e,a,n)=>{n.d(a,{Zo:()=>s,kt:()=>k});var r=n(67294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=r.createContext({}),d=function(e){var a=r.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},s=function(e){var a=d(e.components);return r.createElement(c.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=t,k=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(k,l(l({ref:a},s),{},{components:n})):r.createElement(k,l({ref:a},s))}));function k(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in a)hasOwnProperty.call(a,c)&&(i[c]=a[c]);i.originalType=e,i[p]="string"==typeof e?e:t,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},73602:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=n(87462),t=(n(67294),n(3905));const o={sidebar_position:46},l="Docker: Creaci\xf3n de im\xe1genes Docker",i={unversionedId:"Tasks/docker_imagenes",id:"Tasks/docker_imagenes",title:"Docker: Creaci\xf3n de im\xe1genes Docker",description:"Para la realizaci\xf3n de este taller es necesario tener una cuenta en Docker Hub.",source:"@site/docs/Tasks/docker_imagenes.md",sourceDirName:"Tasks",slug:"/Tasks/docker_imagenes",permalink:"/docs/Tasks/docker_imagenes",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/docker_imagenes.md",tags:[],version:"current",sidebarPosition:46,frontMatter:{sidebar_position:46},sidebar:"tutorialSidebar",previous:{title:"Docker: Almacenamiento y redes",permalink:"/docs/Tasks/docker_storage_net"},next:{title:"Docker: Escenarios multicontenedor en Docker",permalink:"/docs/Tasks/docker_multicontenedor"}},c={},d=[{value:"Creaci\xf3n de una imagen a partir de un Dockerfile",id:"creaci\xf3n-de-una-imagen-a-partir-de-un-dockerfile",level:2},{value:"Entrega",id:"entrega",level:2},{value:"1. Pantallazo donde se vea el contenido del fichero Dockerfile.",id:"1-pantallazo-donde-se-vea-el-contenido-del-fichero-dockerfile",level:3},{value:"2. Pantallazo donde se vea el comando que crea la nueva imagen.",id:"2-pantallazo-donde-se-vea-el-comando-que-crea-la-nueva-imagen",level:3},{value:"3. Pantallazo donde se vea el acceso a la p\xe1gina web primera versi\xf3n.",id:"3-pantallazo-donde-se-vea-el-acceso-a-la-p\xe1gina-web-primera-versi\xf3n",level:3},{value:"4. Pantallazo donde se vean las dos im\xe1genes subidas a tu cuenta de Docker Hub.",id:"4-pantallazo-donde-se-vean-las-dos-im\xe1genes-subidas-a-tu-cuenta-de-docker-hub",level:3},{value:"5. Pantallazo donde se vea el acceso a la p\xe1gina web segunda versi\xf3n.",id:"5-pantallazo-donde-se-vea-el-acceso-a-la-p\xe1gina-web-segunda-versi\xf3n",level:3}],s={toc:d},p="wrapper";function u(e){let{components:a,...o}=e;return(0,t.kt)(p,(0,r.Z)({},s,o,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"docker-creaci\xf3n-de-im\xe1genes-docker"},"Docker: Creaci\xf3n de im\xe1genes Docker"),(0,t.kt)("p",null,"Para la realizaci\xf3n de este taller es necesario tener una cuenta en Docker Hub."),(0,t.kt)("h2",{id:"creaci\xf3n-de-una-imagen-a-partir-de-un-dockerfile"},"Creaci\xf3n de una imagen a partir de un Dockerfile"),(0,t.kt)("p",null,"1.- Crea una p\xe1gina web est\xe1tica (por ejemplo busca una plantilla HTML5). O simplemente crea un index.html."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n    <head>\n        <title>DOCKER</title>\n    </head>\n    <body>\n        <h1>CREACION DE IMAGENES DOCKER</h1>\n        <p>Docker es un proyecto de codigo abierto que automatiza el despliegue de aplicaciones dentro de contenedores de software, proporcionando una capa adicional de abstraccion y automatizacion de virtualizacion de aplicaciones en multiples sistemas operativos.\u200b</p>\n        <img src="https://cataas.com/cat">\n    </body>\n</html>\n')),(0,t.kt)("p",null,"2.- Crea un fichero Dockerfile que permita crear una imagen con un servidor web sirviendo la p\xe1gina. Puedes usar una imagen base debian o ubuntu, o una imagen que tenga ya un servicio web, como hemos visto en el apartado ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/josedom24/curso_docker_ies/blob/main/modulo5/ejemplo1.md"},"Ejemplo 1: Construcci\xf3n de im\xe1genes con una p\xe1gina est\xe1tica"),"."),(0,t.kt)("p",null,"Creamos un directorio para guardar los ficheros de la pr\xe1ctica y creamos el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir mi_servidor_web\ncd mi_servidor_web\ntouch index.html\n")),(0,t.kt)("p",null,"Creamos el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"Dockerfile"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"touch Dockerfile\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM debian\nMAINTAINER Belen Nazareth Duran "belennazareth29@gmail.com"\nRUN apt-get update && apt-get -y install apache2\nCOPY index.html /var/www/html/index.html\nCMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]\n')),(0,t.kt)("p",null,"3.- Ejecuta el comando docker que crea la nueva imagen. La imagen se debe llamar /mi_servidor_web:v1."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker build -t mi_servidor_web:v1 .\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"DOCKER",src:n(25647).Z,width:"924",height:"369"})),(0,t.kt)("p",null,"Comprobamos que se ha creado la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker images\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"DOCKER",src:n(16177).Z,width:"655",height:"174"})),(0,t.kt)("p",null,"Para borrar la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker rmi <id_imagen>\n")),(0,t.kt)("p",null,"Creamos un contenedor a partir de la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker run -d -p 8080:80 --name mi_servidor_web mi_servidor_web:v1\n")),(0,t.kt)("p",null,"Para borrar el contenedor:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker rm -f mi_servidor_web\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"DOCKER",src:n(57235).Z,width:"797",height:"598"})),(0,t.kt)("p",null,"4.- Con\xe9ctate a Docker Hub y sube la imagen que acabas de crear."),(0,t.kt)("p",null,"Nos conectamos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker login\n")),(0,t.kt)("p",null,"Preparamos la imagen para subirla:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker tag mi_servidor_web:v1 belennazareth/mi_servidor_web:v1\n")),(0,t.kt)("p",null,"Subimos la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker push belennazareth/mi_servidor_web\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"DOCKER",src:n(34784).Z,width:"801",height:"221"})),(0,t.kt)("p",null,"5.- Descarga la imagen en otro ordenador donde tengas docker instalado, y crea un contenedor a partir de ella. (Si no tienes otro ordenador con docker instalado, borra la imagen en tu ordenador y b\xe1jala de Docker Hub)."),(0,t.kt)("p",null,"Para descargar la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker pull belennazareth/mi_servidor_web\n")),(0,t.kt)("p",null,"Para crear el contenedor:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker run -d -p 8080:80 --name mi_servidor_web belennazareth/mi_servidor_web:v1\n")),(0,t.kt)("p",null,"6.- Vamos a hacer una modificaci\xf3n de la p\xe1gina web: haz una modificaci\xf3n al fichero index.html."),(0,t.kt)("p",null,"Modificamos el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n    <head>\n        <title>DOCKER</title>\n    </head>\n    <body>\n        <h1>CREACION DE IMAGENES DOCKER</h1>\n        <p>Docker es un proyecto de codigo abierto que automatiza el despliegue de aplicaciones dentro de contenedores de software, proporcionando una capa adicional de abstraccion y automatizacion de virtualizacion de aplicaciones en multiples sistemas operativos.\u200b</p>\n        <img src="https://cataas.com/cat">\n        \n        <p>Modificaci\xf3n de la p\xe1gina web</p>\n        <img src="https://cataas.com/cat/says/MODIFICACION">\n    </body>\n</html>\n')),(0,t.kt)("p",null,"7.- Vuelve a crear una nueva imagen, en esta caso pon la etiqueta v2. S\xfabela a Docker Hub."),(0,t.kt)("p",null,"Volvemos a crear la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker build -t mi_servidor_web:v2 .\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"DOCKER",src:n(44988).Z,width:"826",height:"472"})),(0,t.kt)("p",null,"De nuevo, preparamos la imagen para subirla:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker tag mi_servidor_web:v2 belennazareth/mi_servidor_web:v2\n")),(0,t.kt)("p",null,"Subimos la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker push belennazareth/mi_servidor_web:v2\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"DOCKER",src:n(11654).Z,width:"1285",height:"910"})),(0,t.kt)("p",null,"8.- Por \xfaltimo, baja la nueva imagen en el ordenador donde est\xe1 corriendo el contenedor. Para hacer la implantaci\xf3n de la nueva versi\xf3n debes borrar el contenedor y crear uno nuevo desde la nueva versi\xf3n de la imagen."),(0,t.kt)("p",null,"Borramos el contenedor:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker rm -f mi_servidor_web\n")),(0,t.kt)("p",null,"Creamos el contenedor desde la nueva versi\xf3n de la imagen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker run -d -p 8080:80 --name mi_servidor_web belennazareth/mi_servidor_web:v2\n")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"DOCKER",src:n(68354).Z,width:"992",height:"861"})),(0,t.kt)("h2",{id:"entrega"},"Entrega"),(0,t.kt)("h3",{id:"1-pantallazo-donde-se-vea-el-contenido-del-fichero-dockerfile"},"1. Pantallazo donde se vea el contenido del fichero Dockerfile."),(0,t.kt)("h3",{id:"2-pantallazo-donde-se-vea-el-comando-que-crea-la-nueva-imagen"},"2. Pantallazo donde se vea el comando que crea la nueva imagen."),(0,t.kt)("h3",{id:"3-pantallazo-donde-se-vea-el-acceso-a-la-p\xe1gina-web-primera-versi\xf3n"},"3. Pantallazo donde se vea el acceso a la p\xe1gina web primera versi\xf3n."),(0,t.kt)("h3",{id:"4-pantallazo-donde-se-vean-las-dos-im\xe1genes-subidas-a-tu-cuenta-de-docker-hub"},"4. Pantallazo donde se vean las dos im\xe1genes subidas a tu cuenta de Docker Hub."),(0,t.kt)("h3",{id:"5-pantallazo-donde-se-vea-el-acceso-a-la-p\xe1gina-web-segunda-versi\xf3n"},"5. Pantallazo donde se vea el acceso a la p\xe1gina web segunda versi\xf3n."))}u.isMDXComponent=!0},16177:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3IAW6-2-8fa03b4db182638be926512ae143713c.png"},57235:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3IAW6-3-a0dda207c8c5e1dde9c0d92823b19190.png"},34784:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3IAW6-4-c42becf69f20e5d1893c5c8601f768a3.png"},44988:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3IAW6-5-ca7d99e196a79df806782e26bd811be7.png"},11654:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3IAW6-6-675ee41bfb05b99dd18c891c4501dc77.png"},68354:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3IAW6-7-c52c3e6fe197cc6a8615fec87fdeeef5.png"},25647:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/taller3IAW6-5b393d509bd969de21137ea212faae4c.png"}}]);