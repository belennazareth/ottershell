"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[8916],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>m});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),c=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||s;return a?t.createElement(f,i(i({ref:n},d),{},{components:a})):t.createElement(f,i({ref:n},d))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=p;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},7405:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const s={sidebar_position:17},i="Montaje NFS mediante systemd",o={unversionedId:"Tasks/nfs_systemd",id:"Tasks/nfs_systemd",title:"Montaje NFS mediante systemd",description:"En una instancia del cloud, basada en la distribuci\xf3n de tu elecci\xf3n, anexa un volumen de 2GB. En dicha instancia deber\xe1s configurar el servicio nfs de exportaci\xf3n y en el volumen un punto de montaje de la exportaci\xf3n mediante systemd.",source:"@site/docs/Tasks/nfs_systemd.md",sourceDirName:"Tasks",slug:"/Tasks/nfs_systemd",permalink:"/docs/Tasks/nfs_systemd",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/nfs_systemd.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"Criptograf\xeda II: Integridad, firmas y autenticaci\xf3n",permalink:"/docs/Tasks/criptografia2"},next:{title:"Markdown Features",permalink:"/docs/Tasks/markdown-features"}},l={},c=[{value:"Creaci\xf3n y configuraci\xf3n de las instancias",id:"creaci\xf3n-y-configuraci\xf3n-de-las-instancias",level:2},{value:"Servidor",id:"servidor",level:3},{value:"Cliente",id:"cliente",level:3},{value:"Configuraci\xf3n del servicio NFS",id:"configuraci\xf3n-del-servicio-nfs",level:2},{value:"Configuraci\xf3n del punto de montaje",id:"configuraci\xf3n-del-punto-de-montaje",level:2}],d={toc:c};function u(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"montaje-nfs-mediante-systemd"},"Montaje NFS mediante systemd"),(0,r.kt)("p",null,"En una instancia del cloud, basada en la distribuci\xf3n de tu elecci\xf3n, anexa un volumen de 2GB. En dicha instancia deber\xe1s configurar el servicio nfs de exportaci\xf3n y en el volumen un punto de montaje de la exportaci\xf3n mediante systemd."),(0,r.kt)("h2",{id:"creaci\xf3n-y-configuraci\xf3n-de-las-instancias"},"Creaci\xf3n y configuraci\xf3n de las instancias"),(0,r.kt)("h3",{id:"servidor"},"Servidor"),(0,r.kt)("p",null,"Primero creamos la instancia que har\xe1 de servidor, en este caso ser\xe1 ",(0,r.kt)("inlineCode",{parentName:"p"},"Debian 11"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'openstack server create --flavor m1.mini \\\n--image "Debian 11 Bullseye" \\\n--security-group default \\\n--key-name nazareth_local \\\n--network "red de nazaret.duran" \\\nnfs_systemd\n')),(0,r.kt)("p",null,"Y le asignamos una ip flotante para poder acceder a ella:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openstack floating ip create ext-net\nopenstack server add floating ip nfs_systemd {ip} \n")),(0,r.kt)("p",null,"Creamos el volumen de 2GB y se lo anexamos a la instancia:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'openstack volume create --size 2 \\\n--description "Volumen para la m\xe1quina nfs" \\\n--availability-zone "nova" \\\n--bootable \\\nvolumen_nfs\n\n\nopenstack server add volume nfs_systemd volumen_nfs\n')),(0,r.kt)("p",null,"Tras realizar estos pasos deber\xe1 quedar una estructura similar a la siguiente, donde podemos comprobar que el volumen (",(0,r.kt)("inlineCode",{parentName:"p"},"vdb"),") se ha anexado correctamente a la instancia:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"debian@nfs-systemd:~$ lsblk\n\nNAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nvda     254:0    0   10G  0 disk \n\u251c\u2500vda1  254:1    0  9.9G  0 part /\n\u251c\u2500vda14 254:14   0    3M  0 part \n\u2514\u2500vda15 254:15   0  124M  0 part /boot/efi\nvdb     254:16   0    2G  0 disk \n\n")),(0,r.kt)("h3",{id:"cliente"},"Cliente"),(0,r.kt)("p",null,"Lo siguiente ser\xe1 crear una maquina cliente para lo cual no ser\xe1 necesario meterle un volumen:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'openstack server create --flavor m1.mini \\\n--image "Debian 11 Bullseye" \\\n--security-group default \\\n--key-name nazareth_local \\\n--network "red de nazaret.duran" \\\nnfs_systemd_client\n')),(0,r.kt)("p",null,"Y le asignamos una ip flotante para poder acceder a ella:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openstack floating ip create ext-net\nopenstack server add floating ip nfs_systemd {ip} \n")),(0,r.kt)("p",null,"Tras realizar estos pasos deber\xe1 quedar una estructura similar a la siguiente, donde se ve que no se ha anexado ning\xfan volumen a la instancia:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"debian@nfs-systemd-client:~$ lsblk\n\nNAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nvda     254:0    0   10G  0 disk \n\u251c\u2500vda1  254:1    0  9.9G  0 part /\n\u251c\u2500vda14 254:14   0    3M  0 part \n\u2514\u2500vda15 254:15   0  124M  0 part /boot/efi\n\n")),(0,r.kt)("h2",{id:"configuraci\xf3n-del-servicio-nfs"},"Configuraci\xf3n del servicio NFS"),(0,r.kt)("p",null,"En primer lugar, instalamos el servicio NFS en el servidor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apt install nfs-kernel-server \napt install nfs-common\n")),(0,r.kt)("p",null,"Activamos y habilitamos el servicio nfs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start rpcbind nfs-server\nsystemctl enable rpcbind nfs-server\n")),(0,r.kt)("h2",{id:"configuraci\xf3n-del-punto-de-montaje"},"Configuraci\xf3n del punto de montaje"),(0,r.kt)("p",null,"systemd tiene dos tipos configuraci\xf3n de unidades: las unidades de tipo service (automount) y las unidades de tipo mount. En este caso vamos a utilizar las unidades de tipo mount."))}u.isMDXComponent=!0}}]);