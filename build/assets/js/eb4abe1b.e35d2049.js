"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[9101],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var a=r(7294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var c=a.createContext({}),s=function(e){var n=a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=t,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?a.createElement(f,i(i({ref:n},p),{},{components:r})):a.createElement(f,i({ref:n},p))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1019:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=r(7462),t=(r(7294),r(3905));const o={sidebar_position:14},i="Compilaci\xf3n de un Kernel linux a medida",l={unversionedId:"Tasks/compilacion_kernel",id:"Tasks/compilacion_kernel",title:"Compilaci\xf3n de un Kernel linux a medida",description:"Para empezar a compilar el kernel debemos crear un directorio donde trabajaremos, y adem\xe1s, saber cual es la versi\xf3n de nuestra m\xe1quina.",source:"@site/docs/Tasks/compilacion_kernel.md",sourceDirName:"Tasks",slug:"/Tasks/compilacion_kernel",permalink:"/docs/Tasks/compilacion_kernel",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/compilacion_kernel.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"Configuraci\xf3n del cliente VPN",permalink:"/docs/Tasks/cliente_vpn"},next:{title:"Instalaci\xf3n de nginx con PHP",permalink:"/docs/Tasks/nginx_php"}},c={},s=[],p={toc:s};function u(e){let{components:n,...r}=e;return(0,t.kt)("wrapper",(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"compilaci\xf3n-de-un-kernel-linux-a-medida"},"Compilaci\xf3n de un Kernel linux a medida"),(0,t.kt)("p",null,"Para empezar a compilar el kernel debemos crear un directorio donde trabajaremos, y adem\xe1s, saber cual es la versi\xf3n de nuestra m\xe1quina.\nCreamos el directorio con ",(0,t.kt)("inlineCode",{parentName:"p"},"mkdir kernel")," y comprobamos la versi\xf3n con ",(0,t.kt)("inlineCode",{parentName:"p"},"uname -r"),"."),(0,t.kt)("p",null,"Es necesario instalar la paqueter\xeda que contiene el compilador en C, make y herramientas que nos permitan modificar la configuraci\xf3n, para ello instalamos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"apt install linux-source build-essentials qtbase5-dev\n")),(0,t.kt)("p",null,"Una vez lo tenemos todo, dentro del directorio ",(0,t.kt)("inlineCode",{parentName:"p"},"kernel"),", se descomprime el fichero ",(0,t.kt)("inlineCode",{parentName:"p"},".tar.xz")," del kernel alojado en la ruta ",(0,t.kt)("inlineCode",{parentName:"p"},"/usr/src")," de tal modo que resulta:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"tar xf /usr/src/linux-source-5.10.tar.xz\n")),(0,t.kt)("p",null,"Listamos el contenido del directorio resultado de la compresi\xf3n:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"}," nazare@ThousandSunny \ue0b0 ~/kernel/linux-source-5.10$ ls\n    arch     CREDITS        fs       Kbuild   LICENSES     net      security  virt\n    block    crypto         include  Kconfig  MAINTAINERS  README   sound\n    certs    Documentation  init     kernel   Makefile     samples  tools\n    COPYING  drivers        ipc      lib      mm           scripts  usr\n")),(0,t.kt)("p",null,"Podemos comprobar con el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"du -sh")," el tama\xf1o del directorio:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"}," nazare@ThousandSunny \ue0b0 ~/kernel/linux-source-5.10 \ue0b0 du -sh              \n    1,1G    .\n")),(0,t.kt)("p",null,"Dentro del directorio podemos usar el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"make help"),", este nos aportar\xe1 ayuda dando informaci\xf3n de las diferentes opciones que se pueden usar en la compilaci\xf3n."),(0,t.kt)("p",null,"A continuaci\xf3n, copiamos nuestro fichero ",(0,t.kt)("inlineCode",{parentName:"p"},"/boot/config-5.10.0-19-amd64")," el cual har\xe1 de fichero de configuraci\xf3n ",(0,t.kt)("strong",{parentName:"p"},".config")," conteniendo la informaci\xf3n sobre los componentes que se van a enlazar de forma est\xe1tica, din\xe1mica y los que directamente no se van a enlazar:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"}," cp /boot/config-5.10.0-19-amd64 .config\n")),(0,t.kt)("p",null,"Acto seguido realizamos ",(0,t.kt)("inlineCode",{parentName:"p"},"make oldconfig"),", el cual lee o compara el archivo de configuraci\xf3n antiguo. Copiando directamente nuestro fichero de configuraci\xf3n evitamos tener que responder a todas las preguntas que lanza el comando, ya que compara trasladando la configuraci\xf3n al nuevo kernel.\nCon esto ya tendr\xedamos una configuraci\xf3n sobreescrita en el fichero ",(0,t.kt)("strong",{parentName:"p"},".config"),"."))}u.isMDXComponent=!0}}]);