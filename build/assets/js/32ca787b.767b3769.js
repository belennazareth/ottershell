"use strict";(self.webpackChunkotter_shell=self.webpackChunkotter_shell||[]).push([[1902],{3905:(e,a,n)=>{n.d(a,{Zo:()=>m,kt:()=>b});var o=n(67294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function d(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?d(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function t(e,a){if(null==e)return{};var n,o,r=function(e,a){if(null==e)return{};var n,o,r={},d=Object.keys(e);for(o=0;o<d.length;o++)n=d[o],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(o=0;o<d.length;o++)n=d[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),i=function(e){var a=o.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},m=function(e){var a=i(e.components);return o.createElement(l.Provider,{value:a},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var n=e.components,r=e.mdxType,d=e.originalType,l=e.parentName,m=t(e,["components","mdxType","originalType","parentName"]),u=i(n),p=r,b=u["".concat(l,".").concat(p)]||u[p]||s[p]||d;return n?o.createElement(b,c(c({ref:a},m),{},{components:n})):o.createElement(b,c({ref:a},m))}));function b(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var d=n.length,c=new Array(d);c[0]=p;var t={};for(var l in a)hasOwnProperty.call(a,l)&&(t[l]=a[l]);t.originalType=e,t[u]="string"==typeof e?e:r,c[1]=t;for(var i=2;i<d;i++)c[i]=n[i];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},81189:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>s,frontMatter:()=>d,metadata:()=>t,toc:()=>i});var o=n(87462),r=(n(67294),n(3905));const d={sidebar_position:45},c="Docker: Almacenamiento y redes",t={unversionedId:"Tasks/docker_storage_net",id:"Tasks/docker_storage_net",title:"Docker: Almacenamiento y redes",description:"Almacenamiento",source:"@site/docs/Tasks/docker_storage_net.md",sourceDirName:"Tasks",slug:"/Tasks/docker_storage_net",permalink:"/docs/Tasks/docker_storage_net",draft:!1,editUrl:"https://github.com/belennazareth/ottershell/blob/main/docs/Tasks/docker_storage_net.md",tags:[],version:"current",sidebarPosition:45,frontMatter:{sidebar_position:45},sidebar:"tutorialSidebar",previous:{title:"apache2 como proxy inverso",permalink:"/docs/Tasks/proxy_apache2"},next:{title:"Docker: Escenarios multicontenedor en Docker",permalink:"/docs/Tasks/docker_multicontenedor"}},l={},i=[{value:"Almacenamiento",id:"almacenamiento",level:2},{value:"Vamos a trabajar con vol\xfamenes docker:",id:"vamos-a-trabajar-con-vol\xfamenes-docker",level:2},{value:"1. Crea un volumen docker que se llame miweb.",id:"1-crea-un-volumen-docker-que-se-llame-miweb",level:3},{value:"2. Crea un contenedor desde la imagen php:7.4-apache donde montes en el directorio /var/www/html (que sabemos que es el DocumentRoot del servidor que nos ofrece esa imagen) el volumen docker que has creado.",id:"2-crea-un-contenedor-desde-la-imagen-php74-apache-donde-montes-en-el-directorio-varwwwhtml-que-sabemos-que-es-el-documentroot-del-servidor-que-nos-ofrece-esa-imagen-el-volumen-docker-que-has-creado",level:3},{value:"3. Utiliza el comando docker cp para copiar un fichero index.html (donde aparece tu nombre) en el directorio /var/www/html.",id:"3-utiliza-el-comando-docker-cp-para-copiar-un-fichero-indexhtml-donde-aparece-tu-nombre-en-el-directorio-varwwwhtml",level:3},{value:"4. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html.",id:"4-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml",level:3},{value:"5. Borra el contenedor",id:"5-borra-el-contenedor",level:3},{value:"6. Crea un nuevo contenedor y monta el mismo volumen como en el ejercicio anterior.",id:"6-crea-un-nuevo-contenedor-y-monta-el-mismo-volumen-como-en-el-ejercicio-anterior",level:3},{value:"7. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html. \xbfSegu\xeda existiendo ese fichero?",id:"7-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml-segu\xeda-existiendo-ese-fichero",level:3},{value:"Vamos a trabajar con bind mount:",id:"vamos-a-trabajar-con-bind-mount",level:2},{value:"1. Crea un directorio en tu host y dentro crea un fichero index.html (donde aparece tu nombre).",id:"1-crea-un-directorio-en-tu-host-y-dentro-crea-un-fichero-indexhtml-donde-aparece-tu-nombre",level:3},{value:"2. Crea un contenedor desde la imagen php:7.4-apache donde montes en el directorio /var/www/html el directorio que has creado por medio de bind mount.",id:"2-crea-un-contenedor-desde-la-imagen-php74-apache-donde-montes-en-el-directorio-varwwwhtml-el-directorio-que-has-creado-por-medio-de-bind-mount",level:3},{value:"3. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html.",id:"3-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml",level:3},{value:"4. Modifica el contenido del fichero index.html en tu host y comprueba que al refrescar la p\xe1gina ofrecida por el contenedor, el contenido ha cambiado.",id:"4-modifica-el-contenido-del-fichero-indexhtml-en-tu-host-y-comprueba-que-al-refrescar-la-p\xe1gina-ofrecida-por-el-contenedor-el-contenido-ha-cambiado",level:3},{value:"5. Borra el contenedor",id:"5-borra-el-contenedor-1",level:3},{value:"6. Crea un nuevo contenedor y monta el mismo directorio como en el ejercicio anterior.",id:"6-crea-un-nuevo-contenedor-y-monta-el-mismo-directorio-como-en-el-ejercicio-anterior",level:3},{value:"7. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html. \xbfSe sigue viendo el mismo contenido?",id:"7-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml-se-sigue-viendo-el-mismo-contenido",level:3},{value:"1. Crea una red de tipo bridge.",id:"1-crea-una-red-de-tipo-bridge",level:3},{value:"2. Crea el contenedor de la base de datos conectado a la red que has creado. La base de datos se debe configurar para crear una base de datos y un usuario. Adem\xe1s el contenedor debe utilizar almacenamiento (vol\xfamenes o bind mount) para guardar la informaci\xf3n. Puedes seguir la documentaci\xf3n de mariadb o la de PostgreSQL.",id:"2-crea-el-contenedor-de-la-base-de-datos-conectado-a-la-red-que-has-creado-la-base-de-datos-se-debe-configurar-para-crear-una-base-de-datos-y-un-usuario-adem\xe1s-el-contenedor-debe-utilizar-almacenamiento-vol\xfamenes-o-bind-mount-para-guardar-la-informaci\xf3n-puedes-seguir-la-documentaci\xf3n-de-mariadb-o-la-de-postgresql",level:3},{value:"3. A continuaci\xf3n, siguiendo la documentaci\xf3n de la imagen nextcloud, crea un contenedor conectado a la misma red, e indica las variables adecuadas para que se configure de forma adecuada y realice la conexi\xf3n a la base de datos. El contenedor tambi\xe9n debe ser persistente usando almacenamiento.",id:"3-a-continuaci\xf3n-siguiendo-la-documentaci\xf3n-de-la-imagen-nextcloud-crea-un-contenedor-conectado-a-la-misma-red-e-indica-las-variables-adecuadas-para-que-se-configure-de-forma-adecuada-y-realice-la-conexi\xf3n-a-la-base-de-datos-el-contenedor-tambi\xe9n-debe-ser-persistente-usando-almacenamiento",level:3},{value:"4. Accede a la aplicaci\xf3n usando un navegador web.",id:"4-accede-a-la-aplicaci\xf3n-usando-un-navegador-web",level:3},{value:"Entrega",id:"entrega",level:2},{value:"Almacenamiento con vol\xfamenes docker",id:"almacenamiento-con-vol\xfamenes-docker",level:3},{value:"1. Instrucci\xf3n para crear el volumen docker.",id:"1-instrucci\xf3n-para-crear-el-volumen-docker",level:3},{value:"2. Instrucci\xf3n para crear el contenedor.",id:"2-instrucci\xf3n-para-crear-el-contenedor",level:3},{value:"3. Pantallazo accediendo a la p\xe1gina web.",id:"3-pantallazo-accediendo-a-la-p\xe1gina-web",level:3},{value:"4. Instrucci\xf3n para borrar el contenedor.",id:"4-instrucci\xf3n-para-borrar-el-contenedor",level:3},{value:"5. Instrucci\xf3n para crear de nuevo el contenedor con el volumen y pantallazo accediendo de nuevo a la p\xe1gina.",id:"5-instrucci\xf3n-para-crear-de-nuevo-el-contenedor-con-el-volumen-y-pantallazo-accediendo-de-nuevo-a-la-p\xe1gina",level:3},{value:"Almacenamiento con bind mount",id:"almacenamiento-con-bind-mount",level:3},{value:"1. Instrucci\xf3n para crear el contenedor.",id:"1-instrucci\xf3n-para-crear-el-contenedor",level:3},{value:"2. Pantallazo accediendo a la p\xe1gina web.",id:"2-pantallazo-accediendo-a-la-p\xe1gina-web",level:3},{value:"3. Pantallazo accediendo a la p\xe1gina web, despu\xe9s de cambiar el fichero index.html en tu host.",id:"3-pantallazo-accediendo-a-la-p\xe1gina-web-despu\xe9s-de-cambiar-el-fichero-indexhtml-en-tu-host",level:3},{value:"Redes",id:"redes-1",level:3},{value:"1. Instrucci\xf3n para crear la red",id:"1-instrucci\xf3n-para-crear-la-red",level:3},{value:"2. Instrucci\xf3n para crear el contenedor de base de datos.",id:"2-instrucci\xf3n-para-crear-el-contenedor-de-base-de-datos",level:3},{value:"3. Instrucci\xf3n para crear el contenedor de nextcloud.",id:"3-instrucci\xf3n-para-crear-el-contenedor-de-nextcloud",level:3},{value:"4. Pantallazos accediendo a nextcloud para comprobar que funciona de manera correcta.",id:"4-pantallazos-accediendo-a-nextcloud-para-comprobar-que-funciona-de-manera-correcta",level:3}],m={toc:i},u="wrapper";function s(e){let{components:a,...d}=e;return(0,r.kt)(u,(0,o.Z)({},m,d,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docker-almacenamiento-y-redes"},"Docker: Almacenamiento y redes"),(0,r.kt)("h2",{id:"almacenamiento"},"Almacenamiento"),(0,r.kt)("h2",{id:"vamos-a-trabajar-con-vol\xfamenes-docker"},"Vamos a trabajar con vol\xfamenes docker:"),(0,r.kt)("h3",{id:"1-crea-un-volumen-docker-que-se-llame-miweb"},"1. Crea un volumen docker que se llame miweb."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker volume create miweb\ndocker volume ls\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"root@docker:~#  docker volume create miweb\nmiweb\nroot@docker:~#  docker volume ls\nDRIVER    VOLUME NAME\nlocal     miweb\nroot@docker:~#\n")),(0,r.kt)("h3",{id:"2-crea-un-contenedor-desde-la-imagen-php74-apache-donde-montes-en-el-directorio-varwwwhtml-que-sabemos-que-es-el-documentroot-del-servidor-que-nos-ofrece-esa-imagen-el-volumen-docker-que-has-creado"},"2. Crea un contenedor desde la imagen php:7.4-apache donde montes en el directorio /var/www/html (que sabemos que es el DocumentRoot del servidor que nos ofrece esa imagen) el volumen docker que has creado."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name miweb -p 8080:80 -v miweb:/var/www/html php:7.4-apache\ndocker ps\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"root@docker:~# docker run -d --name miweb -p 8080:80 -v miweb:/var/www/html php:7.4-apache\nUnable to find image 'php:7.4-apache' locally\n7.4-apache: Pulling from library/php\na603fa5e3b41: Pull complete \nc428f1a49423: Pull complete \n156740b07ef8: Pull complete \nfb5a4c8af82f: Pull complete \n25f85b498fd5: Pull complete \n9b233e420ac7: Pull complete \nfe42347c4ecf: Pull complete \nd14eb2ed1e17: Pull complete \n66d98f73acb6: Pull complete \nd2c43c5efbc8: Pull complete \nab590b48ea47: Pull complete \n80692ae2d067: Pull complete \n05e465aaa99a: Pull complete \nDigest: sha256:c9d7e608f73832673479770d66aacc8100011ec751d1905ff63fae3fe2e0ca6d\nStatus: Downloaded newer image for php:7.4-apache\nfe5f52e0f6b1dd279f01f08da715ba683427df974749857b018d7d2437a83099\nroot@docker:~# docker ps\nCONTAINER ID   IMAGE            COMMAND                  CREATED          STATUS          PORTS                  NAMES\nfe5f52e0f6b1   php:7.4-apache   \"docker-php-entrypoi\u2026\"   17 seconds ago   Up 16 seconds   0.0.0.0:8080->80/tcp   miweb\nroot@docker:~# \n")),(0,r.kt)("h3",{id:"3-utiliza-el-comando-docker-cp-para-copiar-un-fichero-indexhtml-donde-aparece-tu-nombre-en-el-directorio-varwwwhtml"},"3. Utiliza el comando docker cp para copiar un fichero index.html (donde aparece tu nombre) en el directorio /var/www/html."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},' <!DOCTYPE html>\n <html>\n     <body>\n         <h1>Nombre: Bel\xe9n Nazareth</h1>\n         <h2>Prueba de docker</h2>\n         <img src="https://cataas.com/cat" alt="cat">\n     </body>\n </html>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker cp index.html miweb:/var/www/html\n")),(0,r.kt)("h3",{id:"4-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml"},"4. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(86711).Z,width:"1024",height:"831"})),(0,r.kt)("h3",{id:"5-borra-el-contenedor"},"5. Borra el contenedor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker rm -f miweb\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"debian@docker:~$ docker rm -f miweb\nmiweb\ndebian@docker:~$ docker ps\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\ndebian@docker:~$ \n")),(0,r.kt)("h3",{id:"6-crea-un-nuevo-contenedor-y-monta-el-mismo-volumen-como-en-el-ejercicio-anterior"},"6. Crea un nuevo contenedor y monta el mismo volumen como en el ejercicio anterior."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name miweb -p 8080:80 -v miweb:/var/www/html php:7.4-apache\n")),(0,r.kt)("h3",{id:"7-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml-segu\xeda-existiendo-ese-fichero"},"7. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html. \xbfSegu\xeda existiendo ese fichero?"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(61523).Z,width:"1024",height:"831"})),(0,r.kt)("p",null,"S\xed, ya que al montar el volumen, se mantiene la informaci\xf3n que se ha guardado en \xe9l, y aunque se borre el contenedor, el volumen sigue existiendo."),(0,r.kt)("h2",{id:"vamos-a-trabajar-con-bind-mount"},"Vamos a trabajar con bind mount:"),(0,r.kt)("h3",{id:"1-crea-un-directorio-en-tu-host-y-dentro-crea-un-fichero-indexhtml-donde-aparece-tu-nombre"},"1. Crea un directorio en tu host y dentro crea un fichero index.html (donde aparece tu nombre)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},' <!DOCTYPE html>\n <html>\n     <body>\n         <h1>Nombre: Bel\xe9n Nazareth</h1>\n         <h2>Prueba de docker: bind mount</h2>\n         <img src="https://cataas.com/cat" alt="cat">\n     </body>\n </html>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mkdir bindmount\nmv index.html bindmount/\n")),(0,r.kt)("h3",{id:"2-crea-un-contenedor-desde-la-imagen-php74-apache-donde-montes-en-el-directorio-varwwwhtml-el-directorio-que-has-creado-por-medio-de-bind-mount"},"2. Crea un contenedor desde la imagen php:7.4-apache donde montes en el directorio /var/www/html el directorio que has creado por medio de bind mount."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name miweb -p 8080:80 -v /home/debian/bindmount:/var/www/html php:7.4-apache\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'debian@docker:~$ docker run -d --name miweb -p 8080:80 -v /home/debian/bindmount:/var/www/html php:7.4-apache\n8c4a49f3523dc94464b67502ac765b1396a24cc2393f2998abecf0403f684adc\ndebian@docker:~$ docker ps\nCONTAINER ID   IMAGE            COMMAND                  CREATED         STATUS         PORTS                  NAMES\n8c4a49f3523d   php:7.4-apache   "docker-php-entrypoi\u2026"   4 seconds ago   Up 3 seconds   0.0.0.0:8080->80/tcp   miweb\ndebian@docker:~$ \n')),(0,r.kt)("h3",{id:"3-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml"},"3. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(86976).Z,width:"1024",height:"831"})),(0,r.kt)("h3",{id:"4-modifica-el-contenido-del-fichero-indexhtml-en-tu-host-y-comprueba-que-al-refrescar-la-p\xe1gina-ofrecida-por-el-contenedor-el-contenido-ha-cambiado"},"4. Modifica el contenido del fichero index.html en tu host y comprueba que al refrescar la p\xe1gina ofrecida por el contenedor, el contenido ha cambiado."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"nano bindmount/index.html\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},' <!DOCTYPE html>\n <html>\n     <body>\n         <h1>Nombre: Bel\xe9n Nazareth</h1>\n         <h2>Prueba de docker: bind mount 2</h2>\n         <img src="https://cataas.com/cat" alt="cat">\n     </body>\n </html>\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(5162).Z,width:"1024",height:"831"})),(0,r.kt)("h3",{id:"5-borra-el-contenedor-1"},"5. Borra el contenedor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker rm -f miweb\n")),(0,r.kt)("h3",{id:"6-crea-un-nuevo-contenedor-y-monta-el-mismo-directorio-como-en-el-ejercicio-anterior"},"6. Crea un nuevo contenedor y monta el mismo directorio como en el ejercicio anterior."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name miweb -p 8080:80 -v /home/debian/bindmount:/var/www/html php:7.4-apache\n")),(0,r.kt)("h3",{id:"7-accede-al-contenedor-desde-el-navegador-para-ver-la-informaci\xf3n-ofrecida-por-el-fichero-indexhtml-se-sigue-viendo-el-mismo-contenido"},"7. Accede al contenedor desde el navegador para ver la informaci\xf3n ofrecida por el fichero index.html. \xbfSe sigue viendo el mismo contenido?"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(85519).Z,width:"1024",height:"831"})),(0,r.kt)("p",null,"S\xed, porque como hemos montado el mismo volumen se mantiene el mismo contenido."),(0,r.kt)("h1",{id:"redes"},"Redes"),(0,r.kt)("p",null,"Despliegue de Nextcloud + mariadb/postgreSQL"),(0,r.kt)("p",null,"Vamos a desplegar la aplicaci\xf3n nextcloud con una base de datos (puedes elegir mariadb o PostgreSQL) (NOTA: Para que no te de errores utiliza la imagen mariadb:10.5). Te puede servir el ejercicio que hemos realizado para desplegar Wordpress. Para ello sigue los siguientes pasos:"),(0,r.kt)("h3",{id:"1-crea-una-red-de-tipo-bridge"},"1. Crea una red de tipo bridge."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker network create nextcloud_network --driver bridge\ndocker network ls\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"debian@docker:~$ docker network create nextcloud_network --driver bridge\n144e6fc41b25433eb3d1ab5985eb07cf7f3d9e47d0ad4d004595ef9550e0914d\ndebian@docker:~$ docker network ls\nNETWORK ID     NAME                DRIVER    SCOPE\nd65cf43a13c1   bridge              bridge    local\nc93f21ee2a41   host                host      local\n144e6fc41b25   nextcloud_network   bridge    local\nc3a9f2b27456   none                null      local\ndebian@docker:~$ \n")),(0,r.kt)("h3",{id:"2-crea-el-contenedor-de-la-base-de-datos-conectado-a-la-red-que-has-creado-la-base-de-datos-se-debe-configurar-para-crear-una-base-de-datos-y-un-usuario-adem\xe1s-el-contenedor-debe-utilizar-almacenamiento-vol\xfamenes-o-bind-mount-para-guardar-la-informaci\xf3n-puedes-seguir-la-documentaci\xf3n-de-mariadb-o-la-de-postgresql"},"2. Crea el contenedor de la base de datos conectado a la red que has creado. La base de datos se debe configurar para crear una base de datos y un usuario. Adem\xe1s el contenedor debe utilizar almacenamiento (vol\xfamenes o bind mount) para guardar la informaci\xf3n. Puedes seguir la documentaci\xf3n de mariadb o la de PostgreSQL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name nextcloud-db --network nextcloud_network -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=nextcloud -v nextcloud-db:/var/lib/mysql mariadb:10.5\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'debian@docker:~$ docker run -d --name nextcloud-db --network nextcloud_network -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=nextcloud -v nextcloud-db:/var/lib/mysql mariadb:10.5\nUnable to find image \'mariadb:10.5\' locally\n10.5: Pulling from library/mariadb\n99803d4b97f3: Pull complete \nb8bc823a83fd: Pull complete \n16685f710f5d: Pull complete \nb5660ff63058: Pull complete \nfb5880d2d359: Pull complete \nbaf131972ef1: Pull complete \n2969c5907ed8: Pull complete \n178375b1f8ce: Pull complete \nDigest: sha256:e2e6d26f6419df86e1edef1897fe0e4e28ed40ee65b9b4538e24b0696cc75fd2\nStatus: Downloaded newer image for mariadb:10.5\n372a77b9b0df3ca704a1e9ceae5a4ffa91530c2214dc5938aebd92e112364915\ndebian@docker:~$ docker ps\nCONTAINER ID   IMAGE            COMMAND                  CREATED          STATUS          PORTS                  NAMES\n372a77b9b0df   mariadb:10.5     "docker-entrypoint.s\u2026"   2 minutes ago    Up 2 minutes    3306/tcp               nextcloud-db\n89ceb01dbc82   php:7.4-apache   "docker-php-entrypoi\u2026"   13 minutes ago   Up 12 minutes   0.0.0.0:8080->80/tcp   miweb\ndebian@docker:~$ \n')),(0,r.kt)("h3",{id:"3-a-continuaci\xf3n-siguiendo-la-documentaci\xf3n-de-la-imagen-nextcloud-crea-un-contenedor-conectado-a-la-misma-red-e-indica-las-variables-adecuadas-para-que-se-configure-de-forma-adecuada-y-realice-la-conexi\xf3n-a-la-base-de-datos-el-contenedor-tambi\xe9n-debe-ser-persistente-usando-almacenamiento"},"3. A continuaci\xf3n, siguiendo la documentaci\xf3n de la imagen nextcloud, crea un contenedor conectado a la misma red, e indica las variables adecuadas para que se configure de forma adecuada y realice la conexi\xf3n a la base de datos. El contenedor tambi\xe9n debe ser persistente usando almacenamiento."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name nextcloud --network nextcloud_network -p 8080:80 -v nextcloud:/var/www/html -e MYSQL_HOST=nextcloud-db -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=nextcloud nextcloud\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'debian@docker:~$ docker run -d --name nextcloud --network nextcloud_network -p 8080:80 -v nextcloud:/var/www/html -e MYSQL_HOST=nextcloud-db -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=nextcloud nextcloud\n59b593b2f420ee3350fd43354c661ae4c936e8d1197681324b9b9401ed1cfeb1\ndebian@docker:~$ docker ps\nCONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                  NAMES\n59b593b2f420   nextcloud      "/entrypoint.sh apac\u2026"   14 seconds ago   Up 13 seconds   0.0.0.0:8080->80/tcp   nextcloud\n372a77b9b0df   mariadb:10.5   "docker-entrypoint.s\u2026"   7 minutes ago    Up 7 minutes    3306/tcp               nextcloud-db\ndebian@docker:~$ \n')),(0,r.kt)("h3",{id:"4-accede-a-la-aplicaci\xf3n-usando-un-navegador-web"},"4. Accede a la aplicaci\xf3n usando un navegador web."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(2354).Z,width:"1024",height:"831"})),(0,r.kt)("h2",{id:"entrega"},"Entrega"),(0,r.kt)("h3",{id:"almacenamiento-con-vol\xfamenes-docker"},"Almacenamiento con vol\xfamenes docker"),(0,r.kt)("h3",{id:"1-instrucci\xf3n-para-crear-el-volumen-docker"},"1. Instrucci\xf3n para crear el volumen docker."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker volume create miweb\n")),(0,r.kt)("h3",{id:"2-instrucci\xf3n-para-crear-el-contenedor"},"2. Instrucci\xf3n para crear el contenedor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name miweb -p 8080:80 -v miweb:/var/www/html php:7.4-apache\n")),(0,r.kt)("h3",{id:"3-pantallazo-accediendo-a-la-p\xe1gina-web"},"3. Pantallazo accediendo a la p\xe1gina web."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(86711).Z,width:"1024",height:"831"})),(0,r.kt)("h3",{id:"4-instrucci\xf3n-para-borrar-el-contenedor"},"4. Instrucci\xf3n para borrar el contenedor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker rm -f miweb\n")),(0,r.kt)("h3",{id:"5-instrucci\xf3n-para-crear-de-nuevo-el-contenedor-con-el-volumen-y-pantallazo-accediendo-de-nuevo-a-la-p\xe1gina"},"5. Instrucci\xf3n para crear de nuevo el contenedor con el volumen y pantallazo accediendo de nuevo a la p\xe1gina."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name miweb -p 8080:80 -v miweb:/var/www/html php:7.4-apache\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(61523).Z,width:"1024",height:"831"})),(0,r.kt)("h3",{id:"almacenamiento-con-bind-mount"},"Almacenamiento con bind mount"),(0,r.kt)("h3",{id:"1-instrucci\xf3n-para-crear-el-contenedor"},"1. Instrucci\xf3n para crear el contenedor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name miweb -p 8080:80 -v /home/debian/bindmount:/var/www/html php:7.4-apache\n")),(0,r.kt)("h3",{id:"2-pantallazo-accediendo-a-la-p\xe1gina-web"},"2. Pantallazo accediendo a la p\xe1gina web."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(86976).Z,width:"1024",height:"831"})),(0,r.kt)("h3",{id:"3-pantallazo-accediendo-a-la-p\xe1gina-web-despu\xe9s-de-cambiar-el-fichero-indexhtml-en-tu-host"},"3. Pantallazo accediendo a la p\xe1gina web, despu\xe9s de cambiar el fichero index.html en tu host."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(85519).Z,width:"1024",height:"831"})),(0,r.kt)("h3",{id:"redes-1"},"Redes"),(0,r.kt)("h3",{id:"1-instrucci\xf3n-para-crear-la-red"},"1. Instrucci\xf3n para crear la red"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker network create nextcloud_network --driver bridge\n")),(0,r.kt)("h3",{id:"2-instrucci\xf3n-para-crear-el-contenedor-de-base-de-datos"},"2. Instrucci\xf3n para crear el contenedor de base de datos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name nextcloud-db --network nextcloud_network -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=nextcloud -v nextcloud-db:/var/lib/mysql mariadb:10.5\n")),(0,r.kt)("h3",{id:"3-instrucci\xf3n-para-crear-el-contenedor-de-nextcloud"},"3. Instrucci\xf3n para crear el contenedor de nextcloud."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d --name nextcloud --network nextcloud_network -p 8080:80 -v nextcloud:/var/www/html -e MYSQL_HOST=nextcloud-db -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=nextcloud nextcloud\n")),(0,r.kt)("h3",{id:"4-pantallazos-accediendo-a-nextcloud-para-comprobar-que-funciona-de-manera-correcta"},"4. Pantallazos accediendo a nextcloud para comprobar que funciona de manera correcta."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"docker",src:n(2354).Z,width:"1024",height:"831"})))}s.isMDXComponent=!0},61523:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/taller1IAW6-2-e9985971b4a7d9d68a7652a1df3abec8.png"},86976:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/taller1IAW6-3-a24a6408755697a37056d49815ef6408.png"},5162:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/taller1IAW6-4-57ae9ffed1920d71fd97e498ada6a11e.png"},85519:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/taller1IAW6-5-536763a842d3837e63fcc1775e69883c.png"},2354:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/taller1IAW6-6-e799f8e142756f66f435b223f7456fe2.png"},86711:(e,a,n)=>{n.d(a,{Z:()=>o});const o=n.p+"assets/images/taller1IAW6-e692250bdd24f6a798c3256c7344d6ea.png"}}]);