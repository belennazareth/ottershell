{"version":3,"file":"index.production.js","sources":["../../../autocomplete-shared/dist/esm/debounce.js","../../../autocomplete-shared/dist/esm/flatten.js","../../../autocomplete-shared/dist/esm/generateAutocompleteId.js","../../../autocomplete-shared/dist/esm/getItemsCount.js","../../../autocomplete-shared/dist/esm/isEqual.js","../../../autocomplete-shared/dist/esm/noop.js","../../../autocomplete-shared/dist/esm/version.js","../../../autocomplete-shared/dist/esm/userAgents.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js","../../../autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js","../../../autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js","../../../autocomplete-shared/dist/esm/safelyRunOnBrowser.js","../../../autocomplete-shared/dist/esm/createRef.js","../../src/utils/createCancelablePromise.ts","../../src/utils/getNextActiveItemId.ts","../../src/utils/getActiveItem.ts","../../src/utils/isSamsung.ts","../../src/getDefaultProps.ts","../../src/utils/getNormalizedSources.ts","../../src/resolve.ts","../../src/utils/mapToAlgoliaResponse.ts","../../src/utils/createConcurrentSafePromise.ts","../../src/onInput.ts","../../src/reshape.ts","../../src/getPropGetters.ts","../../src/utils/isOrContainsNode.ts","../../src/onKeyDown.ts","../../src/metadata.ts","../../src/getCompletion.ts","../../src/stateReducer.ts","../../src/createAutocomplete.ts","../../src/createStore.ts","../../src/utils/createCancelablePromiseList.ts","../../src/getAutocompleteSetters.ts"],"sourcesContent":["export function debounce(fn, time) {\n  var timerId = undefined;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(function () {\n      return fn.apply(void 0, args);\n    }, time);\n  };\n}","export function flatten(values) {\n  return values.reduce(function (a, b) {\n    return a.concat(b);\n  }, []);\n}","var autocompleteId = 0;\nexport function generateAutocompleteId() {\n  return \"autocomplete-\".concat(autocompleteId++);\n}","export function getItemsCount(state) {\n  if (state.collections.length === 0) {\n    return 0;\n  }\n  return state.collections.reduce(function (sum, collection) {\n    return sum + collection.items.length;\n  }, 0);\n}","function isPrimitive(obj) {\n  return obj !== Object(obj);\n}\nexport function isEqual(first, second) {\n  if (first === second) {\n    return true;\n  }\n  if (isPrimitive(first) || isPrimitive(second) || typeof first === 'function' || typeof second === 'function') {\n    return first === second;\n  }\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n  for (var _i = 0, _Object$keys = Object.keys(first); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (!(key in second)) {\n      return false;\n    }\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n  return true;\n}","export var noop = function noop() {};","export var version = '1.9.2';","import { version } from './version';\nexport var userAgents = [{\n  segment: 'autocomplete-core',\n  version: version\n}];","export function createClickedEvent(_ref) {\n  var item = _ref.item,\n    items = _ref.items;\n  return {\n    index: item.__autocomplete_indexName,\n    items: [item],\n    positions: [1 + items.findIndex(function (x) {\n      return x.objectID === item.objectID;\n    })],\n    queryID: item.__autocomplete_queryID,\n    algoliaSource: ['autocomplete']\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nexport function isModernInsightsClient(client) {\n  var _split$map = (client.version || '').split('.').map(Number),\n    _split$map2 = _slicedToArray(_split$map, 2),\n    major = _split$map2[0],\n    minor = _split$map2[1];\n\n  /* eslint-disable @typescript-eslint/camelcase */\n  var v3 = major >= 3;\n  var v2_4 = major === 2 && minor >= 4;\n  var v1_10 = major === 1 && minor >= 10;\n  return v3 || v2_4 || v1_10;\n  /* eslint-enable @typescript-eslint/camelcase */\n}","var _excluded = [\"items\"],\n  _excluded2 = [\"items\"];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isModernInsightsClient } from './isModernInsightsClient';\nfunction chunk(item) {\n  var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  var chunks = [];\n  for (var i = 0; i < item.objectIDs.length; i += chunkSize) {\n    chunks.push(_objectSpread(_objectSpread({}, item), {}, {\n      objectIDs: item.objectIDs.slice(i, i + chunkSize)\n    }));\n  }\n  return chunks;\n}\nfunction mapToInsightsParamsApi(params) {\n  return params.map(function (_ref) {\n    var items = _ref.items,\n      param = _objectWithoutProperties(_ref, _excluded);\n    return _objectSpread(_objectSpread({}, param), {}, {\n      objectIDs: (items === null || items === void 0 ? void 0 : items.map(function (_ref2) {\n        var objectID = _ref2.objectID;\n        return objectID;\n      })) || param.objectIDs\n    });\n  });\n}\nexport function createSearchInsightsApi(searchInsights) {\n  var canSendHeaders = isModernInsightsClient(searchInsights);\n  function sendToInsights(method, payloads, items) {\n    if (canSendHeaders && typeof items !== 'undefined') {\n      var _items$0$__autocomple = items[0].__autocomplete_algoliaCredentials,\n        appId = _items$0$__autocomple.appId,\n        apiKey = _items$0$__autocomple.apiKey;\n      var headers = {\n        'X-Algolia-Application-Id': appId,\n        'X-Algolia-API-Key': apiKey\n      };\n      searchInsights.apply(void 0, [method].concat(_toConsumableArray(payloads), [{\n        headers: headers\n      }]));\n    } else {\n      searchInsights.apply(void 0, [method].concat(_toConsumableArray(payloads)));\n    }\n  }\n  return {\n    /**\n     * Initializes Insights with Algolia credentials.\n     */\n    init: function init(appId, apiKey) {\n      searchInsights('init', {\n        appId: appId,\n        apiKey: apiKey\n      });\n    },\n    /**\n     * Sets the user token to attach to events.\n     */\n    setUserToken: function setUserToken(userToken) {\n      searchInsights('setUserToken', userToken);\n    },\n    /**\n     * Sends click events to capture a query and its clicked items and positions.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids-after-search/\n     */\n    clickedObjectIDsAfterSearch: function clickedObjectIDsAfterSearch() {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n      if (params.length > 0) {\n        sendToInsights('clickedObjectIDsAfterSearch', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends click events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids/\n     */\n    clickedObjectIDs: function clickedObjectIDs() {\n      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        params[_key2] = arguments[_key2];\n      }\n      if (params.length > 0) {\n        sendToInsights('clickedObjectIDs', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends click events to capture the filters a user clicks on.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-filters/\n     */\n    clickedFilters: function clickedFilters() {\n      for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        params[_key3] = arguments[_key3];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['clickedFilters'].concat(params));\n      }\n    },\n    /**\n     * Sends conversion events to capture a query and its clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids-after-search/\n     */\n    convertedObjectIDsAfterSearch: function convertedObjectIDsAfterSearch() {\n      for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        params[_key4] = arguments[_key4];\n      }\n      if (params.length > 0) {\n        sendToInsights('convertedObjectIDsAfterSearch', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends conversion events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids/\n     */\n    convertedObjectIDs: function convertedObjectIDs() {\n      for (var _len5 = arguments.length, params = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        params[_key5] = arguments[_key5];\n      }\n      if (params.length > 0) {\n        sendToInsights('convertedObjectIDs', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends conversion events to capture the filters a user uses when converting.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-filters/\n     */\n    convertedFilters: function convertedFilters() {\n      for (var _len6 = arguments.length, params = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        params[_key6] = arguments[_key6];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['convertedFilters'].concat(params));\n      }\n    },\n    /**\n     * Sends view events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-object-ids/\n     */\n    viewedObjectIDs: function viewedObjectIDs() {\n      for (var _len7 = arguments.length, params = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        params[_key7] = arguments[_key7];\n      }\n      if (params.length > 0) {\n        params.reduce(function (acc, _ref3) {\n          var items = _ref3.items,\n            param = _objectWithoutProperties(_ref3, _excluded2);\n          return [].concat(_toConsumableArray(acc), _toConsumableArray(chunk(_objectSpread(_objectSpread({}, param), {}, {\n            objectIDs: (items === null || items === void 0 ? void 0 : items.map(function (_ref4) {\n              var objectID = _ref4.objectID;\n              return objectID;\n            })) || param.objectIDs\n          })).map(function (payload) {\n            return {\n              items: items,\n              payload: payload\n            };\n          })));\n        }, []).forEach(function (_ref5) {\n          var items = _ref5.items,\n            payload = _ref5.payload;\n          return sendToInsights('viewedObjectIDs', [payload], items);\n        });\n      }\n    },\n    /**\n     * Sends view events to capture the filters a user uses when viewing.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-filters/\n     */\n    viewedFilters: function viewedFilters() {\n      for (var _len8 = arguments.length, params = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        params[_key8] = arguments[_key8];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['viewedFilters'].concat(params));\n      }\n    }\n  };\n}","export function createViewedEvents(_ref) {\n  var items = _ref.items;\n  var itemsByIndexName = items.reduce(function (acc, current) {\n    var _acc$current$__autoco;\n    acc[current.__autocomplete_indexName] = ((_acc$current$__autoco = acc[current.__autocomplete_indexName]) !== null && _acc$current$__autoco !== void 0 ? _acc$current$__autoco : []).concat(current);\n    return acc;\n  }, {});\n  return Object.keys(itemsByIndexName).map(function (indexName) {\n    var items = itemsByIndexName[indexName];\n    return {\n      index: indexName,\n      items: items,\n      algoliaSource: ['autocomplete']\n    };\n  });\n}","export function isAlgoliaInsightsHit(hit) {\n  return hit.objectID && hit.__autocomplete_indexName && hit.__autocomplete_queryID;\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { createRef, debounce, isEqual, noop, safelyRunOnBrowser } from '@algolia/autocomplete-shared';\nimport { createClickedEvent } from './createClickedEvent';\nimport { createSearchInsightsApi } from './createSearchInsightsApi';\nimport { createViewedEvents } from './createViewedEvents';\nimport { isAlgoliaInsightsHit } from './isAlgoliaInsightsHit';\nvar VIEW_EVENT_DELAY = 400;\nvar ALGOLIA_INSIGHTS_VERSION = '2.6.0';\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nvar sendViewedObjectIDs = debounce(function (_ref) {\n  var onItemsChange = _ref.onItemsChange,\n    items = _ref.items,\n    insights = _ref.insights,\n    state = _ref.state;\n  onItemsChange({\n    insights: insights,\n    insightsEvents: createViewedEvents({\n      items: items\n    }).map(function (event) {\n      return _objectSpread({\n        eventName: 'Items Viewed'\n      }, event);\n    }),\n    state: state\n  });\n}, VIEW_EVENT_DELAY);\nexport function createAlgoliaInsightsPlugin(options) {\n  var _getOptions = getOptions(options),\n    providedInsightsClient = _getOptions.insightsClient,\n    onItemsChange = _getOptions.onItemsChange,\n    onSelectEvent = _getOptions.onSelect,\n    onActiveEvent = _getOptions.onActive;\n  var insightsClient = providedInsightsClient;\n  if (!providedInsightsClient) {\n    safelyRunOnBrowser(function (_ref2) {\n      var window = _ref2.window;\n      var pointer = window.AlgoliaAnalyticsObject || 'aa';\n      if (typeof pointer === 'string') {\n        insightsClient = window[pointer];\n      }\n      if (!insightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n        if (!window[pointer]) {\n          window[pointer] = function () {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            window[pointer].queue.push(args);\n          };\n        }\n        window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n        insightsClient = window[pointer];\n        loadInsights(window);\n      }\n    });\n  }\n  var insights = createSearchInsightsApi(insightsClient);\n  var previousItems = createRef([]);\n  var debouncedOnStateChange = debounce(function (_ref3) {\n    var state = _ref3.state;\n    if (!state.isOpen) {\n      return;\n    }\n    var items = state.collections.reduce(function (acc, current) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(current.items));\n    }, []).filter(isAlgoliaInsightsHit);\n    if (!isEqual(previousItems.current.map(function (x) {\n      return x.objectID;\n    }), items.map(function (x) {\n      return x.objectID;\n    }))) {\n      previousItems.current = items;\n      if (items.length > 0) {\n        sendViewedObjectIDs({\n          onItemsChange: onItemsChange,\n          items: items,\n          insights: insights,\n          state: state\n        });\n      }\n    }\n  }, 0);\n  return {\n    name: 'aa.algoliaInsightsPlugin',\n    subscribe: function subscribe(_ref4) {\n      var setContext = _ref4.setContext,\n        onSelect = _ref4.onSelect,\n        onActive = _ref4.onActive;\n      insightsClient('addAlgoliaAgent', 'insights-plugin');\n      setContext({\n        algoliaInsightsPlugin: {\n          __algoliaSearchParameters: {\n            clickAnalytics: true\n          },\n          insights: insights\n        }\n      });\n      onSelect(function (_ref5) {\n        var item = _ref5.item,\n          state = _ref5.state,\n          event = _ref5.event;\n        if (!isAlgoliaInsightsHit(item)) {\n          return;\n        }\n        onSelectEvent({\n          state: state,\n          event: event,\n          insights: insights,\n          item: item,\n          insightsEvents: [_objectSpread({\n            eventName: 'Item Selected'\n          }, createClickedEvent({\n            item: item,\n            items: previousItems.current\n          }))]\n        });\n      });\n      onActive(function (_ref6) {\n        var item = _ref6.item,\n          state = _ref6.state,\n          event = _ref6.event;\n        if (!isAlgoliaInsightsHit(item)) {\n          return;\n        }\n        onActiveEvent({\n          state: state,\n          event: event,\n          insights: insights,\n          item: item,\n          insightsEvents: [_objectSpread({\n            eventName: 'Item Active'\n          }, createClickedEvent({\n            item: item,\n            items: previousItems.current\n          }))]\n        });\n      });\n    },\n    onStateChange: function onStateChange(_ref7) {\n      var state = _ref7.state;\n      debouncedOnStateChange({\n        state: state\n      });\n    },\n    __autocomplete_pluginOptions: options\n  };\n}\nfunction getOptions(options) {\n  return _objectSpread({\n    onItemsChange: function onItemsChange(_ref8) {\n      var insights = _ref8.insights,\n        insightsEvents = _ref8.insightsEvents;\n      insights.viewedObjectIDs.apply(insights, _toConsumableArray(insightsEvents.map(function (event) {\n        return _objectSpread(_objectSpread({}, event), {}, {\n          algoliaSource: [].concat(_toConsumableArray(event.algoliaSource || []), ['autocomplete-internal'])\n        });\n      })));\n    },\n    onSelect: function onSelect(_ref9) {\n      var insights = _ref9.insights,\n        insightsEvents = _ref9.insightsEvents;\n      insights.clickedObjectIDsAfterSearch.apply(insights, _toConsumableArray(insightsEvents.map(function (event) {\n        return _objectSpread(_objectSpread({}, event), {}, {\n          algoliaSource: [].concat(_toConsumableArray(event.algoliaSource || []), ['autocomplete-internal'])\n        });\n      })));\n    },\n    onActive: noop\n  }, options);\n}\nfunction loadInsights(environment) {\n  var errorMessage = \"[Autocomplete]: Could not load search-insights.js. Please load it manually following https://alg.li/insights-autocomplete\";\n  try {\n    var script = environment.document.createElement('script');\n    script.async = true;\n    script.src = ALGOLIA_INSIGHTS_SRC;\n    script.onerror = function () {\n      // eslint-disable-next-line no-console\n      console.error(errorMessage);\n    };\n    document.body.appendChild(script);\n  } catch (cause) {\n    // eslint-disable-next-line no-console\n    console.error(errorMessage);\n  }\n}","/**\n * Safely runs code meant for browser environments only.\n */\nexport function safelyRunOnBrowser(callback) {\n  if (typeof window !== 'undefined') {\n    return callback({\n      window: window\n    });\n  }\n  return undefined;\n}","export function createRef(initialValue) {\n  return {\n    current: initialValue\n  };\n}","type PromiseExecutor<TValue> = (\n  resolve: (value: TValue | PromiseLike<TValue>) => void,\n  reject: (reason?: any) => void\n) => void;\n\ntype CancelablePromiseState = {\n  isCanceled: boolean;\n  onCancelList: Array<(...args: any[]) => any>;\n};\n\nfunction createInternalCancelablePromise<TValue>(\n  promise: Promise<TValue>,\n  initialState: CancelablePromiseState\n): CancelablePromise<TValue> {\n  const state = initialState;\n\n  return {\n    then(onfulfilled, onrejected) {\n      return createInternalCancelablePromise(\n        promise.then(\n          createCallback(onfulfilled, state, promise),\n          createCallback(onrejected, state, promise)\n        ),\n        state\n      );\n    },\n    catch(onrejected) {\n      return createInternalCancelablePromise(\n        promise.catch(createCallback(onrejected, state, promise)),\n        state\n      );\n    },\n    finally(onfinally) {\n      if (onfinally) {\n        state.onCancelList.push(onfinally);\n      }\n\n      return createInternalCancelablePromise<TValue>(\n        promise.finally(\n          createCallback(\n            onfinally &&\n              (() => {\n                state.onCancelList = [];\n\n                return onfinally();\n              }),\n            state,\n            promise\n          )\n        ),\n        state\n      );\n    },\n    cancel() {\n      state.isCanceled = true;\n      const callbacks = state.onCancelList;\n      state.onCancelList = [];\n\n      callbacks.forEach((callback) => {\n        callback();\n      });\n    },\n    isCanceled() {\n      return state.isCanceled === true;\n    },\n  };\n}\n\nexport type CancelablePromise<TValue> = {\n  then<TResultFulfilled = TValue, TResultRejected = never>(\n    onfulfilled?:\n      | ((\n          value: TValue\n        ) =>\n          | TResultFulfilled\n          | PromiseLike<TResultFulfilled>\n          | CancelablePromise<TResultFulfilled>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((\n          reason: any\n        ) =>\n          | TResultRejected\n          | PromiseLike<TResultRejected>\n          | CancelablePromise<TResultRejected>)\n      | undefined\n      | null\n  ): CancelablePromise<TResultFulfilled | TResultRejected>;\n  catch<TResult = never>(\n    onrejected?:\n      | ((\n          reason: any\n        ) => TResult | PromiseLike<TResult> | CancelablePromise<TResult>)\n      | undefined\n      | null\n  ): CancelablePromise<TValue | TResult>;\n  finally(\n    onfinally?: (() => void) | undefined | null\n  ): CancelablePromise<TValue>;\n  cancel(): void;\n  isCanceled(): boolean;\n};\n\nexport function createCancelablePromise<TValue>(\n  executor: PromiseExecutor<TValue>\n): CancelablePromise<TValue> {\n  return createInternalCancelablePromise(\n    new Promise<TValue>((resolve, reject) => {\n      return executor(resolve, reject);\n    }),\n    { isCanceled: false, onCancelList: [] }\n  );\n}\n\ncreateCancelablePromise.resolve = <TValue>(\n  value?: TValue | PromiseLike<TValue> | CancelablePromise<TValue>\n) => cancelable(Promise.resolve(value));\n\ncreateCancelablePromise.reject = (reason?: any) =>\n  cancelable(Promise.reject(reason));\n\nexport function cancelable<TValue>(promise: Promise<TValue>) {\n  return createInternalCancelablePromise(promise, {\n    isCanceled: false,\n    onCancelList: [],\n  });\n}\n\nfunction createCallback(\n  onResult: ((...args: any[]) => any) | null | undefined,\n  state: CancelablePromiseState,\n  fallback: any\n) {\n  if (!onResult) {\n    return fallback;\n  }\n\n  return function callback(arg?: any) {\n    if (state.isCanceled) {\n      return arg;\n    }\n\n    return onResult(arg);\n  };\n}\n","/**\n * Returns the next active item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultActiveItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultActiveItemId The default active index to fallback to\n */\nexport function getNextActiveItemId(\n  moveAmount: number,\n  baseIndex: number | null,\n  itemCount: number,\n  defaultActiveItemId: number | null\n): number | null {\n  if (!itemCount) {\n    return null;\n  }\n\n  if (\n    moveAmount < 0 &&\n    (baseIndex === null || (defaultActiveItemId !== null && baseIndex === 0))\n  ) {\n    return itemCount + moveAmount;\n  }\n\n  const numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n\n  if (numericIndex <= -1 || numericIndex >= itemCount) {\n    return defaultActiveItemId === null ? null : 0;\n  }\n\n  return numericIndex;\n}\n","import { AutocompleteCollection, AutocompleteState, BaseItem } from '../types';\n\n// We don't have access to the autocomplete source when we call `onKeyDown`\n// or `onClick` because those are native browser events.\n// However, we can get the source from the suggestion index.\nfunction getCollectionFromActiveItemId<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n): AutocompleteCollection<TItem> | undefined {\n  // Given 3 sources with respectively 1, 2 and 3 suggestions: [1, 2, 3]\n  // We want to get the accumulated counts:\n  // [1, 1 + 2, 1 + 2 + 3] = [1, 3, 3 + 3] = [1, 3, 6]\n  const accumulatedCollectionsCount = state.collections\n    .map((collections) => collections.items.length)\n    .reduce<number[]>((acc, collectionsCount, index) => {\n      const previousValue = acc[index - 1] || 0;\n      const nextValue = previousValue + collectionsCount;\n\n      acc.push(nextValue);\n\n      return acc;\n    }, []);\n\n  // Based on the accumulated counts, we can infer the index of the suggestion.\n  const collectionIndex = accumulatedCollectionsCount.reduce((acc, current) => {\n    if (current <= state.activeItemId!) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n\n  return state.collections[collectionIndex];\n}\n\n/**\n * Gets the highlighted index relative to a suggestion object (not the absolute\n * highlighted index).\n *\n * Example:\n *  [['a', 'b'], ['c', 'd', 'e'], ['f']]\n *                      ↑\n *         (absolute: 3, relative: 1)\n */\nfunction getRelativeActiveItemId<TItem extends BaseItem>({\n  state,\n  collection,\n}: {\n  state: AutocompleteState<TItem>;\n  collection: AutocompleteCollection<TItem>;\n}): number {\n  let isOffsetFound = false;\n  let counter = 0;\n  let previousItemsOffset = 0;\n\n  while (isOffsetFound === false) {\n    const currentCollection = state.collections[counter];\n\n    if (currentCollection === collection) {\n      isOffsetFound = true;\n      break;\n    }\n\n    previousItemsOffset += currentCollection.items.length;\n\n    counter++;\n  }\n\n  return state.activeItemId! - previousItemsOffset;\n}\n\nexport function getActiveItem<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n) {\n  const collection = getCollectionFromActiveItemId(state);\n\n  if (!collection) {\n    return null;\n  }\n\n  const item = collection.items[getRelativeActiveItemId({ state, collection })];\n  const source = collection.source;\n  const itemInputValue = source.getItemInputValue({ item, state });\n  const itemUrl = source.getItemUrl({ item, state });\n\n  return {\n    item,\n    itemInputValue,\n    itemUrl,\n    source,\n  };\n}\n","const regex = /((gt|sm)-|galaxy nexus)|samsung[- ]/i;\n\nexport function isSamsung(userAgent: string) {\n  return Boolean(userAgent && userAgent.match(regex));\n}\n","import {\n  getItemsCount,\n  generateAutocompleteId,\n  flatten,\n} from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteEnvironment,\n  AutocompleteOptions,\n  AutocompleteSubscribers,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getNormalizedSources } from './utils';\n\nexport function getDefaultProps<TItem extends BaseItem>(\n  props: AutocompleteOptions<TItem>,\n  pluginSubscribers: AutocompleteSubscribers<TItem>\n): InternalAutocompleteOptions<TItem> {\n  /* eslint-disable no-restricted-globals */\n  const environment: AutocompleteEnvironment = (\n    typeof window !== 'undefined' ? window : {}\n  ) as typeof window;\n  /* eslint-enable no-restricted-globals */\n  const plugins = props.plugins || [];\n\n  return {\n    debug: false,\n    openOnFocus: false,\n    placeholder: '',\n    autoFocus: false,\n    defaultActiveItemId: null,\n    stallThreshold: 300,\n    insights: false,\n    environment,\n    shouldPanelOpen: ({ state }) => getItemsCount(state) > 0,\n    reshape: ({ sources }) => sources,\n    ...props,\n    // Since `generateAutocompleteId` triggers a side effect (it increments\n    // an internal counter), we don't want to execute it if unnecessary.\n    id: props.id ?? generateAutocompleteId(),\n    plugins,\n    // The following props need to be deeply defaulted.\n    initialState: {\n      activeItemId: null,\n      query: '',\n      completion: null,\n      collections: [],\n      isOpen: false,\n      status: 'idle',\n      context: {},\n      ...props.initialState,\n    },\n    onStateChange(params) {\n      props.onStateChange?.(params);\n      plugins.forEach((x) => x.onStateChange?.(params));\n    },\n    onSubmit(params) {\n      props.onSubmit?.(params);\n      plugins.forEach((x) => x.onSubmit?.(params));\n    },\n    onReset(params) {\n      props.onReset?.(params);\n      plugins.forEach((x) => x.onReset?.(params));\n    },\n    getSources(params) {\n      return Promise.all(\n        [...plugins.map((plugin) => plugin.getSources), props.getSources]\n          .filter(Boolean)\n          .map((getSources) => getNormalizedSources(getSources!, params))\n      )\n        .then((nested) => flatten(nested))\n        .then((sources) =>\n          sources.map((source) => ({\n            ...source,\n            onSelect(params) {\n              source.onSelect(params);\n              pluginSubscribers.forEach((x) => x.onSelect?.(params));\n            },\n            onActive(params) {\n              source.onActive(params);\n              pluginSubscribers.forEach((x) => x.onActive?.(params));\n            },\n            onResolve(params) {\n              source.onResolve(params);\n              pluginSubscribers.forEach((x) => x.onResolve?.(params));\n            },\n          }))\n        );\n    },\n    navigator: {\n      navigate({ itemUrl }) {\n        environment.location.assign(itemUrl);\n      },\n      navigateNewTab({ itemUrl }) {\n        const windowReference = environment.open(itemUrl, '_blank', 'noopener');\n        windowReference?.focus();\n      },\n      navigateNewWindow({ itemUrl }) {\n        environment.open(itemUrl, '_blank', 'noopener');\n      },\n      ...props.navigator,\n    },\n  };\n}\n","import { invariant, decycle, noop } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteSource,\n  BaseItem,\n  GetSources,\n  GetSourcesParams,\n  InternalAutocompleteSource,\n  InternalGetSources,\n} from '../types';\n\nexport function getNormalizedSources<TItem extends BaseItem>(\n  getSources: GetSources<TItem>,\n  params: GetSourcesParams<TItem>\n): ReturnType<InternalGetSources<TItem>> {\n  const seenSourceIds: string[] = [];\n\n  return Promise.resolve(getSources(params)).then((sources) => {\n    invariant(\n      Array.isArray(sources),\n      () =>\n        `The \\`getSources\\` function must return an array of sources but returned type ${JSON.stringify(\n          typeof sources\n        )}:\\n\\n${JSON.stringify(decycle(sources), null, 2)}`\n    );\n\n    return Promise.all(\n      sources\n        // We allow `undefined` and `false` sources to allow users to use\n        // `Boolean(query) && source` (=> `false`).\n        // We need to remove these values at this point.\n        .filter((maybeSource: any): maybeSource is AutocompleteSource<TItem> =>\n          Boolean(maybeSource)\n        )\n        .map((source) => {\n          invariant(\n            typeof source.sourceId === 'string',\n            'A source must provide a `sourceId` string.'\n          );\n\n          if (seenSourceIds.includes(source.sourceId)) {\n            throw new Error(\n              `[Autocomplete] The \\`sourceId\\` ${JSON.stringify(\n                source.sourceId\n              )} is not unique.`\n            );\n          }\n\n          seenSourceIds.push(source.sourceId);\n\n          const defaultSource: Omit<\n            InternalAutocompleteSource<TItem>,\n            'sourceId' | 'getItems'\n          > = {\n            getItemInputValue({ state }) {\n              return state.query;\n            },\n            getItemUrl() {\n              return undefined;\n            },\n            onSelect({ setIsOpen }) {\n              setIsOpen(false);\n            },\n            onActive: noop,\n            onResolve: noop,\n          };\n\n          Object.keys(defaultSource).forEach((key) => {\n            defaultSource[key].__default = true;\n          });\n\n          const normalizedSource: InternalAutocompleteSource<TItem> = {\n            ...defaultSource,\n            ...source,\n          };\n\n          return Promise.resolve(normalizedSource);\n        })\n    );\n  });\n}\n","import type {\n  Execute,\n  ExecuteResponse,\n  RequesterDescription,\n  TransformResponse,\n} from '@algolia/autocomplete-preset-algolia';\nimport { decycle, flatten, invariant } from '@algolia/autocomplete-shared';\nimport {\n  MultipleQueriesQuery,\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\nimport type { SearchClient } from 'algoliasearch/lite';\n\nimport {\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteSource,\n  OnResolveParams,\n} from './types';\nimport { mapToAlgoliaResponse } from './utils';\n\nfunction isDescription<TItem extends BaseItem>(\n  item:\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n    | PackedDescription<TItem>\n): item is RequestDescriptionPreResolved<TItem> {\n  return Boolean((item as RequestDescriptionPreResolved<TItem>).execute);\n}\n\nfunction isRequesterDescription<TItem extends BaseItem>(\n  description: TItem[] | TItem[][] | RequesterDescription<TItem>\n): description is RequesterDescription<TItem> {\n  return Boolean((description as RequesterDescription<TItem>)?.execute);\n}\n\ntype PackedDescription<TItem extends BaseItem> = {\n  searchClient: SearchClient;\n  execute: Execute<TItem>;\n  requesterId?: string;\n  items: RequestDescriptionPreResolved<TItem>['requests'];\n};\n\ntype RequestDescriptionPreResolved<TItem extends BaseItem> = Pick<\n  RequesterDescription<TItem>,\n  'execute' | 'requesterId' | 'searchClient' | 'transformResponse'\n> & {\n  requests: Array<{\n    query: MultipleQueriesQuery;\n    sourceId: string;\n    transformResponse: TransformResponse<TItem>;\n  }>;\n};\n\ntype RequestDescriptionPreResolvedCustom<TItem extends BaseItem> = {\n  items: TItem[] | TItem[][];\n  sourceId: string;\n  transformResponse?: undefined;\n};\n\nexport function preResolve<TItem extends BaseItem>(\n  itemsOrDescription: TItem[] | TItem[][] | RequesterDescription<TItem>,\n  sourceId: string,\n  state: AutocompleteState<TItem>\n):\n  | RequestDescriptionPreResolved<TItem>\n  | RequestDescriptionPreResolvedCustom<TItem> {\n  if (isRequesterDescription<TItem>(itemsOrDescription)) {\n    const contextParameters =\n      itemsOrDescription.requesterId === 'algolia'\n        ? Object.assign(\n            {},\n            ...Object.keys(state.context).map((key) => {\n              return (state.context[key] as Record<string, unknown>)\n                ?.__algoliaSearchParameters;\n            })\n          )\n        : {};\n\n    return {\n      ...itemsOrDescription,\n      requests: itemsOrDescription.queries.map((query) => ({\n        query:\n          itemsOrDescription.requesterId === 'algolia'\n            ? {\n                ...query,\n                params: {\n                  ...contextParameters,\n                  ...query.params,\n                },\n              }\n            : query,\n        sourceId,\n        transformResponse: itemsOrDescription.transformResponse,\n      })),\n    };\n  }\n\n  return {\n    items: itemsOrDescription,\n    sourceId,\n  };\n}\n\nexport function resolve<TItem extends BaseItem>(\n  items: Array<\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n  >\n) {\n  const packed = items.reduce<\n    Array<RequestDescriptionPreResolvedCustom<TItem> | PackedDescription<TItem>>\n  >((acc, current) => {\n    if (!isDescription(current)) {\n      acc.push(current);\n      return acc;\n    }\n\n    const { searchClient, execute, requesterId, requests } = current;\n\n    const container = acc.find<PackedDescription<TItem>>(\n      (item): item is PackedDescription<TItem> => {\n        return (\n          isDescription(current) &&\n          isDescription(item) &&\n          item.searchClient === searchClient &&\n          Boolean(requesterId) &&\n          item.requesterId === requesterId\n        );\n      }\n    );\n\n    if (container) {\n      container.items.push(...requests);\n    } else {\n      const request: PackedDescription<TItem> = {\n        execute,\n        requesterId,\n        items: requests,\n        searchClient,\n      };\n      acc.push(request);\n    }\n\n    return acc;\n  }, []);\n\n  const values = packed.map<\n    | Promise<RequestDescriptionPreResolvedCustom<TItem>>\n    | ReturnType<Execute<TItem>>\n  >((maybeDescription) => {\n    if (!isDescription<TItem>(maybeDescription)) {\n      return Promise.resolve(\n        maybeDescription as RequestDescriptionPreResolvedCustom<TItem>\n      );\n    }\n\n    const { execute, items, searchClient } =\n      maybeDescription as PackedDescription<TItem>;\n\n    return execute({\n      searchClient,\n      requests: items,\n    });\n  });\n\n  return Promise.all<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>\n  >(values).then((responses) =>\n    flatten<\n      RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n    >(responses)\n  );\n}\n\nexport function postResolve<TItem extends BaseItem>(\n  responses: Array<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n  >,\n  sources: Array<InternalAutocompleteSource<TItem>>,\n  store: AutocompleteStore<TItem>\n) {\n  return sources.map((source) => {\n    const matches = responses.filter(\n      (response) => response.sourceId === source.sourceId\n    );\n    const results = matches.map(({ items }) => items);\n    const transform = matches[0].transformResponse;\n    const items = transform\n      ? transform(\n          mapToAlgoliaResponse(\n            results as Array<\n              SearchForFacetValuesResponse | SearchResponse<TItem>\n            >\n          )\n        )\n      : results;\n\n    source.onResolve({\n      source,\n      results,\n      items,\n      state: store.getState(),\n    } as OnResolveParams<TItem>);\n\n    invariant(\n      Array.isArray(items),\n      () => `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned type ${JSON.stringify(\n        typeof items\n      )}:\\n\\n${JSON.stringify(decycle(items), null, 2)}.\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    invariant(\n      (items as Array<typeof items>).every(Boolean),\n      `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned ${JSON.stringify(\n        undefined\n      )}.\n\nDid you forget to return items?\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    return {\n      source,\n      items,\n    };\n  });\n}\n","import type {\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\n\nexport function mapToAlgoliaResponse<THit>(\n  rawResults: Array<SearchResponse<THit> | SearchForFacetValuesResponse>\n) {\n  const results: Array<SearchResponse<THit> | SearchForFacetValuesResponse> =\n    rawResults.map((result) => {\n      return {\n        ...result,\n        hits: (result as SearchResponse<THit>).hits?.map((hit) => {\n          // Bring support for the Insights plugin.\n          return {\n            ...hit,\n            __autocomplete_indexName: (result as SearchResponse<THit>).index,\n            __autocomplete_queryID: (result as SearchResponse<THit>).queryID,\n          };\n        }),\n      };\n    });\n\n  return {\n    results,\n    hits: results\n      .map((result) => (result as SearchResponse<THit>).hits)\n      .filter(Boolean),\n    facetHits: results\n      .map((result) =>\n        (result as SearchForFacetValuesResponse).facetHits?.map((facetHit) => {\n          // Bring support for the highlighting components.\n          return {\n            label: facetHit.value,\n            count: facetHit.count,\n            _highlightResult: {\n              label: {\n                value: facetHit.highlighted,\n              },\n            },\n          };\n        })\n      )\n      .filter(Boolean),\n  };\n}\n","import { MaybePromise } from '@algolia/autocomplete-shared';\n\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: unknown = undefined;\n\n  return function runConcurrentSafePromise<TValue>(\n    promise: MaybePromise<TValue>\n  ) {\n    basePromiseId++;\n    const currentPromiseId = basePromiseId;\n\n    return Promise.resolve(promise).then((x) => {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue as TValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n\n      return x;\n    });\n  };\n}\n","import { reshape } from './reshape';\nimport { preResolve, resolve, postResolve } from './resolve';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport {\n  cancelable,\n  CancelablePromise,\n  createConcurrentSafePromise,\n  getActiveItem,\n} from './utils';\n\nlet lastStalledId: number | null = null;\n\ninterface OnInputParams<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: any;\n  /**\n   * The next partial state to apply after the function is called.\n   *\n   * This is useful when we call `onInput` in a different scenario than an\n   * actual input. For example, we use `onInput` when we click on an item,\n   * but we want to close the panel in that case.\n   */\n  nextState?: Partial<AutocompleteState<TItem>>;\n  props: InternalAutocompleteOptions<TItem>;\n  query: string;\n  store: AutocompleteStore<TItem>;\n}\n\nconst runConcurrentSafePromise = createConcurrentSafePromise();\n\nexport function onInput<TItem extends BaseItem>({\n  event,\n  nextState = {},\n  props,\n  query,\n  refresh,\n  store,\n  ...setters\n}: OnInputParams<TItem>): CancelablePromise<void> {\n  if (lastStalledId) {\n    props.environment.clearTimeout(lastStalledId);\n  }\n\n  const { setCollections, setIsOpen, setQuery, setActiveItemId, setStatus } =\n    setters;\n\n  setQuery(query);\n  setActiveItemId(props.defaultActiveItemId);\n\n  if (!query && props.openOnFocus === false) {\n    const collections = store.getState().collections.map((collection) => ({\n      ...collection,\n      items: [],\n    }));\n\n    setStatus('idle');\n    setCollections(collections);\n    setIsOpen(\n      nextState.isOpen ?? props.shouldPanelOpen({ state: store.getState() })\n    );\n\n    // We make sure to update the latest resolved value of the tracked\n    // promises to keep late resolving promises from \"cancelling\" the state\n    // updates performed in this code path.\n    // We chain with a void promise to respect `onInput`'s expected return type.\n    const request = cancelable(\n      runConcurrentSafePromise(collections).then(() => Promise.resolve())\n    );\n\n    return store.pendingRequests.add(request);\n  }\n\n  setStatus('loading');\n\n  lastStalledId = props.environment.setTimeout(() => {\n    setStatus('stalled');\n  }, props.stallThreshold);\n\n  // We track the entire promise chain triggered by `onInput` before mutating\n  // the Autocomplete state to make sure that any state manipulation is based on\n  // fresh data regardless of when promises individually resolve.\n  // We don't track nested promises and only rely on the full chain resolution,\n  // meaning we should only ever manipulate the state once this concurrent-safe\n  // promise is resolved.\n  const request = cancelable(\n    runConcurrentSafePromise(\n      props\n        .getSources({\n          query,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        })\n        .then((sources) => {\n          return Promise.all(\n            sources.map((source) => {\n              return Promise.resolve(\n                source.getItems({\n                  query,\n                  refresh,\n                  state: store.getState(),\n                  ...setters,\n                })\n              ).then((itemsOrDescription) =>\n                preResolve<TItem>(\n                  itemsOrDescription,\n                  source.sourceId,\n                  store.getState()\n                )\n              );\n            })\n          )\n            .then(resolve)\n            .then((responses) => postResolve(responses, sources, store))\n            .then((collections) =>\n              reshape({ collections, props, state: store.getState() })\n            );\n        })\n    )\n  )\n    .then((collections) => {\n      // Parameters passed to `onInput` could be stale when the following code\n      // executes, because `onInput` calls may not resolve in order.\n      // If it becomes a problem we'll need to save the last passed parameters.\n      // See: https://codesandbox.io/s/agitated-cookies-y290z\n\n      setStatus('idle');\n\n      setCollections(collections as any);\n\n      const isPanelOpen = props.shouldPanelOpen({ state: store.getState() });\n\n      setIsOpen(\n        nextState.isOpen ??\n          ((props.openOnFocus && !query && isPanelOpen) || isPanelOpen)\n      );\n\n      const highlightedItem = getActiveItem(store.getState());\n\n      if (store.getState().activeItemId !== null && highlightedItem) {\n        const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n        source.onActive({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      }\n    })\n    .finally(() => {\n      setStatus('idle');\n\n      if (lastStalledId) {\n        props.environment.clearTimeout(lastStalledId);\n      }\n    });\n\n  return store.pendingRequests.add(request);\n}\n","import { flatten } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteCollection,\n  AutocompleteReshapeSourcesBySourceId,\n  AutocompleteState,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\n\ntype ReshapeParams<TItem extends BaseItem> = {\n  collections: Array<AutocompleteCollection<any>>;\n  props: InternalAutocompleteOptions<TItem>;\n  state: AutocompleteState<TItem>;\n};\n\nexport function reshape<TItem extends BaseItem>({\n  collections,\n  props,\n  state,\n}: ReshapeParams<TItem>) {\n  // Sources are grouped by `sourceId` to conveniently pick them via destructuring.\n  // Example: `const { recentSearchesPlugin } = sourcesBySourceId`\n  const originalSourcesBySourceId = collections.reduce<\n    AutocompleteReshapeSourcesBySourceId<TItem>\n  >(\n    (acc, collection) => ({\n      ...acc,\n      [collection.source.sourceId]: {\n        ...collection.source,\n        getItems() {\n          // We provide the resolved items from the collection to the `reshape` prop.\n          return flatten<any>(collection.items);\n        },\n      },\n    }),\n    {}\n  );\n\n  const { sourcesBySourceId } = props.plugins.reduce(\n    (acc, plugin) => {\n      if (plugin.reshape) {\n        return plugin.reshape(acc);\n      }\n      return acc;\n    },\n    {\n      sourcesBySourceId: originalSourcesBySourceId,\n      state,\n    }\n  );\n\n  const reshapeSources = props.reshape({\n    sourcesBySourceId,\n    sources: Object.values(sourcesBySourceId),\n    state,\n  });\n\n  // We reconstruct the collections with the items modified by the `reshape` prop.\n  return flatten(reshapeSources)\n    .filter(Boolean)\n    .map((source) => {\n      return {\n        source,\n        items: source.getItems(),\n      };\n    });\n}\n","import { noop } from '@algolia/autocomplete-shared';\n\nimport { onInput } from './onInput';\nimport { onKeyDown } from './onKeyDown';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  GetEnvironmentProps,\n  GetFormProps,\n  GetInputProps,\n  GetItemProps,\n  GetLabelProps,\n  GetListProps,\n  GetPanelProps,\n  GetRootProps,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem, isOrContainsNode, isSamsung } from './utils';\n\ninterface GetPropGettersOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  store: AutocompleteStore<TItem>;\n  props: InternalAutocompleteOptions<TItem>;\n}\n\nexport function getPropGetters<\n  TItem extends BaseItem,\n  TEvent,\n  TMouseEvent,\n  TKeyboardEvent\n>({ props, refresh, store, ...setters }: GetPropGettersOptions<TItem>) {\n  const getEnvironmentProps: GetEnvironmentProps = (providedProps) => {\n    const { inputElement, formElement, panelElement, ...rest } = providedProps;\n\n    function onMouseDownOrTouchStart(event: MouseEvent | TouchEvent) {\n      // The `onTouchStart`/`onMouseDown` events shouldn't trigger the `blur`\n      // handler when it's not an interaction with Autocomplete.\n      // We detect it with the following heuristics:\n      // - the panel is closed AND there are no pending requests\n      //   (no interaction with the autocomplete, no future state updates)\n      // - OR the touched target is the input element (should open the panel)\n      const isAutocompleteInteraction =\n        store.getState().isOpen || !store.pendingRequests.isEmpty();\n\n      if (!isAutocompleteInteraction || event.target === inputElement) {\n        return;\n      }\n\n      // @TODO: support cases where there are multiple Autocomplete instances.\n      // Right now, a second instance makes this computation return false.\n      const isTargetWithinAutocomplete = [formElement, panelElement].some(\n        (contextNode) => {\n          return isOrContainsNode(contextNode, event.target as Node);\n        }\n      );\n\n      if (isTargetWithinAutocomplete === false) {\n        store.dispatch('blur', null);\n\n        // If requests are still pending when the user closes the panel, they\n        // could reopen the panel once they resolve.\n        // We want to prevent any subsequent query from reopening the panel\n        // because it would result in an unsolicited UI behavior.\n        if (!props.debug) {\n          store.pendingRequests.cancelAll();\n        }\n      }\n    }\n\n    return {\n      // We do not rely on the native `blur` event of the input to close the\n      // panel, but rather on a custom `touchstart`/`mousedown` event outside\n      // of the autocomplete elements.\n      // This ensures we don't mistakenly interpret interactions within the\n      // autocomplete (but outside of the input) as a signal to close the panel.\n      // For example, clicking reset button causes an input blur, but if\n      // `openOnFocus=true`, it shouldn't close the panel.\n      // On touch devices, scrolling results (`touchmove`) causes an input blur\n      // but shouldn't close the panel.\n      onTouchStart: onMouseDownOrTouchStart,\n      onMouseDown: onMouseDownOrTouchStart,\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove(event: TouchEvent) {\n        if (\n          store.getState().isOpen === false ||\n          inputElement !== props.environment.document.activeElement ||\n          event.target === inputElement\n        ) {\n          return;\n        }\n\n        inputElement.blur();\n      },\n      ...rest,\n    };\n  };\n\n  const getRootProps: GetRootProps = (rest) => {\n    return {\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getFormProps: GetFormProps<TEvent> = (providedProps) => {\n    const { inputElement, ...rest } = providedProps;\n\n    return {\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: (event) => {\n        (event as unknown as Event).preventDefault();\n\n        props.onSubmit({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('submit', null);\n        providedProps.inputElement?.blur();\n      },\n      onReset: (event) => {\n        (event as unknown as Event).preventDefault();\n\n        props.onReset({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('reset', null);\n        providedProps.inputElement?.focus();\n      },\n      ...rest,\n    };\n  };\n\n  const getInputProps: GetInputProps<TEvent, TMouseEvent, TKeyboardEvent> = (\n    providedProps\n  ) => {\n    function onFocus(event: TEvent) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput({\n          event,\n          props,\n          query: store.getState().completion || store.getState().query,\n          refresh,\n          store,\n          ...setters,\n        });\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    const { inputElement, maxLength = 512, ...rest } = providedProps || {};\n    const activeItem = getActiveItem(store.getState());\n\n    const userAgent = props.environment.navigator?.userAgent || '';\n    const shouldFallbackKeyHint = isSamsung(userAgent);\n    const enterKeyHint =\n      activeItem?.itemUrl && !shouldFallbackKeyHint ? 'go' : 'search';\n\n    return {\n      'aria-autocomplete': 'both',\n      'aria-activedescendant':\n        store.getState().isOpen && store.getState().activeItemId !== null\n          ? `${props.id}-item-${store.getState().activeItemId}`\n          : undefined,\n      'aria-controls': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      value: store.getState().completion || store.getState().query,\n      id: `${props.id}-input`,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint,\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength,\n      type: 'search',\n      onChange: (event) => {\n        onInput({\n          event,\n          props,\n          query: (\n            (event as unknown as Event).currentTarget as HTMLInputElement\n          ).value.slice(0, maxLength),\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onKeyDown: (event) => {\n        onKeyDown({\n          event: event as unknown as KeyboardEvent,\n          props,\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onFocus,\n      // We don't rely on the `blur` event.\n      // See explanation in `onTouchStart`/`onMouseDown`.\n      // @MAJOR See if we need to keep this handler.\n      onBlur: noop,\n      onClick: (event) => {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (\n          providedProps.inputElement ===\n            props.environment.document.activeElement &&\n          !store.getState().isOpen\n        ) {\n          onFocus(event as unknown as TEvent);\n        }\n      },\n      ...rest,\n    };\n  };\n\n  const getAutocompleteId = (instanceId: string, sourceId?: number) => {\n    return typeof sourceId !== 'undefined'\n      ? `${instanceId}-${sourceId}`\n      : instanceId;\n  };\n\n  const getLabelProps: GetLabelProps = (providedProps) => {\n    const { sourceIndex, ...rest } = providedProps || {};\n\n    return {\n      htmlFor: `${getAutocompleteId(props.id, sourceIndex)}-input`,\n      id: `${getAutocompleteId(props.id, sourceIndex)}-label`,\n      ...rest,\n    };\n  };\n\n  const getListProps: GetListProps = (providedProps) => {\n    const { sourceIndex, ...rest } = providedProps || {};\n\n    return {\n      role: 'listbox',\n      'aria-labelledby': `${getAutocompleteId(props.id, sourceIndex)}-label`,\n      id: `${getAutocompleteId(props.id, sourceIndex)}-list`,\n      ...rest,\n    };\n  };\n\n  const getPanelProps: GetPanelProps<TMouseEvent> = (rest) => {\n    return {\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        (event as unknown as MouseEvent).preventDefault();\n      },\n      onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      },\n      ...rest,\n    };\n  };\n\n  const getItemProps: GetItemProps<any, TMouseEvent> = (providedProps) => {\n    const { item, source, sourceIndex, ...rest } = providedProps;\n\n    return {\n      id: `${getAutocompleteId(props.id, sourceIndex as number)}-item-${\n        item.__autocomplete_id\n      }`,\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n\n        const activeItem = getActiveItem(store.getState());\n\n        if (store.getState().activeItemId !== null && activeItem) {\n          const { item, itemInputValue, itemUrl, source } = activeItem;\n\n          source.onActive({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        }\n      },\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        (event as unknown as MouseEvent).preventDefault();\n      },\n      onClick(event) {\n        const itemInputValue = source.getItemInputValue({\n          item,\n          state: store.getState(),\n        });\n        const itemUrl = source.getItemUrl({\n          item,\n          state: store.getState(),\n        });\n\n        // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n        const runPreCommand = itemUrl\n          ? Promise.resolve()\n          : onInput({\n              event,\n              nextState: { isOpen: false },\n              props,\n              query: itemInputValue,\n              refresh,\n              store,\n              ...setters,\n            });\n\n        runPreCommand.then(() => {\n          source.onSelect({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        });\n      },\n      ...rest,\n    };\n  };\n\n  return {\n    getEnvironmentProps,\n    getRootProps,\n    getFormProps,\n    getLabelProps,\n    getInputProps,\n    getPanelProps,\n    getListProps,\n    getItemProps,\n  };\n}\n","export function isOrContainsNode(parent: Node, child: Node) {\n  return parent === child || parent.contains(child);\n}\n","import { onInput } from './onInput';\nimport {\n  ActionType,\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem } from './utils';\n\ninterface OnKeyDownOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: KeyboardEvent;\n  props: InternalAutocompleteOptions<TItem>;\n  store: AutocompleteStore<TItem>;\n}\n\nexport function onKeyDown<TItem extends BaseItem>({\n  event,\n  props,\n  refresh,\n  store,\n  ...setters\n}: OnKeyDownOptions<TItem>): void {\n  if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n    // eslint-disable-next-line no-inner-declarations\n    function triggerScrollIntoView() {\n      const nodeItem = props.environment.document.getElementById(\n        `${props.id}-item-${store.getState().activeItemId}`\n      );\n\n      if (nodeItem) {\n        if ((nodeItem as any).scrollIntoViewIfNeeded) {\n          (nodeItem as any).scrollIntoViewIfNeeded(false);\n        } else {\n          nodeItem.scrollIntoView(false);\n        }\n      }\n    }\n\n    // eslint-disable-next-line no-inner-declarations\n    function triggerOnActive() {\n      const highlightedItem = getActiveItem(store.getState());\n\n      if (store.getState().activeItemId !== null && highlightedItem) {\n        const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n        source.onActive({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      }\n    }\n\n    // Default browser behavior changes the caret placement on ArrowUp and\n    // ArrowDown.\n    event.preventDefault();\n\n    // When re-opening the panel, we need to split the logic to keep the actions\n    // synchronized as `onInput` returns a promise.\n    if (\n      store.getState().isOpen === false &&\n      (props.openOnFocus || Boolean(store.getState().query))\n    ) {\n      onInput({\n        event,\n        props,\n        query: store.getState().query,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        store.dispatch(event.key as ActionType, {\n          nextActiveItemId: props.defaultActiveItemId,\n        });\n\n        triggerOnActive();\n        // Since we rely on the DOM, we need to wait for all the micro tasks to\n        // finish (which include re-opening the panel) to make sure all the\n        // elements are available.\n        setTimeout(triggerScrollIntoView, 0);\n      });\n    } else {\n      store.dispatch(event.key, {});\n\n      triggerOnActive();\n      triggerScrollIntoView();\n    }\n  } else if (event.key === 'Escape') {\n    // This prevents the default browser behavior on `input[type=\"search\"]`\n    // from removing the query right away because we first want to close the\n    // panel.\n    event.preventDefault();\n\n    store.dispatch(event.key, null);\n\n    // Hitting the `Escape` key signals the end of a user interaction with the\n    // autocomplete. At this point, we should ignore any requests that are still\n    // pending and could reopen the panel once they resolve, because that would\n    // result in an unsolicited UI behavior.\n    store.pendingRequests.cancelAll();\n  } else if (event.key === 'Tab') {\n    store.dispatch('blur', null);\n\n    // Hitting the `Escape` key signals the end of a user interaction with the\n    // autocomplete. At this point, we should ignore any requests that are still\n    // pending and could reopen the panel once they resolve, because that would\n    // result in an unsolicited UI behavior.\n    store.pendingRequests.cancelAll();\n  } else if (event.key === 'Enter') {\n    // No active item, so we let the browser handle the native `onSubmit` form\n    // event.\n    if (\n      store.getState().activeItemId === null ||\n      store\n        .getState()\n        .collections.every((collection) => collection.items.length === 0)\n    ) {\n      // If requests are still pending when the panel closes, they could reopen\n      // the panel once they resolve.\n      // We want to prevent any subsequent query from reopening the panel\n      // because it would result in an unsolicited UI behavior.\n      if (!props.debug) {\n        store.pendingRequests.cancelAll();\n      }\n\n      return;\n    }\n\n    // This prevents the `onSubmit` event to be sent because an item is\n    // highlighted.\n    event.preventDefault();\n\n    const { item, itemInputValue, itemUrl, source } = getActiveItem(\n      store.getState()\n    )!;\n\n    if (event.metaKey || event.ctrlKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewTab({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.shiftKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewWindow({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.altKey) {\n      // Keep native browser behavior\n    } else {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigate({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n\n        return;\n      }\n\n      onInput({\n        event,\n        nextState: { isOpen: false },\n        props,\n        query: itemInputValue,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      });\n    }\n  }\n}\n","import { UserAgent, userAgents } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteEnvironment,\n  AutocompleteOptions,\n  AutocompleteOptionsWithMetadata,\n  AutocompletePlugin,\n  BaseItem,\n} from '.';\n\ntype AutocompleteMetadata = {\n  plugins: Array<{\n    name: string | undefined;\n    options: string[];\n  }>;\n  options: Record<string, string[]>;\n  ua: UserAgent[];\n};\n\ntype GetMetadataParams<TItem extends BaseItem, TData = unknown> = {\n  plugins: Array<AutocompletePlugin<TItem, TData>>;\n  options: AutocompleteOptionsWithMetadata<TItem>;\n};\n\nexport function getMetadata<TItem extends BaseItem, TData = unknown>({\n  plugins,\n  options,\n}: GetMetadataParams<TItem, TData>) {\n  const optionsKey = ((options.__autocomplete_metadata\n    ?.userAgents as UserAgent[]) || [])[0]?.segment;\n\n  const extraOptions = optionsKey\n    ? {\n        [optionsKey]: Object.keys(\n          (options.__autocomplete_metadata\n            ?.options as AutocompleteOptions<TItem>) || {}\n        ),\n      }\n    : {};\n\n  return {\n    plugins: plugins.map((plugin) => ({\n      name: plugin.name,\n      options: Object.keys(plugin.__autocomplete_pluginOptions || []),\n    })),\n    options: {\n      'autocomplete-core': Object.keys(options),\n      ...extraOptions,\n    },\n    ua: userAgents.concat(\n      (options.__autocomplete_metadata?.userAgents as any) || []\n    ),\n  };\n}\n\ntype InlineMetadataParams = {\n  metadata: AutocompleteMetadata;\n  environment: AutocompleteEnvironment;\n};\n\nexport function injectMetadata({\n  metadata,\n  environment,\n}: InlineMetadataParams) {\n  const isMetadataEnabled =\n    environment.navigator?.userAgent?.includes('Algolia Crawler');\n\n  if (isMetadataEnabled) {\n    const metadataContainer = environment.document.createElement('meta');\n    const headRef = environment.document.querySelector('head');\n\n    metadataContainer.name = 'algolia:metadata';\n\n    setTimeout(() => {\n      metadataContainer.content = JSON.stringify(metadata);\n      headRef!.appendChild(metadataContainer);\n    }, 0);\n  }\n}\n","import { AutocompleteState, BaseItem } from './types';\nimport { getActiveItem } from './utils';\n\ninterface GetCompletionProps<TItem extends BaseItem> {\n  state: AutocompleteState<TItem>;\n}\n\nexport function getCompletion<TItem extends BaseItem>({\n  state,\n}: GetCompletionProps<TItem>): string | null {\n  if (state.isOpen === false || state.activeItemId === null) {\n    return null;\n  }\n\n  return getActiveItem(state)?.itemInputValue || null;\n}\n","import { getItemsCount, invariant } from '@algolia/autocomplete-shared';\n\nimport { getCompletion } from './getCompletion';\nimport { Reducer } from './types';\nimport { getNextActiveItemId } from './utils';\n\nexport const stateReducer: Reducer = (state, action) => {\n  switch (action.type) {\n    case 'setActiveItemId': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'setQuery': {\n      return {\n        ...state,\n        query: action.payload,\n        completion: null,\n      };\n    }\n\n    case 'setCollections': {\n      return {\n        ...state,\n        collections: action.payload,\n      };\n    }\n\n    case 'setIsOpen': {\n      return {\n        ...state,\n        isOpen: action.payload,\n      };\n    }\n\n    case 'setStatus': {\n      return {\n        ...state,\n        status: action.payload,\n      };\n    }\n\n    case 'setContext': {\n      return {\n        ...state,\n        context: {\n          ...state.context,\n          ...action.payload,\n        },\n      };\n    }\n\n    case 'ArrowDown': {\n      const nextState = {\n        ...state,\n        activeItemId: action.payload.hasOwnProperty('nextActiveItemId')\n          ? action.payload.nextActiveItemId\n          : getNextActiveItemId(\n              1,\n              state.activeItemId,\n              getItemsCount(state),\n              action.props.defaultActiveItemId\n            ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'ArrowUp': {\n      const nextState = {\n        ...state,\n        activeItemId: getNextActiveItemId(\n          -1,\n          state.activeItemId,\n          getItemsCount(state),\n          action.props.defaultActiveItemId\n        ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'Escape': {\n      if (state.isOpen) {\n        return {\n          ...state,\n          activeItemId: null,\n          isOpen: false,\n          completion: null,\n        };\n      }\n\n      return {\n        ...state,\n        activeItemId: null,\n        query: '',\n        status: 'idle',\n        collections: [],\n      };\n    }\n\n    case 'submit': {\n      return {\n        ...state,\n        activeItemId: null,\n        isOpen: false,\n        status: 'idle',\n      };\n    }\n\n    case 'reset': {\n      return {\n        ...state,\n        activeItemId:\n          // Since we open the panel on reset when openOnFocus=true\n          // we need to restore the highlighted index to the defaultActiveItemId. (DocSearch use-case)\n\n          // Since we close the panel when openOnFocus=false\n          // we lose track of the highlighted index. (Query-suggestions use-case)\n          action.props.openOnFocus === true\n            ? action.props.defaultActiveItemId\n            : null,\n        status: 'idle',\n        query: '',\n      };\n    }\n\n    case 'focus': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n        isOpen:\n          (action.props.openOnFocus || Boolean(state.query)) &&\n          action.props.shouldPanelOpen({ state }),\n      };\n    }\n\n    case 'blur': {\n      if (action.props.debug) {\n        return state;\n      }\n\n      return {\n        ...state,\n        isOpen: false,\n        activeItemId: null,\n      };\n    }\n\n    case 'mousemove': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'mouseleave': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n      };\n    }\n\n    default:\n      invariant(\n        false,\n        `The reducer action ${JSON.stringify(action.type)} is not supported.`\n      );\n\n      return state;\n  }\n};\n","import { createAlgoliaInsightsPlugin } from '@algolia/autocomplete-plugin-algolia-insights';\n\nimport { checkOptions } from './checkOptions';\nimport { createStore } from './createStore';\nimport { getAutocompleteSetters } from './getAutocompleteSetters';\nimport { getDefaultProps } from './getDefaultProps';\nimport { getPropGetters } from './getPropGetters';\nimport { getMetadata, injectMetadata } from './metadata';\nimport { onInput } from './onInput';\nimport { stateReducer } from './stateReducer';\nimport {\n  AutocompleteApi,\n  AutocompleteOptions as AutocompleteCoreOptions,\n  BaseItem,\n  AutocompleteSubscribers,\n} from './types';\n\nexport interface AutocompleteOptionsWithMetadata<TItem extends BaseItem>\n  extends AutocompleteCoreOptions<TItem> {\n  /**\n   * @internal\n   */\n  __autocomplete_metadata?: Record<string, unknown>;\n}\n\nexport function createAutocomplete<\n  TItem extends BaseItem,\n  TEvent = Event,\n  TMouseEvent = MouseEvent,\n  TKeyboardEvent = KeyboardEvent\n>(\n  options: AutocompleteOptionsWithMetadata<TItem>\n): AutocompleteApi<TItem, TEvent, TMouseEvent, TKeyboardEvent> {\n  checkOptions(options);\n\n  const subscribers: AutocompleteSubscribers<TItem> = [];\n  const props = getDefaultProps(options, subscribers);\n  const store = createStore(stateReducer, props, onStoreStateChange);\n\n  const setters = getAutocompleteSetters({ store });\n  const propGetters = getPropGetters<\n    TItem,\n    TEvent,\n    TMouseEvent,\n    TKeyboardEvent\n  >({ props, refresh, store, navigator: props.navigator, ...setters });\n\n  function onStoreStateChange({ prevState, state }) {\n    props.onStateChange({\n      prevState,\n      state,\n      refresh,\n      navigator: props.navigator,\n      ...setters,\n    });\n  }\n\n  function refresh() {\n    return onInput({\n      event: new Event('input'),\n      nextState: { isOpen: store.getState().isOpen },\n      props,\n      navigator: props.navigator,\n      query: store.getState().query,\n      refresh,\n      store,\n      ...setters,\n    });\n  }\n\n  if (\n    options.insights &&\n    !props.plugins.some((plugin) => plugin.name === 'aa.algoliaInsightsPlugin')\n  ) {\n    const insightsParams =\n      typeof options.insights === 'boolean' ? {} : options.insights;\n    props.plugins.push(createAlgoliaInsightsPlugin(insightsParams));\n  }\n\n  props.plugins.forEach((plugin) =>\n    plugin.subscribe?.({\n      ...setters,\n      navigator: props.navigator,\n      refresh,\n      onSelect(fn) {\n        subscribers.push({ onSelect: fn });\n      },\n      onActive(fn) {\n        subscribers.push({ onActive: fn });\n      },\n      onResolve(fn) {\n        subscribers.push({ onResolve: fn });\n      },\n    })\n  );\n\n  injectMetadata({\n    metadata: getMetadata({ plugins: props.plugins, options }),\n    environment: props.environment,\n  });\n\n  return {\n    refresh,\n    navigator: props.navigator,\n    ...propGetters,\n    ...setters,\n  };\n}\n","import {\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n  Reducer,\n} from './types';\nimport { createCancelablePromiseList } from './utils';\n\ntype OnStoreStateChange<TItem extends BaseItem> = ({\n  prevState,\n  state,\n}: {\n  prevState: AutocompleteState<TItem>;\n  state: AutocompleteState<TItem>;\n}) => void;\n\nexport function createStore<TItem extends BaseItem>(\n  reducer: Reducer,\n  props: InternalAutocompleteOptions<TItem>,\n  onStoreStateChange: OnStoreStateChange<TItem>\n): AutocompleteStore<TItem> {\n  let state = props.initialState;\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action, payload) {\n      const prevState = { ...state };\n      state = reducer(state, {\n        type: action,\n        props,\n        payload,\n      });\n\n      onStoreStateChange({ state, prevState });\n    },\n    pendingRequests: createCancelablePromiseList(),\n  };\n}\n","import { CancelablePromise } from '.';\n\nexport type CancelablePromiseList<TValue> = {\n  /**\n   * Add a cancelable promise to the list.\n   *\n   * @param cancelablePromise The cancelable promise to add.\n   */\n  add(cancelablePromise: CancelablePromise<TValue>): CancelablePromise<TValue>;\n  /**\n   * Cancel all pending promises.\n   *\n   * Requests aren't actually stopped. All pending promises will settle, but\n   * attached handlers won't run.\n   */\n  cancelAll(): void;\n  /**\n   * Whether there are pending promises in the list.\n   */\n  isEmpty(): boolean;\n};\n\nexport function createCancelablePromiseList<\n  TValue\n>(): CancelablePromiseList<TValue> {\n  let list: Array<CancelablePromise<TValue>> = [];\n\n  return {\n    add(cancelablePromise) {\n      list.push(cancelablePromise);\n\n      return cancelablePromise.finally(() => {\n        list = list.filter((item) => item !== cancelablePromise);\n      });\n    },\n    cancelAll() {\n      list.forEach((promise) => promise.cancel());\n    },\n    isEmpty() {\n      return list.length === 0;\n    },\n  };\n}\n","import { flatten } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteApi,\n  AutocompleteCollection,\n  AutocompleteStore,\n  BaseItem,\n} from './types';\n\ninterface GetAutocompleteSettersOptions<TItem extends BaseItem> {\n  store: AutocompleteStore<TItem>;\n}\n\nexport function getAutocompleteSetters<TItem extends BaseItem>({\n  store,\n}: GetAutocompleteSettersOptions<TItem>) {\n  const setActiveItemId: AutocompleteApi<TItem>['setActiveItemId'] = (\n    value\n  ) => {\n    store.dispatch('setActiveItemId', value);\n  };\n\n  const setQuery: AutocompleteApi<TItem>['setQuery'] = (value) => {\n    store.dispatch('setQuery', value);\n  };\n\n  const setCollections: AutocompleteApi<TItem>['setCollections'] = (\n    rawValue\n  ) => {\n    let baseItemId = 0;\n    const value = rawValue.map<AutocompleteCollection<TItem>>((collection) => ({\n      ...collection,\n      // We flatten the stored items to support calling `getAlgoliaResults`\n      // from the source itself.\n      items: flatten(collection.items as any).map((item: any) => ({\n        ...item,\n        __autocomplete_id: baseItemId++,\n      })),\n    }));\n\n    store.dispatch('setCollections', value);\n  };\n\n  const setIsOpen: AutocompleteApi<TItem>['setIsOpen'] = (value) => {\n    store.dispatch('setIsOpen', value);\n  };\n\n  const setStatus: AutocompleteApi<TItem>['setStatus'] = (value) => {\n    store.dispatch('setStatus', value);\n  };\n\n  const setContext: AutocompleteApi<TItem>['setContext'] = (value) => {\n    store.dispatch('setContext', value);\n  };\n\n  return {\n    setActiveItemId,\n    setQuery,\n    setCollections,\n    setIsOpen,\n    setStatus,\n    setContext,\n  };\n}\n"],"names":["debounce","fn","time","timerId","undefined","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","flatten","values","reduce","a","b","concat","autocompleteId","getItemsCount","state","collections","sum","collection","items","isPrimitive","obj","Object","isEqual","first","second","keys","_i","_Object$keys","key","noop","userAgents","segment","version","createClickedEvent","_ref","item","index","__autocomplete_indexName","positions","findIndex","x","objectID","queryID","__autocomplete_queryID","algoliaSource","_slicedToArray","arr","i","isArray","_arrayWithHoles","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","push","value","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_excluded","_excluded2","_typeof","_toConsumableArray","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","_objectWithoutProperties","source","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","arg","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_toPropertyKey","configurable","writable","chunk","chunkSize","chunks","objectIDs","mapToInsightsParamsApi","params","map","param","_ref2","createSearchInsightsApi","searchInsights","_split$map2","major","minor","canSendHeaders","split","sendToInsights","method","payloads","_items$0$__autocomple","__autocomplete_algoliaCredentials","headers","appId","apiKey","init","setUserToken","userToken","clickedObjectIDsAfterSearch","clickedObjectIDs","_len2","_key2","clickedFilters","_len3","_key3","convertedObjectIDsAfterSearch","_len4","_key4","convertedObjectIDs","_len5","_key5","convertedFilters","_len6","_key6","viewedObjectIDs","_len7","_key7","acc","_ref3","_ref4","payload","_ref5","viewedFilters","_len8","_key8","createViewedEvents","itemsByIndexName","current","_acc$current$__autoco","indexName","isAlgoliaInsightsHit","hit","ALGOLIA_INSIGHTS_VERSION","ALGOLIA_INSIGHTS_SRC","sendViewedObjectIDs","onItemsChange","insights","insightsEvents","event","eventName","createAlgoliaInsightsPlugin","options","_getOptions","_ref8","onSelect","_ref9","onActive","getOptions","providedInsightsClient","insightsClient","onSelectEvent","onActiveEvent","callback","window","safelyRunOnBrowser","pointer","AlgoliaAnalyticsObject","queue","environment","errorMessage","script","document","createElement","async","src","onerror","console","error","body","appendChild","cause","loadInsights","previousItems","debouncedOnStateChange","isOpen","subscribe","setContext","algoliaInsightsPlugin","__algoliaSearchParameters","clickAnalytics","_ref6","onStateChange","_ref7","__autocomplete_pluginOptions","createInternalCancelablePromise","promise","initialState","then","onfulfilled","onrejected","createCallback","catch","finally","onfinally","onCancelList","cancel","isCanceled","callbacks","cancelable","onResult","fallback","getNextActiveItemId","moveAmount","baseIndex","itemCount","defaultActiveItemId","numericIndex","getActiveItem","collectionIndex","collectionsCount","nextValue","activeItemId","getCollectionFromActiveItemId","isOffsetFound","counter","previousItemsOffset","currentCollection","getRelativeActiveItemId","itemInputValue","getItemInputValue","itemUrl","getItemUrl","regex","getDefaultProps","props","pluginSubscribers","_props$id","plugins","debug","openOnFocus","placeholder","autoFocus","stallThreshold","shouldPanelOpen","reshape","sources","id","query","completion","status","context","_props$onStateChange","_x$onStateChange","onSubmit","_props$onSubmit","_x$onSubmit","onReset","_props$onReset","_x$onReset","getSources","Promise","all","plugin","Boolean","seenSourceIds","resolve","maybeSource","sourceId","includes","Error","JSON","stringify","defaultSource","setIsOpen","onResolve","__default","normalizedSource","getNormalizedSources","nested","_x$onSelect","_x$onActive","_x$onResolve","navigator","navigate","location","assign","navigateNewTab","windowReference","open","focus","navigateNewWindow","isDescription","execute","preResolve","itemsOrDescription","description","contextParameters","requesterId","_state$context$key","requests","queries","transformResponse","searchClient","container","find","_container$items","request","maybeDescription","responses","postResolve","store","matches","response","results","transform","rawResults","result","_hits","hits","facetHits","_facetHits","facetHit","label","count","_highlightResult","highlighted","mapToAlgoliaResponse","getState","every","basePromiseId","latestResolvedId","latestResolvedValue","lastStalledId","runConcurrentSafePromise","currentPromiseId","onInput","_ref$nextState","nextState","refresh","setters","setCollections","setQuery","setActiveItemId","setStatus","_nextState$isOpen","pendingRequests","add","getItems","originalSourcesBySourceId","sourcesBySourceId","_nextState$isOpen2","isPanelOpen","highlightedItem","getPropGetters","getAutocompleteId","instanceId","getEnvironmentProps","providedProps","inputElement","formElement","panelElement","onMouseDownOrTouchStart","isEmpty","some","contextNode","parent","child","contains","dispatch","cancelAll","onTouchStart","onMouseDown","onTouchMove","activeElement","blur","getRootProps","rest","role","getFormProps","action","noValidate","_providedProps$inputE","preventDefault","_providedProps$inputE2","_excluded3","getLabelProps","sourceIndex","_excluded5","htmlFor","getInputProps","_props$environment$na","onFocus","_ref2$maxLength","maxLength","_excluded4","activeItem","shouldFallbackKeyHint","userAgent","match","isSamsung","enterKeyHint","autoComplete","autoCorrect","autoCapitalize","spellCheck","type","onChange","currentTarget","onKeyDown","triggerScrollIntoView","nodeItem","getElementById","scrollIntoViewIfNeeded","scrollIntoView","triggerOnActive","nextActiveItemId","metaKey","ctrlKey","shiftKey","altKey","onBlur","onClick","getPanelProps","onMouseLeave","getListProps","_excluded6","getItemProps","_excluded7","__autocomplete_id","onMouseMove","getMetadata","_","_options$__autocomple","_options$__autocomple2","_options$__autocomple3","optionsKey","__autocomplete_metadata","extraOptions","ua","getCompletion","_getActiveItem","stateReducer","hasOwnProperty","subscribers","reducer","onStoreStateChange","list","prevState","cancelablePromise","createStore","rawValue","baseItemId","getAutocompleteSetters","propGetters","Event","insightsParams","_plugin$subscribe","_environment$navigato","_environment$navigato2","metadata","metadataContainer","headRef","querySelector","content","injectMetadata"],"mappings":"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"}